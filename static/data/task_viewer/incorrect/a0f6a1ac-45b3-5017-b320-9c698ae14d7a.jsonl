{"role": "system", "content": "You are an intelligent agent with expertise in **retrieving useful context from both the DuckDB database and the Milvus vectorstore through SQL execution and similarity search** and **answering user questions**. You will be given a natural language question concerning PDF files, along with the schema of both the database and the vectorstore. Your ultimate goal is to answer the input question with pre-defined answer format. The DuckDB database contains all parsed content of raw PDF files, while the Milvus vectorstore encodes specific column cells from the database as vectors. You can predict executable actions, interact with the hybrid environment (including database and vectorstore) across multiple turns, and retrieve necessary context until you are confident in resolving the question.\n\n--------\n\n## Task Description\nEach task consists of the following parts:\n\n[Question]: User question regarding the PDF, e.g., Is there any ...?\n[Answer Format]: it describes the format of the final answer, e.g., the answer is \"Yes\" or \"No\" without punctuation.\n[Anchor PDF]: Optional, a python str or list, the PDF(s) you must use to answer the question.\n[Reference PDF]: Optional, a python str or list, the PDF(s) you may use to answer the question.\n[Conference]: Optional, a python str or list, the conference(s) and year(s) of the relevant papers for retrieval.\n[Database Schema]: A detailed serialized schema of the DuckDB database for reference when generating SQL queries. It includes 1) tables, 2) columns and their data types, 3) descriptions for these schema items, and 4) primary key and foreign key constraints.\n[Vectorstore Schema]: A detailed serialized schema of the Milvus vectorstore for reference when generating executable retrieval actions with specific parameters. It includes 1) collections, 2) fields, 3) encodable (table, column) pairs in the relational database where the vectorized content originates, and 4) grammar for valid filter rules.\n\n\n--------\n\n## Action and Observation Space\nAll allowable action types include ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']. Here is the detailed specification in MARKDOWN format:\n\n### Action Type\nRetrieveFromDatabase\n\n### Description\nGenerate an SQL query to retrieve the desired information from the DuckDB database. Please refer to the concrete database schema to produce a valid and executable SQL.\n\n### Observation\nThe observation space is the execution result of the SQL query. You do not need to worry about the actual execution, we will perform it for you. If the SQL failed to execute, we will return the error message. Extremely long SQL output will be truncated.\n\n### Syntax and Parameters (MARKDOWN Format)\nRetrieveFromDatabase(sql: str)\n- sql: str, required. The concrete DuckDB SQL query to execute and retrieve results.\n\n### Use Cases\n\n#### Case 1\nGet the abstract of the paper with paper_id '12345678' from the metadata table in the DuckDB database.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT abstract FROM metadata WHERE paper_id = '12345678';\")\n\n\n#### Case 2\nFind which page in the paper with paper_id '12345678' contains Figure 3.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT pages.page_number FROM images JOIN pages JOIN metadata ON images.ref_page_id = pages.page_id AND pages.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = '12345678' AND images.image_caption LIKE '%Figure 3%';\")\n\n\n----\n\n### Action Type\nClassicRetrieve\n\n### Description\nGiven a query text, retrieve relevant context from the Milvus vectorstore.\n\n### Observation\nThe observation space is the retrieved top-ranked entries from the Milvus vectorstore based on queries.\n\n### Syntax and Parameters (MARKDOWN Format)\nClassicRetrieve(query: str, limit: int = 5)\n- query: str, required. The query text will be encoded and used to search for relevant context. You can rephrase the original user question to obtain a more clear and structured query requirement.\n- limit: int, optional, default to 5. The number of top-ranked context to retrieve. Please set it to a positive integer to limit the number of returned results. Extremely large limit values may be truncated.\n\n### Use Cases\n\n#### Case 1\nRetrieve top 5 pieces about a certain topic.\n\n[Action]: ClassicRetrieve(query='Is there any work about the topic structured RAG?')\n\n\n#### Case 2\nRetrieve detailed information about the learning rate for training the ResNet model. The top 4 most relevant entries will be returned based on the query.\n\n[Action]: ClassicRetrieve(query=\"What's the learning rate for training the ResNet model?\", limit=4)\n\n\n----\n\n### Action Type\nGenerateAnswer\n\n### Description\nWhen you take this action, the retrieved results suffice to answer the user question. PLEASE STRICTLY ADHERE TO THE ANSWER FORMAT FOR THE CURRENT QUESTION.\n\n### Observation\nThere is no observation for this terminal action, since it indicates the completion of the task and end of the interaction.\n\n### Syntax and Parameters (MARKDOWN Format)\nGenerateAnswer(answer: Any)\n- answer: Any, required. The final answer to the user question. Please adhere to the answer format for the current question.\n\n### Use Cases\n\n#### Case 1\nThe answer to the user question is 42.\n\n[Action]: GenerateAnswer(answer=42)\n\n\n#### Case 2\nThe answer to the user question is a list of strings: ['Results', 'Discussion'].\n\n[Action]: GenerateAnswer(answer=['Results', 'Discussion'])\n\n\n\n--------\n\n## Interaction Framework\n\nThe main interaction procedure proceeds like this:\n\n----\n\n[Thought]: ... reasoning process, why to take this action ...\n[Action]: ... which action to take, please strictly conform to the action specification ...\n[Observation]: ... execution results or error message after taking the action ...\n\n... # more interleaved triplets of ([Thought], [Action], [Observation])\n\n[Thought]: ... reasoning process to produce the final answer ...\n[Action]: ... the terminate action `GenerateAnswer`, there is no further observation ...\n\n----\n\nIn general, the main interaction loop consists of an interleaved of triplets ([Thought], [Action], [Observation]), except the last `GenerateAnswer` action which does not have \"[Observation]:\". You need to predict the \"[Thought]: ...\" followed by the \"[Action]: ...\" for each turn, and we will execute your action in the environment and provide the \"[Observation]: ...\" for the previous action.\n\n--------\n\n## Suggestions or Hints for Agent Interaction\n\n1. Explore multiple retrieval strategies. For example:\n- Experiment with different (table, column) pairs to extract diverse types of information.\n- Query various embedding models (collections) to find the most relevant context.\n\n2. Combine both structured and unstructured data. Concretely:\n- Use SQL queries to retrieve precise facts and structured data. Pay special attention to morphological variations in cell values.\n- Perform similarity searches in the vectorstore to capture semantic relationships and hidden insights.\n\n3. Iterate and refine:\n- If SQL execution result is not satisfactory, try alternative SQL queries to explore the database content carefully.\n- If the vector-based neural retrieval is insufficient, try alternative approaches or parameter settings.\n- Use your findings to validate or enrich the final response.\n\n4. Ensure confidence. That is, only make a final decision when you are confident that the retrieved information fully addresses the userâ€™s query.\n\n\nRemember that, for each question, you only have 20 interaction turns at most. Now, let's start!\n"}
{"role": "user", "content": "[Question]: Which one is newer among the public datasets used in the main experiment of this paper(\"Query Routing for Homogeneous Tools: An Instantiation in the RAG Scenario\")? Which link may I refer to to get this dataset?\n[Answer Format]: Your answer should be a python list like [\"string1\", \"string2\"]. The first element should be the name(abbrievation) of the dataset. The second element should be a string, representing the link to the dataset.\n[Anchor PDF]: '047a3835-6aad-5b49-b47d-bc183f79681f'\n[Database Schema]: The database schema for /home/htc981/workspace/project/HNS-RAG/data/database/ai_research/ai_research.sql is as follows:\n/* database ai_research: This database contains information about AI research papers. Each PDF file is represented or parsed via different views, e.g., pages, sections, figures, tables, and references. We also extract the concrete content inside each concrete element via OCR.\n*/\n/* table metadata: This table stores metadata about each paper, including the number of pages, paper path and paper id.\n*/\nCREATE TABLE IF NOT EXISTS metadata (\n\tpaper_id UUID, -- A unique identifier for this paper.\n\ttitle VARCHAR, -- The title of this paper.\n\tabstract VARCHAR, -- The abstract of this paper.\n\tnum_pages INTEGER, -- The number of pages in this paper.\n\tconference_full VARCHAR, -- The full name of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tconference_abbreviation VARCHAR, -- The abbreviation of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tpub_year INTEGER, -- The year when this paper was published.\n\tvolume VARCHAR, -- The volume of the conference where this paper was published. e.g. findings.\n\tdownload_url VARCHAR, -- The url from which the paper can be downloaded.\n\tbibtex VARCHAR, -- The bibtex of this paper.\n\tauthors VARCHAR[], -- The full names of authors of this paper.\n\tpdf_path VARCHAR, -- The path to the PDF file of this paper.\n\ttldr VARCHAR, -- A brief summary of the paper's main idea or findings generated by LLM based on title and abstract.\n\ttags VARCHAR[], -- Keywords representing the paper's topics, methods, or applications generated by LLM based on title and abstract.,\n\tPRIMARY KEY (paper_id)\n);\n/* table pages: This table stores information of the pages in the papers, including their content, size and their order within the paper. The pagesare extracted using PyMuPDF.\n*/\nCREATE TABLE IF NOT EXISTS pages (\n\tpage_id UUID, -- A unique identifier for each page.\n\tpage_number INTEGER, -- The page number in the current paper, starting from 1.\n\tpage_width INTEGER, -- The pixel width of the current page.\n\tpage_height INTEGER, -- The pixel height of the current page.\n\tpage_content VARCHAR, -- The content of the page.\n\tpage_summary VARCHAR, -- A brief summary of the page content, generated by LLM, focusing on key information and describing the page content.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (page_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table images: This table stores the information about images in each paper. The images are extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS images (\n\timage_id UUID, -- The unique identifier of the image.\n\timage_caption VARCHAR, -- The caption of this image, \"\" if it doesn't have one.\n\timage_summary VARCHAR, -- A brief summary of the image, generated by LLM, focusing on key information and describing the image.\n\tbounding_box INTEGER[4], -- The bounding box of the figure in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height which are used to determine the shape of the rectangle.\n\tordinal INTEGER, -- Each figure is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (image_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table chunks: This table contains the information of each chunk of text (chunk size = 512 tokens with no overlapping) in each page of the paper. A chunk is a sub-text that is extracted from the main text using langchain, such as a sentence or a paragraph.\n*/\nCREATE TABLE IF NOT EXISTS chunks (\n\tchunk_id UUID, -- A unique identifier for each chunk of text.\n\ttext_content VARCHAR, -- The text content of the current chunk.\n\tordinal INTEGER, -- Each chunk is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (chunk_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table tables: This table stores information about tables extracted from pages using MinerU, including content (in html format), bounding box and summary of each table generated by LLM.\n*/\nCREATE TABLE IF NOT EXISTS tables (\n\ttable_id UUID, -- A unique identifier for each table.\n\ttable_caption VARCHAR, -- Caption of the table, showing key information of the table.\n\ttable_content VARCHAR, -- The content of the table in html format.\n\ttable_summary VARCHAR, -- A brief summary of the table content generated by LLM, focusing on key information and describing the table content.\n\tbounding_box INTEGER[4], -- The bounding box of the table in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height.\n\tordinal INTEGER, -- Each table is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this table is located.,\n\tPRIMARY KEY (table_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table sections: This table contains the text content of each section in the paper, e.g. `Introduction`, `Experiment`, `Conclusion`, `Reference`. The sections are extracted using PyMuPDF or MinerU.\n*/\nCREATE TABLE IF NOT EXISTS sections (\n\tsection_id UUID, -- A unique identifier for each section of text.\n\tsection_title VARCHAR, -- The title of the current section.\n\tsection_content VARCHAR, -- The text content of the current section.\n\tsection_summary VARCHAR, -- A brief summary of the section content generated by LLM, focusing on key information and describing the section content.\n\tordinal INTEGER, -- Each section is labeled with one distinct integer number in the paper, which starts from 0.\n\tpage_numbers INTEGER[], -- A list of page numbers where current section is located in the relevant paper.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (section_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table equations: This table stores information about equations extracted from pages using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS equations (\n\tequation_id UUID, -- A unique identifier for each equation.\n\tequation_content VARCHAR, -- Content of the equation in latex format.\n\tordinal INTEGER, -- Each equation is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the paper ID in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the page ID in the `pages` table where this equation is located.,\n\tPRIMARY KEY (equation_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table reference: This table stores information about references extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS reference (\n\treference_id UUID, -- A unique identifier for each reference.\n\treference_content VARCHAR, -- Content of the reference.\n\tordinal INTEGER, -- Each reference is labeled with one distinct integer number according to its order in the paper, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this reference is located.,\n\tPRIMARY KEY (reference_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n[Vectorstore Schema]: The vectorstore schema for ai_research is as follows. You can try collections with different encoding models or modalities:\n[\n    {\n        \"collection_name\": \"text_bm25_en\",\n        \"modality\": \"text\",\n        \"embed_type\": \"bm25\",\n        \"embed_model\": \"en\",\n        \"description\": \"This collection is used to store the sparse embeddings generated by the BM25 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric inner-product (IP).\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"dtype\": \"INT64\",\n                \"is_primary\": true,\n                \"description\": \"The unique id for each encoded text vector in this collection.\"\n            },\n            {\n                \"name\": \"vector\",\n                \"dtype\": \"SPARSE_FLOAT_VECTOR\",\n                \"description\": \"The encoded sparse vector of the text content generated by the BM25 model. Note that, the raw text content can be uniquely identified by the triplet fields below: `table_name`, `column_name`, `primary_key`.\"\n            },\n            {\n                \"name\": \"pdf_id\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The unique id of the PDF file stored in the relational database that the encoded text belongs to. This field can be used to quickly filter the search space.\"\n            },\n            {\n                \"name\": \"page_number\",\n                \"dtype\": \"INT16\",\n                \"description\": \"The page number in the PDF file that the encoded text belongs to (starting from 1). This field can be used to quickly filter the search space. Value -1 means unknown.\"\n            },\n            {\n                \"name\": \"table_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which table in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"column_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which column under `table_name` in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"primary_key\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The primary key value of `table_name` (or which row) in the relational database that the text content belongs to. Note that, the triplet (`table_name`, `column_name`, `primary_key`) can be used to construct a one-to-one mapping between the `text` field in the current vectorstore and the cell entry in the relational database.\"\n            }\n        ]\n    },\n    {\n        \"collection_name\": \"text_sentence_transformers_all_minilm_l6_v2\",\n        \"modality\": \"text\",\n        \"embed_type\": \"sentence_transformers\",\n        \"embed_model\": \"all-MiniLM-L6-v2\",\n        \"description\": \"This collection is used to store the embeddings generated by the all-MiniLM-L6-v2 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric COSINE.\",\n        \"fields\": \"The fields of this collection are similar to the `text_bm25_en` collection.\"\n    }\n]\n\nThe following lists all encodable (table_name, column_name, encode_modality) information from the corresponding DuckDB database, where the encoded vector entries are sourced. Note that, for text modality, we directly encode cell values from the `table_name.column_name`; for image modality, we encode the cropped images for `page_number` in `pdf_id` with bounding boxes from `table_name.column_name`. You can leverage them for filter condition during similarity search:\n[\n    [\n        \"metadata\",\n        \"title\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"abstract\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"bibtex\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"tldr\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_content\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_summary\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_caption\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_summary\",\n        \"text\"\n    ],\n    [\n        \"chunks\",\n        \"text_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_caption\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_summary\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_title\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_content\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_summary\",\n        \"text\"\n    ],\n    [\n        \"equations\",\n        \"equation_content\",\n        \"text\"\n    ],\n    [\n        \"reference\",\n        \"reference_content\",\n        \"text\"\n    ]\n]\n\nHere are the operators that you can use in the filtering condition for the vectorstore:\n{\n    \"operators\": {\n        \"logical\": [\n            {\n                \"symbol\": \"not\",\n                \"example\": \"not expr\",\n                \"description\": \"True if expr is false.\"\n            },\n            {\n                \"symbol\": \"and\",\n                \"example\": \"expr1 and expr2\",\n                \"description\": \"True if both expr1 and expr2 are true.\"\n            },\n            {\n                \"symbol\": \"or\",\n                \"example\": \"expr1 or expr2\",\n                \"description\": \"True if either expr1 or expr2 are true.\"\n            }\n        ],\n        \"binary arithmetic\": [\n            {\n                \"symbol\": \"+\",\n                \"example\": \"a + b\",\n                \"description\": \"Add the two operands.\"\n            },\n            {\n                \"symbol\": \"-\",\n                \"example\": \"a - b\",\n                \"description\": \"Subtract the second operand from the first operand.\"\n            },\n            {\n                \"symbol\": \"*\",\n                \"example\": \"a * b\",\n                \"description\": \"Multiply the two operands.\"\n            },\n            {\n                \"symbol\": \"/\",\n                \"example\": \"a / b\",\n                \"description\": \"Divide the first operand by the second operand.\"\n            },\n            {\n                \"symbol\": \"**\",\n                \"example\": \"a ** b\",\n                \"description\": \"Raise the first operand to the power of the second operand.\"\n            },\n            {\n                \"symbol\": \"%\",\n                \"example\": \"a % b\",\n                \"description\": \"Divide the first operand by the second operand and yield the remainder portion.\"\n            }\n        ],\n        \"relational\": [\n            {\n                \"symbol\": \"<\",\n                \"example\": \"a < b\",\n                \"description\": \"True if a is less than b.\"\n            },\n            {\n                \"symbol\": \">\",\n                \"example\": \"a > b\",\n                \"description\": \"True if a is greater than b.\"\n            },\n            {\n                \"symbol\": \"==\",\n                \"example\": \"a == b\",\n                \"description\": \"True if a is equal to b. Please use **two** equal signs for equality comparison.\"\n            },\n            {\n                \"symbol\": \"!=\",\n                \"example\": \"a != b\",\n                \"description\": \"True if a is not equal to b.\"\n            },\n            {\n                \"symbol\": \"<=\",\n                \"example\": \"a <= b\",\n                \"description\": \"True if a is less than or equal to b.\"\n            },\n            {\n                \"symbol\": \">=\",\n                \"example\": \"a >= b\",\n                \"description\": \"True if a is greater than or equal to b.\"\n            },\n            {\n                \"symbol\": \"in\",\n                \"example\": \"a in [b, c, ...]\",\n                \"description\": \"True if a is equal to any of the values in the list.\"\n            }\n        ],\n        \"array operations\": [\n            {\n                \"symbol\": \"[]\",\n                \"example\": \"bbox[0]\",\n                \"description\": \"This expression gets the first element in array bbox. For example, 'bbox[0] < 50' evaluates to true if the value of bbox[0] is less than 50.\"\n            },\n            {\n                \"symbol\": \"array_contains\",\n                \"example\": \"array_contains(bbox, 100)\",\n                \"description\": \"This expression evaluates to true if array bbox contains element 100.\"\n            },\n            {\n                \"symbol\": \"array_length\",\n                \"example\": \"array_length(int_array) == 4\",\n                \"description\": \"This expression evaluates to true if int_array contains exactly 4 elements.\"\n            }\n        ]\n    },\n    \"use cases\": [\n        {\n            \"example\": \"table_name == 'chunks' and column_name == 'text_content'\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and column_name equal to 'text_content'.\"\n        },\n        {\n            \"example\": \"table_name == 'chunks' and primary_key in ['123', '456', '789']\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and primary_key equal to any of the values in the list ['123', '456', '789'].\"\n        },\n        {\n            \"example\": \"bbox[0] + bbox[2] <= 100 and bbox[1] + bbox[3] <= 300 and pdf_id == '123456' and page_number == 1\",\n            \"description\": \"For image modality, filter results to include only image regions that are entirely within the upper-left quadrant of page 1 in the PDF with ID '123456', assuming the page dimensions are 200 (width) x 600 (height).\"\n        }\n    ]\n}"}
{"role": "assistant", "content": "[Thought]: To answer the question, I need to find the public datasets used in the main experiment of the paper \"Query Routing for Homogeneous Tools: An Instantiation in the RAG Scenario\". I will start by retrieving the relevant sections or content from the paper using the paper ID '047a3835-6aad-5b49-b47d-bc183f79681f'.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f' AND section_title LIKE '%Experiment%';\")"}
{"role": "user", "content": "[Observation]:\n{\"section_content\":\"\"}\n{\"section_content\":\"Datasets and Training details We focus on the QA scenario. The adopted datasets include public datasets CDQA (Xu et al., 2024) and WebQA (Li et al., 2016), as well as a private dataset PrivateTimeQA1 that we construct ourselves. Data processing details, dataset statistics, and training details are shown in Appendix A.\\nBaselines We use multiple LLMs, including Qwen-Max2 (Bai et al., 2023), ChatGPT, and GPT4 in all of our experiments, due to their strong reasoning ability. The used search tools include Quark, Bing, and Google. Considering that the LLM can\\nWe also report the average cost of each method. For simplicity, we set the average costs of Quark, Bing, and Google to 0.33, 2, and 1, respectively.\"}\n\nIn total, 2 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The section content indicates that the datasets used in the main experiment are CDQA (Xu et al., 2024) and WebQA (Li et al., 2016). To determine which one is newer, I need to compare the publication years. I will retrieve the publication year for each dataset.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT pub_year FROM metadata WHERE title LIKE '%CDQA%' OR title LIKE '%WebQA%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which suggests that the dataset titles might not be exact matches or are not stored in the `metadata` table. I will try a different approach by searching for the dataset names in the `sections` table content.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f' AND section_content LIKE '%CDQA%' OR section_content LIKE '%WebQA%';\")"}
{"role": "user", "content": "[Observation]:\n{\"section_content\":\"Experimental Setup\\n4.1\\nEvaluation Dataset\\nWe evaluated the performance of xRAG primarily on knowledge-intensive tasks which encompass\\na range of challenges: (1) three Open Domain Question Answering datasets that address questions\\non a wide array of topics: Natural Questions [41], TriviaQA [33], and Web Questions [8]. (2) one\\nMultihop Question Answering dataset, HotpotQA [81], which necessitates multi-step reasoning to\\ngenerate answers. (3) one Long-form Question Answering dataset, TruthfulQA [50], that requires the\\ngeneration of long-form and truthful responses. (4) one fact-checking dataset, FactKG [39], which\\nchallenges the model to use complex reasoning to determine the factual accuracy of given claims.\\n5\\nIn line with the KILT [63] and GenRead [84], we assessed three ODQA datasets and HotpotQA using\\nthe Exact Match (EM) metric, FactKG with Accuracy, and for the long-form QA, we used both the\\nF1 score and Rouge-L (R-L) score. These tasks demand a broad spectrum of world knowledge and\\nhave been extensively explored in the retrieval-augmentation literature [42, 22, 35, 10, 25, 70].\\n4.2\\nImplementation Details\\nTo demonstrate the versatility of our framework, we choose two backbones, differing in scale\\nand architecture: Mistral-7b [27] and Mixtral-8x7b [28]. For the retrieval corpus, we utilized\\nthe Wikipedia dump from December 2021, which was pre-processed into passages following the\\nmethodology described in [26]. This resulted in approximately 37 million passages, each averaging\\n180 tokens in length. Our default retrieval model is the SFR [1], which, at the time of writing this\\npaper, holds the leading position on the MTEB leaderboard [60]. We use top-1 ranked document for\\ninclusion in our instruction-tuning dataset and for the evaluation of downstream tasks. More details\\nare provided in Appendix D. Code is available at: https:\\/\\/github.com\\/Hannibal046\\/xRAG.\\n4.3\\nBaselines\\nIn determining appropriate baselines for comparison, we adhered to a fundamental principle: the\\nselected compression methods must support the general plug-and-play capability of retrieval augmen-\\ntation. This entails that they should function effectively without the need for dataset-specific tuning\\n[79, 76], or any alteration to the parameters of LLMs [76, 59]. Furthermore, given the extensive\\nvolume of the retrieval corpus, it is essential that these compression methods demonstrate memory\\nefficiency, specifically by not requiring the storage of LLM activations for each individual token\\n[59, 20, 15]. With these criteria in mind, our evaluation compares xRAG to the following baselines:\\n(I) Primarily, we consider two variants of LLMs: one that operates without retrieval augmentation\\nand another that includes it. These serve as the lower and upper performance bounds for our study of\\ncompression techniques, respectively. (II) Additionally, our comparisons extend to LLMLingua [29],\\na plug-and-play approach for context compression. (III) Taking inspiration from [59], we incorporate\\na method of discrete compression using TF-IDF. This approach yields compression rates comparable\\nto those achieved by xRAG and serves as the lower bound for discrete compression.\\nTable 1: Experimental results on six downstream tasks. The best results are in bold and the second\\nbest are with underscore. Percentage in the brackets denotes the relative improvement over non-\\nretrieval setting. LLMs are frozen during the experiments and retrieved documents are set the same\\nfor different compression methods. \\u2021 and \\u2020 denotes different compression ratio.\\nNQ\\nTriviaQA\\nWebQA\\nHotpotQA\\nTrutufulQA\\nFactKG\\nAverage\\n# Doc\\nLength\\nTask Type\\nOpen-Domain QA\\n(EM)\\nMultihop QA\\n(EM)\\nLong-form QA\\n(F1\\/R-L)\\nFact Checking\\n(Acc)\\nMistral-7b\\nw\\/o retrieval\\n30.25\\n57.08\\n34.89\\n27.02\\n26.23\\n25.51\\n54.78\\n36.54 (0.0%)\\n0\\nw retrieval\\n42.71\\n65.88\\n37.84\\n38.79\\n26.50\\n25.92\\n67.76\\n43.63 (19.4%)\\n175.1\\n*with Compression\\nLLMLingua \\u2020\\n30.64\\n57.94\\n32.63\\n29.91\\n25.70\\n25.10\\n64.17\\n38.01 (4.0%)\\n98.6\\nLLMLingua \\u2021\\n28.81\\n57.09\\n32.33\\n29.13\\n26.10\\n25.39\\n63.57\\n37.48 (2.5%)\\n61.1\\nTF-IDF\\n30.25\\n58.49\\n35.43\\n26.62\\n26.33\\n25.83\\n59.56\\n37.49 (2.6%)\\n1\\nxRAG\\n39.10\\n65.77\\n39.40\\n34.05\\n28.10\\n27.71\\n63.08\\n42.46 (16.2%)\\n1\\nMixtral-8x7b\\nw\\/o retrieval\\n41.99\\n71.10\\n40.31\\n32.87\\n25.60\\n24.90\\n62.64\\n42.76 (0.0%)\\n0\\nw retrieval\\n45.15\\n70.34\\n41.26\\n43.46\\n27.10\\n25.80\\n70.42\\n46.22 (8.0%)\\n175.1\\n*with Compression\\nLLMLingua\\u2020\\n37.65\\n67.70\\n36.02\\n35.66\\n25.99\\n25.39\\n67.98\\n42.32 (-1.0%)\\n96.6\\nLLMLingua\\u2021\\n37.81\\n67.81\\n35.78\\n35.27\\n25.68\\n25.00\\n68.03\\n44.17 (-1.3%)\\n61.1\\nTF-IDF\\n41.19\\n69.94\\n41.63\\n32.05\\n26.80\\n26.00\\n66.17\\n43.41 (1.4%)\\n1\\nxRAG\\n47.28\\n74.14\\n44.50\\n39.66\\n27.80\\n26.64\\n68.20\\n46.91 (9.7%)\\n1\\n5\"}\n{\"section_content\":\"Experimental Results\\n5.1\\nKnowledge Intensive Tasks\\nIn Table 1, we present our main results. Across both Mistral-7b and Mixtral-8x7b configurations, we\\nobserve a consistent and significant improvement when retrieval augmentation is applied (p-value\\n6\\n< 0.05), although the gains are more modest for the larger model configurations. This trend aligns\\nwith observations reported by [70, 51]. Further analysis on the efficacy of various compression\\ntechniques reveals that xRAG outperforms other approaches by a large margin. Remarkably, xRAG\\nnot only reduces the token count drastically\\u2014from 175.1 to a single token\\u2014but also maintains robust\\nperformance levels. In some instances, xRAG\\u2019s performance is comparable to, or even exceeds, that\\nof the uncompressed models. Specifically, in the Mistral-7b configuration, xRAG achieves nearly the\\nsame performance improvement as the uncompressed model (16.6% compared to 19.4%), and in the\\nMixtral-8x7b configuration, it surpasses the uncompressed model (9.7% compared to 8.0%). One\\npossible reason lies in the vulnerability of current RAG system when the irrelevant or misleading\\ndocuments are presented, a topic detailed discussed in \\u00a76.1. We also observe that xRAG performs\\nwell in tasks that require document understanding, such as TriviaQA. However, in tasks that demand\\nreasoning over document, like HotpotQA and FactKG, xRAG lags behind by a considerable gap.\\nTable 2: Comparison of RAG and xRAG performance in CUDA Time and GFLOPS.\\nCUDA Time (ms)\\nGFLOPs\\nRAG\\nxRAG\\nImprovement\\nRAG\\nxRAG\\nImprovement\\nFactKG\\n431.5\\n215.6\\nx2.01\\n4683.8\\n1289.5\\nx3.63\\nNQ\\n918.7\\n611.3\\nx1.51\\n1338.6\\n384.0\\nx3.48\\nTriviaQA\\n807.1\\n512.1\\nx1.57\\n1667.2\\n492.3\\nx3.38\\nWebQA\\n872.6\\n577.3\\nx1.51\\n1405.1\\n386.8\\nx3.63\\nAverage\\nx1.64\\nx3.53\\n5.2\\nComputational Efficiency\\nIn this section, we conduct a thorough assessment of our framework\\u2019s computational efficiency\\nand memory management. To rigorously evaluate our model, we employed Torch Profiler3 to\\nmeasure the CUDA Time (milliseconds) and Giga FLOPs of both the RAG and xRAG models across\\nfour real-world datasets. In these evaluations, the Mistral-7b, operating in bfloat16 inference mode,\\nserved as the base LLM. CUDA Time and GFLOPs were calculated on an average per batch basis\\nwith a fixed batch size, and GFLOPs were normalized by the number of generated tokens. These\\nexperiments were performed on the same computational hardware, specifically an Nvidia A100 and\\nan AMD EPYC 7V12 64-Core Processor. As depicted in Table 2, despite variations in prompt and\\ngeneration lengths across the datasets, xRAG significantly outpaced the RAG model, achieving a\\nx1.64 increase in CUDA Time efficiency and a x3.53 reduction in GFLOPs.\\n6\"}\n{\"section_content\":\"Analysis\\n6.1\\nEvaluation Beyond the Overall Score\\nAlthough retrieval augmentation generally boosts performance as shown by aggregate metrics, it may\\nnot uniformly benefit all instances. In certain cases, the retrieval system might provide irrelevant or\\neven misleading information, leading to incorrect answers that were previously correct [83, 76, 5].\\nTo enable a more fine-grained evaluation, we introduce two novel metrics: the Resilience Rate and\\nthe Boost Rate. The resilience rate quantifies the percentage of instances in which the system\\u2019s\\nresponses remain correct both before and after retrieval augmentation, highlighting the system\\u2019s\\nstability and robustness. Conversely, the boost rate measures the percentage of instances that were\\ninitially answered incorrectly but were rectified following the introduction of a retrieved document,\\nthereby assessing the efficacy of retrieval augmentation. An ideal RAG system should have both high\\nresilience rate and boost rate.\\nIn Figure 4, we display these metrics for the uncompressed RAG and two compression methods:\\nLLMLingua and xRAG. Surprisingly, although retrieval augmentation generally enhances perfor-\\nmance, the resilience rate for RAG averages only 75.2%, indicating that retrieval can adversely\\naffect about one-quarter of previously correct answers. In contrast, xRAG demonstrates considerable\\n3https:\\/\\/pytorch.org\\/docs\\/stable\\/profiler.html#module-torch.profiler\\n7\\nrobustness across all evaluated datasets. This robustness largely stems from xRAG\\u2019s ability to main-\\ntain an unbiased stance toward the internal knowledge representation of the LLM, especially when\\nconfronted with noisy retrieval content. Similar trends are noted in [51, 55], where search-augmented\\ninstruction learning is shown to bolster the robustness of language models. However, xRAG still lags\\nbehind RAG in boost rate, particularly in multi-hop reasoning tasks. It is crucial to note that a high\\nresilience rate does not necessarily mean that the LLM disregards the provided information, which\\ncould potentially lead to a reduced boost rate. A comparative analysis with LLMLingua indicates\\nthat xRAG is not only more robust but also more effective.\\nNQ\\nWebQA\\nHotpotQA\\nTriviaQA\\n70\\n80\\n90\\n67.6\\n66.7\\n72.4\\n85.4\\n81.0\\n85.1\\n81.5\\n92.0\\n68.7\\n66.6\\n78.9\\n86.9\\nResilience Rate\\nLLMLingua\\nxRAG\\nRAG\\nNQ\\nWebQA\\nHotpotQA\\nTriviaQA\\n20\\n30\\n15.4\\n12.2\\n17.2\\n22.2\\n20.0\\n17.8\\n15.7\\n26.6\\n26.8\\n16.0\\n25.7\\n29.0\\nBoost Rate\\nFigure 4: Resilience rate and boost rate of three augmentation methods: LLMLinuga, xRAG and\\nRAG over a Mixtral-8x7b baseline without retrieval augmentation.\\n6.2\\nWhat makes xRAG effective?\\nTable 3: Ablation on different training strategy for xRAG.\\nNQ\\nTriviaQA\\nWebQA\\nHotpotQA\\nAveraged\\nPerformance\\nResilience\\nBoost\\nMistral-7b\\nxRAG\\n39.10\\n65.77\\n39.40\\n34.05\\n44.58\\n82.3%\\n22.2%\\nw\\/o finetune\\n30.14\\n59.48\\n35.19\\n26.70\\n37.87\\n66.6%\\n20.8%\\nw\\/o pretrain\\n31.25\\n59.07\\n41.19\\n24.32\\n38.95\\n79.8%\\n14.1%\\nw\\/o nll\\n35.46\\n65.27\\n39.57\\n31.80\\n43.02\\n83.7%\\n19.4%\\nw\\/o self-kd\\n34.99\\n64.33\\n39.22\\n27.45\\n41.49\\n76.2%\\n20.8%\\nw LoRA\\n35.71\\n60.14\\n40.45\\n22.91\\n39.80\\n76.0%\\n18.0%\\nMixtral-8x7b\\nxRAG\\n47.48\\n74.14\\n44.50\\n39.66\\n51.45\\n84.9%\\n20.0%\\nw\\/o finetune\\n34.46\\n64.08\\n34.89\\n30.43\\n40.96\\n65.9%\\n17.8%\\nw\\/o pretrain\\n42.54\\n71.17\\n47.44\\n31.23\\n48.09\\n85.0%\\n14.2%\\nw\\/o nll\\n45.10\\n72.85\\n45.03\\n37.11\\n50.02\\n84.8%\\n18.9%\\nw\\/o self-kd\\n42.38\\n72.26\\n44.73\\n32.41\\n47.94\\n79.8%\\n18.9%\\nThis section delves into a thorough evaluation of various elements that contribute to xRAG\\u2019s overall\\nperformance, focusing on its training strategy, the blend of datasets used and the effect of different\\nembedding models. Due to the space limit, we present the last factor in Appendix E.\\n1. Training Strategy We carefully ablate four optimization choices: pretraining, instruction tuning,\\nand two optimization objectives\\u2014language modeling (nll) and self-distillation (self-kd). We also\\ntrain a Mistral-7b with LoRA on our instruction tuning dataset to rule out the possibility that our\\nimprovement simply comes from tuning on more data. The outcomes are presented in Table 3.\\nOur analysis reveals that the interplay of different training strategies significantly contributes to the\\n8\\nRefer to the background document and answer the question:\\nBackground:\\u00a0The Old Man and the Key | \\\" several \\\"\\\"washed-up\\\"\\\" celebrities, was composed by Alf Clausen and\\nwritten by Vitti. Even though Vitti received sole credit for writing the song, parts of the lyrics were written by Simpsons\\nwriter Carolyn Omine, which were then revised by fellow writer Matt Selman. Selman was especially satisfied with the\\nrhyme sung by Mr. T; he stated that whenever he feels down, he thinks of that rhyme and that it \\\"boosts [him] up\\ninside.\\\" The episode features American actress Olympia Dukakis as Grampa's love interest Zelda. American\\ncomedian Bill Saluga also makes an appearance, as his television character Ray J. Johnson. The owner of the\\nminivan is portrayed by series regular Hank Azaria, who imitated the voice of Clark Gable for the character.\\\"\\nQuestion: Which US comedian\\/actor is credited with saying 'A man is only as old as the woman he feels'?\\nOutput:\\u00a0Bill Saluga.\\nAnswer the question:\\nQuestion: Which US comedian\\/actor is\\ncredited with saying 'A man is only as old\\nas the woman he feels'?\\nOutput:\\u00a0\\u00a0Groucho Marx.\\nRefer to the background document and answer the question:\\nBackground: [X]\\nQuestion:\\u00a0Which US comedian\\/actor is credited with saying 'A man is only\\nas old as the woman he feels'?\\nOutput: Groucho Marx.\\nRAG\\nw\\/o Retrieval\\nxRAG\\nFigure 5: Given the misleading document, RAG model tend to generate a wrong answer based on the\\ndocument, while xRAG demonstrate its robustness by leveraging the internal knowledge of LLM.\\nperformance of our framework. In the case of Mistral-7b, pretraining and finetuning phases are\\nof equal significance to the end results. However, for Mixtral-8x7b, the impact of pretraining is\\nnotably diminished, likely due to the larger model\\u2019s enhanced capability to incorporate multi-modality\\ninformation. Furthermore, we find that during finetuning, self-distillation is more important than\\nlanguage modeling. The primary advantage of self-distillation lies in bolstering the resilience rate of\\nthe xRAG system. Optimization with nll loss tends to cause an overreliance on context information,\\nrendering the system more vulnerable when the retriever fails to fetch relevant documents.\\nTable 4: Abaltion results on different data selection strategy.\\n# Train\\nNQ\\nTriviaQA\\nWebQA\\nHotpotQA\\nAverage\\nPerformance\\nResilience\\nBoost\\nxRAG (Mistral-7b)\\n955k\\n39.10\\n65.77\\n39.40\\n34.05\\n44.58\\n82.3%\\n22.2%\\nw RC only\\n488k\\n36.98\\n65.77\\n41.39\\n32.82\\n44.24\\n81.9%\\n22.4%\\nw QA only\\n385k\\n36.45\\n65.57\\n41.14\\n31.80\\n43.74\\n80.5%\\n22.1%\\nw Summ only\\n81k\\n36.37\\n64.95\\n40.40\\n31.98\\n43.42\\n78.8%\\n22.8%\\nII. Instruction-tuning Dataset Blend As discussed in \\u00a73.3, our instruction-tuning dataset primarily\\ncomprises three categories: reading comprehension, open-domain QA, and text summarization. To\\nexplore the effects of different data blends, we instruction-tune three xRAG model variants, each\\nusing data from these distinct categories. The results are shown in Table4. Our analysis reveals\\nthat among the dataset blends, reading comprehension data most significantly enhances the xRAG\\nmodel\\u2019s performance, as evidenced by both high resilience and boost rates. Intriguingly, when tuned\\nsolely with summarization data, xRAG still manages to deliver strong performance on QA datasets\\nit has never been exposed to. This finding underscores that the advantages of instruction tuning for\\nxRAG are not rooted in task-specific knowledge. Instead, they derive from the model\\u2019s improved\\nability to utilize projected context information effectively.\\n6.3\\nCase Study\\nIn Figure 5, we show one interesting case about the robustness of xRAG. When retrieval system\\nprovide misleading content, standard RAG would overly rely on the document and generate answer\\nthat are faithful to the document while not factually true. Our xRAG model opt to rely on the internal\\n9\\nknowledge of LLM and being robust to the misleading content. In Appendix H, we include more\\ncases about xRAG including several error analysis.\\n7\"}\n{\"section_content\":\"Analysis on Mistral-7b\\nIn Figure 6, we list the Resilience rate and Boost Rate on Mistral-7b model, which exhibit same\\npattern with Mixtral-8x7b model.\\nNQ\\nWebQA\\nHotpotQA\\nTriviaQA\\n70\\n80\\n90\\n62.6\\n64.8\\n73.1\\n79.9\\n79.6\\n80.9\\n78.7\\n89.8\\n68.4\\n67.1\\n76.5\\n84.0\\nResilience Rate\\nLLMLingua\\nxRAG\\nRAG\\nNQ\\nWebQA\\nHotpotQA\\nTriviaQA\\n20\\n30\\n40\\n17.0\\n15.0\\n14.0\\n27.8\\n19.9\\n19.4\\n15.4\\n33.9\\n31.1\\n20.8\\n24.7\\n41.1\\nBoost Rate\\nFigure 6: Robustness and effectiveness analysis on 4 QA datasets with Mistral-7b model.\\n20\\nG\"}\n\n... # only display 4 rows in JSON format, more are truncated due to length constraint based on max_tokens (5000)"}
{"role": "assistant", "content": "[Thought]: The section content mentions the datasets CDQA and WebQA, but does not provide the publication years. I will use the vectorstore to find the publication years of these datasets.\n[Action]:\nClassicRetrieve(query='Publication year of CDQA and WebQA', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.5126,\"pdf_id\":\"2c222763-f33b-5cfa-8897-5d217aaf9142\",\"page_number\":22,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"a6cc0f23-a44a-5596-bc73-f23e47678562\",\"text\":\"Wikipedia Key-Value VQA (WKVVQA), SquadVQA, and TydiVQA.\\n12010\"}\n{\"score\":0.5076,\"pdf_id\":\"2cc7f650-699e-580d-aad4-04fc17b5868f\",\"page_number\":9,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7727f18d-dd48-5a10-8f37-4823da267422\",\"text\":\"2022a; Shen et al., 2022a) have discussed several\\ndrawbacks of evaluating PQA systems on this\\ndataset: 1) The ground-truth answers are quite\\nnoisy, since they are the top-voted community\\nanswers posted by non-expert users. 2) There are\\nno annotations for assessing the relevance of the\\nsupporting documents, which may cast potential\\nrisks on the reliability of the PQA systems. To\\nfacilitate better evaluations, many other data re-\\nsources for PQA studies have been constructed\"}\n{\"score\":0.5005,\"pdf_id\":\"99fb769b-a814-5bd5-9e78-aceb27fbe270\",\"page_number\":18,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"a1f762f9-4b73-5712-91d6-3e0390068cd3\",\"text\":\"are also several works representing Wikipedia ta-\\nbles, such papers are TAPAS (Herzig et al., 2020),\\nStrucBERT (Trabelsi et al., 2022), Table2vec\\n(Zhang et al., 2019), TaBERT (Yin et al., 2020),\\nTABBIE (Iida et al., 2021), TabStruc (Zhang et al.,\\n2020a), TabGCN (Pramanick and Bhattacharya,\\n2021), RCI (Glass et al., 2021), TURL (Deng et al.,\\n2022), and TableFormer (Yang et al., 2022). Some\\npapers such as (Yu et al., 2018, 2021; Eisenschlos\\net al., 2020; Neeraja et al., 2021; M\\u00fcller et al., 2021;\"}\n{\"score\":0.5004,\"pdf_id\":\"59319c1b-2108-5482-832b-09925bba3ee2\",\"page_number\":3,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"61b00440-b69c-5777-8a16-e09f5d19b06b\",\"text\":\"Table 1: REPLIQA statistics (number of documents, number of questions, average number of words per\\ndocument, percentage of questions marked as UNANSWERABLE) and release date by test split. Split REPLIQA0\\nwas released in June 2024, REPLIQA1 is released together with this paper, and the rest will be released over\\nthe next six months. The \\u2217indicates that REPLIQA0 has been exposed to LLM providers as of May 2024, as\"}\n{\"score\":0.4965,\"pdf_id\":\"59319c1b-2108-5482-832b-09925bba3ee2\",\"page_number\":5,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"3af1cdb5-52b3-575d-b9b9-b862137b3b25\",\"text\":\"4Ten documents from REPLIQA0 (listed in Eq. (1) of Appendix B) have been so exposed to online APIs as\\nearly as January 2024.\\n5\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The vectorstore results did not provide the publication years for CDQA and WebQA. I will try a more specific query to find the publication years of these datasets.\n[Action]:\nClassicRetrieve(query='Publication year of CDQA and WebQA datasets', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.6004,\"pdf_id\":\"30fe6aa3-6ec6-509b-a086-1587b1ea3cc5\",\"page_number\":24,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"d4e2b3c1-c758-5c8c-911a-5420fa7aff27\",\"text\":\"composed of OANC, CC BY-SA 3.0, and CC BY 3.0. The license of the CoQA dataset is composed of CC BY-SA\\n4.0, MSR-LA, and Apache 2.0. The license of the WiA-A\\/T datasets is composed of CC BY-NC 3.0, CC BY-NC\\n4.0, and GNU General Public License v3.0.\\n8781\"}\n{\"score\":0.5974,\"pdf_id\":\"2cc7f650-699e-580d-aad4-04fc17b5868f\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"decfd09d-e914-544f-b4d0-e21db96edb83\",\"text\":\"porting documents D that are relevant to the given\\nquestion, the goal is to generate a natural language\\nanswer a = {ta\\n1, ta\\n2, ...} based on the question q\\nand supporting documents D.\\n2.4.2\\nDatasets & Evaluation Protocols\\nThe Amazon dataset can be directly adopted for\\ngeneration-based PQA. Another popular dataset\\nused for geneartive PQA is from JD (Gao et al.,\\n2019), which is one of the largest e-commerce web-\\nsites in China. In total, the JD dataset contains\"}\n{\"score\":0.594,\"pdf_id\":\"81c4dca5-6d24-5e36-9c80-95cb3eda5901\",\"page_number\":1,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"9e0185b7-22c0-56d4-a499-e67f9767dd69\",\"text\":\"related to conversation history. Recent years have\\nwitnessed an upsurge of interest in both dataset\\nbuilding for CQA and models\\/approaches to CQA.\\nPrevious CQA datasets have been constructed ei-\\nther for text span extracting tasks (Choi et al., 2018;\\nReddy et al., 2019; Campos et al., 2020; Saeidi\\n\\u2217Corresponding author.\\net al., 2018) or SQL-style table search tasks (Iyyer\\net al., 2017; Yu et al., 2019b). All these datasets are\\nin English. Public CQA datasets in other languages\"}\n{\"score\":0.5895,\"pdf_id\":\"24bac045-d2aa-589f-b358-207c1bce1887\",\"page_number\":15,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"b0814168-2d1a-5fdd-9445-f7161b0e3296\",\"text\":\"B\\nDatasets Information and Licenses\\nGQA:\\nThe GQA: [20] dataset, consists of 22M questions about various day-to-day images.\\nLicense: N\\/A\\nDataset\\nwebsite:\\nhttps:\\/\\/cs.stanford.edu\\/people\\/dorarad\\/gqa\\/download.\\nhtml\\nMM-Vet:\\nThe MM-Vet [50] dataset, defining 6 core VL capabilities and examines the 16 integra-\\ntions of interest derived from the capability combination.\\nLicense:\\nApache License.\\nhttps:\\/\\/github.com\\/yuweihao\\/MM-Vet\\/blob\\/main\\/\\nLICENSE\\nDataset website: https:\\/\\/github.com\\/yuweihao\\/MM-Vet\\/tree\\/main\\nSQA:\"}\n{\"score\":0.5882,\"pdf_id\":\"7d1cdb4d-7220-564e-8b3c-d310c9773b22\",\"page_number\":1,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"269ceeb9-11c9-5ffd-a1e5-d8ae1f19001b\",\"text\":\"the benefit of solving multiple ODQA datasets, our\\n1599\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The vectorstore results still did not provide the publication years for CDQA and WebQA. I will try a more direct approach by searching the metadata table for the publication year of the paper that mentions these datasets.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT pub_year FROM metadata WHERE paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f';\")"}
{"role": "user", "content": "[Observation]:\n{\"pub_year\":2024}\n\nIn total, 1 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The publication year of the paper is 2024. Since the paper mentions both CDQA and WebQA, and WebQA is known to be from 2016, CDQA must be newer. Now, I need to find the link to the CDQA dataset.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT download_url FROM metadata WHERE paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f';\")"}
{"role": "user", "content": "[Observation]:\n{\"download_url\":\"https:\\/\\/aclanthology.org\\/2024.findings-emnlp.598.pdf\"}\n\nIn total, 1 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The download URL for the paper is provided. However, the link to the CDQA dataset is not directly available in the metadata. I will use the vectorstore to find the link to the CDQA dataset by searching for mentions of the dataset and any associated URLs.\n[Action]:\nClassicRetrieve(query='Link to CDQA dataset', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.6336,\"pdf_id\":\"5374d01c-5318-5595-8cf2-d57059fa4585\",\"page_number\":7,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"3714957f-d140-573a-9582-e7aaee8a6c91\",\"text\":\"We would like to thank Liviu Copoiu and Patrick Bordes for help on assembling the CDS dataset\\nfor the MPP task.\\n7\"}\n{\"score\":0.6162,\"pdf_id\":\"e8908fcc-c3ee-555d-8dd4-137fa9654b3a\",\"page_number\":18,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"79abebd1-5a59-5e6d-9d12-0a7f3c483673\",\"text\":\"\\u2022 The data is hosted in the open Github repository associated with the website\\ngithub.com\\/sdqesdataset\\/sdqesdataset.github.io\\/. The repository will be maintained\\nby the authors.\\n2. To ensure accessibility, the supplementary materials for datasets must include the following:\\n(a) Links to access the dataset and its metadata.\\n\\u2022 Both data and metadata are hosted in the Github repository associated with the\\nwebsite github.com\\/sdqesdataset\\/sdqesdataset.github.io\\/.\"}\n{\"score\":0.6099,\"pdf_id\":\"e40faea3-a766-592d-969c-e4c0d9ff2ae4\",\"page_number\":23,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"9a015ab7-9d21-5b76-8bfa-de2604a5e389\",\"text\":\"Is there a repository that links to any or all papers or systems that use the\\ndataset?\\nIf so, please provide a link or other access point.\\nThis is the first paper using this dataset, however if there are other papers or systems use\\nthis dataset in the future, we will include a link in our website.\\nWhat (other) tasks could the dataset be used for?\\nAs discussed in our paper, our dataset offers numerous avenues for further exploration, such\"}\n{\"score\":0.6086,\"pdf_id\":\"4acabc9a-bab8-5525-b481-78472dd0ffa8\",\"page_number\":14,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"e2c2284f-ea51-56e3-ac58-e881597d02bb\",\"text\":\"A\\nAppendix \\/ supplemental material\\nA.1\\nDataset availability\\nThe dataset can be accessed using the link: Dataset. The existing structure is shared in three different\\nfolders. Each of them contain a README file which explains the structure. We have provided\\ndatasets in standard format (detection:COCO, MOT: MOT challenge format) which makes it easier\\nfor other to load dataset with standard libraries. Our plan is to submit the entire dataset on publicly\"}\n{\"score\":0.5973,\"pdf_id\":\"782496e9-6fa3-5dfc-80ca-84fb404412cd\",\"page_number\":23,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"6f1e8f1c-e59a-5098-b465-1d61187b21b4\",\"text\":\"but not in an open-access fashion.\\nQ39 Is there a repository that links to any or all papers or systems that use the dataset?\\n\\u2022 [Yes] Such a list will be made available on the website of the project.\\nQ40 What (other) tasks could the dataset be used for?\\n23\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The vectorstore results did not provide a direct link to the CDQA dataset. However, the paper itself might contain the link. I will retrieve the relevant section content from the paper to find the link.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f' AND section_title LIKE '%Dataset%' LIMIT 1;\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which suggests that the section title might not exactly match \"Dataset\". I will try a broader search to find the section that might contain the link to the CDQA dataset.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f' AND section_content LIKE '%CDQA%' LIMIT 1;\")"}
{"role": "user", "content": "[Observation]:\n{\"section_content\":\"Datasets and Training details We focus on the QA scenario. The adopted datasets include public datasets CDQA (Xu et al., 2024) and WebQA (Li et al., 2016), as well as a private dataset PrivateTimeQA1 that we construct ourselves. Data processing details, dataset statistics, and training details are shown in Appendix A.\\nBaselines We use multiple LLMs, including Qwen-Max2 (Bai et al., 2023), ChatGPT, and GPT4 in all of our experiments, due to their strong reasoning ability. The used search tools include Quark, Bing, and Google. Considering that the LLM can\\nWe also report the average cost of each method. For simplicity, we set the average costs of Quark, Bing, and Google to 0.33, 2, and 1, respectively.\"}\n\nIn total, 1 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The section content mentions the CDQA dataset but does not provide a direct link. I will now search the paper's content for the link to the CDQA dataset.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT page_content FROM pages WHERE ref_paper_id = '047a3835-6aad-5b49-b47d-bc183f79681f' AND page_content LIKE '%CDQA%' LIMIT 1;\")"}
{"role": "user", "content": "[Observation]:\n{\"page_content\":\"where we set L as Mean Square Error and initialize\\nM as RoBERTa (Liu et al., 2019). The objective\\ndirectly simulates the score of the LLM calling\\neach tool to solve each query, enabling it to handle\\nunseen cases where only the query is available.\\n3.3\\nAssignment Strategies\\nGiven search tools {Tm}M\\nm=1, we denote their us-\\nage costs as {Cm}M\\nm=1. Assuming the user has\\na collection of queries {qn}N\\nn=1 that need to be\\nprocessed, we first use M to obtain the predicted\\nscores {pm\\nn }M\\nm=1 for the query qn. Then, inspired\\nby (Lu et al., 2023; \\u0160akota et al., 2024; Shnitzer\\net al., 2023), we consider the following strategies\\nto assign queries to corresponding tools.\\n(1) Fixed-Tool: LLM always calls a fixed tool\\nto handle queries. (2) Best-Performance: for qn\\nand the predicted {pm\\nn }M\\nm=1, the LLM selects Tm\\u22c6\\n(m\\u22c6= arg maxm pm\\nn ) with the maximal predicted\\nscore to handle qn. (3) Cost-Saving: This strategy\\naims to ensure that the average predicted score,\\ni.e., pm\\nn , exceeds a user-defined threshold while\\nminimizing the average cost. This problem can be\\nsolved by the integer linear programming (ILP):\\nminimize\\nX\\nwm\\nn Cm\\ns.t.\\n1\\nN\\nN\\nX\\nn=1\\nM\\nX\\nm=1\\nwm\\nn pm\\nn \\u2265Pmin\\nM\\nX\\nm=1\\nwm\\nn = 1,\\n\\u2200n \\u2208{1, \\u00b7 \\u00b7 \\u00b7 , N},\\n(5)\\nwhere the variable wm\\nn \\u2208{0, 1} indicates whether\\nto assign qn to Tm, Pmin denotes the threshold.\\n4\\nExperiment\\n4.1\\nExperimental Setup\\nDatasets and Training details\\nWe focus on the\\nQA scenario. The adopted datasets include pub-\\nlic datasets CDQA (Xu et al., 2024) and WebQA\\n(Li et al., 2016), as well as a private dataset Pri-\\nvateTimeQA1 that we construct ourselves. Data\\nprocessing details, dataset statistics, and training\\ndetails are shown in Appendix A.\\nBaselines\\nWe use multiple LLMs, including\\nQwen-Max2 (Bai et al., 2023), ChatGPT, and GPT4\\nin all of our experiments, due to their strong reason-\\ning ability. The used search tools include Quark,\\nBing, and Google. Considering that the LLM can\\n1We leave the detail in Appendix A.\\n2https:\\/\\/dashscope.aliyuncs.com\\/compatible-mode\\/v1\\nanswer easy queries independently, we set a non-\\nretrieval baseline, i.e., the LLM directly responds\\nto the query. Consequently, its usage cost is set\\nto 0. In addition, since existing methods (Shnitzer\\net al., 2023; \\u0160akota et al., 2024) assign queries to\\nthe most suitable LLM, we devise \\\"LLMs-UB\\\",\\nSpecifically, For a query and corresponding scores\\nobtained from several non-retrieval methods, such\\nas Qwen-only, ChatGPT-only, and GPT4-only, we\\nalways assign the query to the LLM with the high-\\nest score. Therefore, this can be seen as an upper\\nbound of (Shnitzer et al., 2023; \\u0160akota et al., 2024).\\n4.2\\nEvaluation the Predictive Model\\nWe first examine the ability of M to simulate the\\nscore that LLM calls each tool to solve test queries.\\n4.2.1\\nMetrics\\nFor the testset {(qn, {lm\\nn }M\\nm=1)}N\\nn=1, we report the\\nfinal QA accuracy by selecting the tool with the\\nmaximal predicted pm\\nn for RAG:\\nm\\u22c6= arg max\\nm\\npm\\nn , \\u2200n \\u2208{1, \\u00b7 \\u00b7 \\u00b7 , N},\\naccuracy = 1\\nN\\nN\\nX\\nn=1\\nlm\\u22c6\\nn .\\n(6)\\nWe also report the average cost of each method.\\nFor simplicity, we set the average costs of Quark,\\nBing, and Google to 0.33, 2, and 1, respectively.\\n4.2.2\\nResults\\nThe result is shown in Table 1.\\nWhether us-\\ning Qwen-max, ChatGPT, or GPT4 for response\\ngeneration, LLM+Google usually outperforms\\nLLM+Bing, LLM+Quark, and LLM-only, which\\ncoincides with human intuition that Google is cur-\\nrently the best search tool in the world. RAG out-\\nperforms LLM-only by a large margin, proving the\\nnecessity of utilizing tools for response generation.\\nIn addition, we have the following observations.\\n(1) On PrivateTimeQA and CDQA, our method\\nsignificantly outperforms the best baseline, i.e.,\\n\\\"LLM+Google\\\". This trend is observed across\\nmultiple LLMs.\\nThis is because despite\\n\\\"LLM+Google\\\" achieving the highest overall ac-\\ncuracy, it still fails to solve some cases that\\n\\\"LLM+Quark\\\" or \\\"LLM+Bing\\\" can handle. Specif-\\nically, the proportion of such samples is 6.6% in the\\nCDQA testset. Our method can adaptively assign\\nthese queries to the optimal tools, leading to better\\noverall results. (2) Compared with \\\"LLM+Bing\\\",\\nour method achieves a better result with a lower\\ncost. Compared with \\\"LLM+Google\\\", our method\\n10227\\n\"}\n\nIn total, 1 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The page content includes the link to the CDQA dataset. I can now extract the link and provide the final answer.\n[Action]:\nGenerateAnswer(answer=['CDQA', 'https://dashscope.aliyuncs.com/compatible-mode/v1'])"}
{"role": "user", "content": "[Observation]: ['CDQA', 'https://dashscope.aliyuncs.com/compatible-mode/v1']"}
