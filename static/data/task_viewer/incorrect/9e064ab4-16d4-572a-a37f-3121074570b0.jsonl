{"role": "system", "content": "You are an intelligent agent with expertise in **retrieving useful context from both the DuckDB database and the Milvus vectorstore through SQL execution and similarity search** and **answering user questions**. You will be given a natural language question concerning PDF files, along with the schema of both the database and the vectorstore. Your ultimate goal is to answer the input question with pre-defined answer format. The DuckDB database contains all parsed content of raw PDF files, while the Milvus vectorstore encodes specific column cells from the database as vectors. You can predict executable actions, interact with the hybrid environment (including database and vectorstore) across multiple turns, and retrieve necessary context until you are confident in resolving the question.\n\n--------\n\n## Task Description\nEach task consists of the following parts:\n\n[Question]: User question regarding the PDF, e.g., Is there any ...?\n[Answer Format]: it describes the format of the final answer, e.g., the answer is \"Yes\" or \"No\" without punctuation.\n[Anchor PDF]: Optional, a python str or list, the PDF(s) you must use to answer the question.\n[Reference PDF]: Optional, a python str or list, the PDF(s) you may use to answer the question.\n[Conference]: Optional, a python str or list, the conference(s) and year(s) of the relevant papers for retrieval.\n[Database Schema]: A detailed serialized schema of the DuckDB database for reference when generating SQL queries. It includes 1) tables, 2) columns and their data types, 3) descriptions for these schema items, and 4) primary key and foreign key constraints.\n[Vectorstore Schema]: A detailed serialized schema of the Milvus vectorstore for reference when generating executable retrieval actions with specific parameters. It includes 1) collections, 2) fields, 3) encodable (table, column) pairs in the relational database where the vectorized content originates, and 4) grammar for valid filter rules.\n\n\n--------\n\n## Action and Observation Space\nAll allowable action types include ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']. Here is the detailed specification in MARKDOWN format:\n\n### Action Type\nRetrieveFromDatabase\n\n### Description\nGenerate an SQL query to retrieve the desired information from the DuckDB database. Please refer to the concrete database schema to produce a valid and executable SQL.\n\n### Observation\nThe observation space is the execution result of the SQL query. You do not need to worry about the actual execution, we will perform it for you. If the SQL failed to execute, we will return the error message. Extremely long SQL output will be truncated.\n\n### Syntax and Parameters (MARKDOWN Format)\nRetrieveFromDatabase(sql: str)\n- sql: str, required. The concrete DuckDB SQL query to execute and retrieve results.\n\n### Use Cases\n\n#### Case 1\nGet the abstract of the paper with paper_id '12345678' from the metadata table in the DuckDB database.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT abstract FROM metadata WHERE paper_id = '12345678';\")\n\n\n#### Case 2\nFind which page in the paper with paper_id '12345678' contains Figure 3.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT pages.page_number FROM images JOIN pages JOIN metadata ON images.ref_page_id = pages.page_id AND pages.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = '12345678' AND images.image_caption LIKE '%Figure 3%';\")\n\n\n----\n\n### Action Type\nClassicRetrieve\n\n### Description\nGiven a query text, retrieve relevant context from the Milvus vectorstore.\n\n### Observation\nThe observation space is the retrieved top-ranked entries from the Milvus vectorstore based on queries.\n\n### Syntax and Parameters (MARKDOWN Format)\nClassicRetrieve(query: str, limit: int = 5)\n- query: str, required. The query text will be encoded and used to search for relevant context. You can rephrase the original user question to obtain a more clear and structured query requirement.\n- limit: int, optional, default to 5. The number of top-ranked context to retrieve. Please set it to a positive integer to limit the number of returned results. Extremely large limit values may be truncated.\n\n### Use Cases\n\n#### Case 1\nRetrieve top 5 pieces about a certain topic.\n\n[Action]: ClassicRetrieve(query='Is there any work about the topic structured RAG?')\n\n\n#### Case 2\nRetrieve detailed information about the learning rate for training the ResNet model. The top 4 most relevant entries will be returned based on the query.\n\n[Action]: ClassicRetrieve(query=\"What's the learning rate for training the ResNet model?\", limit=4)\n\n\n----\n\n### Action Type\nGenerateAnswer\n\n### Description\nWhen you take this action, the retrieved results suffice to answer the user question. PLEASE STRICTLY ADHERE TO THE ANSWER FORMAT FOR THE CURRENT QUESTION.\n\n### Observation\nThere is no observation for this terminal action, since it indicates the completion of the task and end of the interaction.\n\n### Syntax and Parameters (MARKDOWN Format)\nGenerateAnswer(answer: Any)\n- answer: Any, required. The final answer to the user question. Please adhere to the answer format for the current question.\n\n### Use Cases\n\n#### Case 1\nThe answer to the user question is 42.\n\n[Action]: GenerateAnswer(answer=42)\n\n\n#### Case 2\nThe answer to the user question is a list of strings: ['Results', 'Discussion'].\n\n[Action]: GenerateAnswer(answer=['Results', 'Discussion'])\n\n\n\n--------\n\n## Interaction Framework\n\nThe main interaction procedure proceeds like this:\n\n----\n\n[Thought]: ... reasoning process, why to take this action ...\n[Action]: ... which action to take, please strictly conform to the action specification ...\n[Observation]: ... execution results or error message after taking the action ...\n\n... # more interleaved triplets of ([Thought], [Action], [Observation])\n\n[Thought]: ... reasoning process to produce the final answer ...\n[Action]: ... the terminate action `GenerateAnswer`, there is no further observation ...\n\n----\n\nIn general, the main interaction loop consists of an interleaved of triplets ([Thought], [Action], [Observation]), except the last `GenerateAnswer` action which does not have \"[Observation]:\". You need to predict the \"[Thought]: ...\" followed by the \"[Action]: ...\" for each turn, and we will execute your action in the environment and provide the \"[Observation]: ...\" for the previous action.\n\n--------\n\n## Suggestions or Hints for Agent Interaction\n\n1. Explore multiple retrieval strategies. For example:\n- Experiment with different (table, column) pairs to extract diverse types of information.\n- Query various embedding models (collections) to find the most relevant context.\n\n2. Combine both structured and unstructured data. Concretely:\n- Use SQL queries to retrieve precise facts and structured data. Pay special attention to morphological variations in cell values.\n- Perform similarity searches in the vectorstore to capture semantic relationships and hidden insights.\n\n3. Iterate and refine:\n- If SQL execution result is not satisfactory, try alternative SQL queries to explore the database content carefully.\n- If the vector-based neural retrieval is insufficient, try alternative approaches or parameter settings.\n- Use your findings to validate or enrich the final response.\n\n4. Ensure confidence. That is, only make a final decision when you are confident that the retrieved information fully addresses the userâ€™s query.\n\n\nRemember that, for each question, you only have 20 interaction turns at most. Now, let's start!\n"}
{"role": "user", "content": "[Question]: In the Comparisons experiment of the Metaworld benchmark in the paper \"Prediction with Action: Visual Policy Learning via Joint Denoising Process\", which benchmarks performed the best on easier tasks and harder tasks, respectively (excluding the method proposed in this article)?\n[Answer Format]: Your answer should be a python list of strings, first element is the best performing benchmark on easier tasks, and the second element is the best performing benchmark on harder tasks. YOU MUST USE THE EXACT ABBREVIATION AS IN THE PAPER.\n[Anchor PDF]: 'db33f34d-5174-5e5c-bf44-1cf9247b4836'\n[Database Schema]: The database schema for /home/htc981/workspace/project/HNS-RAG/data/database/ai_research/ai_research.sql is as follows:\n/* database ai_research: This database contains information about AI research papers. Each PDF file is represented or parsed via different views, e.g., pages, sections, figures, tables, and references. We also extract the concrete content inside each concrete element via OCR.\n*/\n/* table metadata: This table stores metadata about each paper, including the number of pages, paper path and paper id.\n*/\nCREATE TABLE IF NOT EXISTS metadata (\n\tpaper_id UUID, -- A unique identifier for this paper.\n\ttitle VARCHAR, -- The title of this paper.\n\tabstract VARCHAR, -- The abstract of this paper.\n\tnum_pages INTEGER, -- The number of pages in this paper.\n\tconference_full VARCHAR, -- The full name of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tconference_abbreviation VARCHAR, -- The abbreviation of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tpub_year INTEGER, -- The year when this paper was published.\n\tvolume VARCHAR, -- The volume of the conference where this paper was published. e.g. findings.\n\tdownload_url VARCHAR, -- The url from which the paper can be downloaded.\n\tbibtex VARCHAR, -- The bibtex of this paper.\n\tauthors VARCHAR[], -- The full names of authors of this paper.\n\tpdf_path VARCHAR, -- The path to the PDF file of this paper.\n\ttldr VARCHAR, -- A brief summary of the paper's main idea or findings generated by LLM based on title and abstract.\n\ttags VARCHAR[], -- Keywords representing the paper's topics, methods, or applications generated by LLM based on title and abstract.,\n\tPRIMARY KEY (paper_id)\n);\n/* table pages: This table stores information of the pages in the papers, including their content, size and their order within the paper. The pagesare extracted using PyMuPDF.\n*/\nCREATE TABLE IF NOT EXISTS pages (\n\tpage_id UUID, -- A unique identifier for each page.\n\tpage_number INTEGER, -- The page number in the current paper, starting from 1.\n\tpage_width INTEGER, -- The pixel width of the current page.\n\tpage_height INTEGER, -- The pixel height of the current page.\n\tpage_content VARCHAR, -- The content of the page.\n\tpage_summary VARCHAR, -- A brief summary of the page content, generated by LLM, focusing on key information and describing the page content.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (page_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table images: This table stores the information about images in each paper. The images are extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS images (\n\timage_id UUID, -- The unique identifier of the image.\n\timage_caption VARCHAR, -- The caption of this image, \"\" if it doesn't have one.\n\timage_summary VARCHAR, -- A brief summary of the image, generated by LLM, focusing on key information and describing the image.\n\tbounding_box INTEGER[4], -- The bounding box of the figure in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height which are used to determine the shape of the rectangle.\n\tordinal INTEGER, -- Each figure is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (image_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table chunks: This table contains the information of each chunk of text (chunk size = 512 tokens with no overlapping) in each page of the paper. A chunk is a sub-text that is extracted from the main text using langchain, such as a sentence or a paragraph.\n*/\nCREATE TABLE IF NOT EXISTS chunks (\n\tchunk_id UUID, -- A unique identifier for each chunk of text.\n\ttext_content VARCHAR, -- The text content of the current chunk.\n\tordinal INTEGER, -- Each chunk is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (chunk_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table tables: This table stores information about tables extracted from pages using MinerU, including content (in html format), bounding box and summary of each table generated by LLM.\n*/\nCREATE TABLE IF NOT EXISTS tables (\n\ttable_id UUID, -- A unique identifier for each table.\n\ttable_caption VARCHAR, -- Caption of the table, showing key information of the table.\n\ttable_content VARCHAR, -- The content of the table in html format.\n\ttable_summary VARCHAR, -- A brief summary of the table content generated by LLM, focusing on key information and describing the table content.\n\tbounding_box INTEGER[4], -- The bounding box of the table in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height.\n\tordinal INTEGER, -- Each table is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this table is located.,\n\tPRIMARY KEY (table_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table sections: This table contains the text content of each section in the paper, e.g. `Introduction`, `Experiment`, `Conclusion`, `Reference`. The sections are extracted using PyMuPDF or MinerU.\n*/\nCREATE TABLE IF NOT EXISTS sections (\n\tsection_id UUID, -- A unique identifier for each section of text.\n\tsection_title VARCHAR, -- The title of the current section.\n\tsection_content VARCHAR, -- The text content of the current section.\n\tsection_summary VARCHAR, -- A brief summary of the section content generated by LLM, focusing on key information and describing the section content.\n\tordinal INTEGER, -- Each section is labeled with one distinct integer number in the paper, which starts from 0.\n\tpage_numbers INTEGER[], -- A list of page numbers where current section is located in the relevant paper.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (section_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table equations: This table stores information about equations extracted from pages using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS equations (\n\tequation_id UUID, -- A unique identifier for each equation.\n\tequation_content VARCHAR, -- Content of the equation in latex format.\n\tordinal INTEGER, -- Each equation is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the paper ID in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the page ID in the `pages` table where this equation is located.,\n\tPRIMARY KEY (equation_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table reference: This table stores information about references extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS reference (\n\treference_id UUID, -- A unique identifier for each reference.\n\treference_content VARCHAR, -- Content of the reference.\n\tordinal INTEGER, -- Each reference is labeled with one distinct integer number according to its order in the paper, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this reference is located.,\n\tPRIMARY KEY (reference_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n[Vectorstore Schema]: The vectorstore schema for ai_research is as follows. You can try collections with different encoding models or modalities:\n[\n    {\n        \"collection_name\": \"text_bm25_en\",\n        \"modality\": \"text\",\n        \"embed_type\": \"bm25\",\n        \"embed_model\": \"en\",\n        \"description\": \"This collection is used to store the sparse embeddings generated by the BM25 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric inner-product (IP).\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"dtype\": \"INT64\",\n                \"is_primary\": true,\n                \"description\": \"The unique id for each encoded text vector in this collection.\"\n            },\n            {\n                \"name\": \"vector\",\n                \"dtype\": \"SPARSE_FLOAT_VECTOR\",\n                \"description\": \"The encoded sparse vector of the text content generated by the BM25 model. Note that, the raw text content can be uniquely identified by the triplet fields below: `table_name`, `column_name`, `primary_key`.\"\n            },\n            {\n                \"name\": \"pdf_id\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The unique id of the PDF file stored in the relational database that the encoded text belongs to. This field can be used to quickly filter the search space.\"\n            },\n            {\n                \"name\": \"page_number\",\n                \"dtype\": \"INT16\",\n                \"description\": \"The page number in the PDF file that the encoded text belongs to (starting from 1). This field can be used to quickly filter the search space. Value -1 means unknown.\"\n            },\n            {\n                \"name\": \"table_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which table in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"column_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which column under `table_name` in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"primary_key\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The primary key value of `table_name` (or which row) in the relational database that the text content belongs to. Note that, the triplet (`table_name`, `column_name`, `primary_key`) can be used to construct a one-to-one mapping between the `text` field in the current vectorstore and the cell entry in the relational database.\"\n            }\n        ]\n    },\n    {\n        \"collection_name\": \"text_sentence_transformers_all_minilm_l6_v2\",\n        \"modality\": \"text\",\n        \"embed_type\": \"sentence_transformers\",\n        \"embed_model\": \"all-MiniLM-L6-v2\",\n        \"description\": \"This collection is used to store the embeddings generated by the all-MiniLM-L6-v2 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric COSINE.\",\n        \"fields\": \"The fields of this collection are similar to the `text_bm25_en` collection.\"\n    }\n]\n\nThe following lists all encodable (table_name, column_name, encode_modality) information from the corresponding DuckDB database, where the encoded vector entries are sourced. Note that, for text modality, we directly encode cell values from the `table_name.column_name`; for image modality, we encode the cropped images for `page_number` in `pdf_id` with bounding boxes from `table_name.column_name`. You can leverage them for filter condition during similarity search:\n[\n    [\n        \"metadata\",\n        \"title\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"abstract\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"bibtex\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"tldr\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_content\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_summary\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_caption\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_summary\",\n        \"text\"\n    ],\n    [\n        \"chunks\",\n        \"text_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_caption\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_summary\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_title\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_content\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_summary\",\n        \"text\"\n    ],\n    [\n        \"equations\",\n        \"equation_content\",\n        \"text\"\n    ],\n    [\n        \"reference\",\n        \"reference_content\",\n        \"text\"\n    ]\n]\n\nHere are the operators that you can use in the filtering condition for the vectorstore:\n{\n    \"operators\": {\n        \"logical\": [\n            {\n                \"symbol\": \"not\",\n                \"example\": \"not expr\",\n                \"description\": \"True if expr is false.\"\n            },\n            {\n                \"symbol\": \"and\",\n                \"example\": \"expr1 and expr2\",\n                \"description\": \"True if both expr1 and expr2 are true.\"\n            },\n            {\n                \"symbol\": \"or\",\n                \"example\": \"expr1 or expr2\",\n                \"description\": \"True if either expr1 or expr2 are true.\"\n            }\n        ],\n        \"binary arithmetic\": [\n            {\n                \"symbol\": \"+\",\n                \"example\": \"a + b\",\n                \"description\": \"Add the two operands.\"\n            },\n            {\n                \"symbol\": \"-\",\n                \"example\": \"a - b\",\n                \"description\": \"Subtract the second operand from the first operand.\"\n            },\n            {\n                \"symbol\": \"*\",\n                \"example\": \"a * b\",\n                \"description\": \"Multiply the two operands.\"\n            },\n            {\n                \"symbol\": \"/\",\n                \"example\": \"a / b\",\n                \"description\": \"Divide the first operand by the second operand.\"\n            },\n            {\n                \"symbol\": \"**\",\n                \"example\": \"a ** b\",\n                \"description\": \"Raise the first operand to the power of the second operand.\"\n            },\n            {\n                \"symbol\": \"%\",\n                \"example\": \"a % b\",\n                \"description\": \"Divide the first operand by the second operand and yield the remainder portion.\"\n            }\n        ],\n        \"relational\": [\n            {\n                \"symbol\": \"<\",\n                \"example\": \"a < b\",\n                \"description\": \"True if a is less than b.\"\n            },\n            {\n                \"symbol\": \">\",\n                \"example\": \"a > b\",\n                \"description\": \"True if a is greater than b.\"\n            },\n            {\n                \"symbol\": \"==\",\n                \"example\": \"a == b\",\n                \"description\": \"True if a is equal to b. Please use **two** equal signs for equality comparison.\"\n            },\n            {\n                \"symbol\": \"!=\",\n                \"example\": \"a != b\",\n                \"description\": \"True if a is not equal to b.\"\n            },\n            {\n                \"symbol\": \"<=\",\n                \"example\": \"a <= b\",\n                \"description\": \"True if a is less than or equal to b.\"\n            },\n            {\n                \"symbol\": \">=\",\n                \"example\": \"a >= b\",\n                \"description\": \"True if a is greater than or equal to b.\"\n            },\n            {\n                \"symbol\": \"in\",\n                \"example\": \"a in [b, c, ...]\",\n                \"description\": \"True if a is equal to any of the values in the list.\"\n            }\n        ],\n        \"array operations\": [\n            {\n                \"symbol\": \"[]\",\n                \"example\": \"bbox[0]\",\n                \"description\": \"This expression gets the first element in array bbox. For example, 'bbox[0] < 50' evaluates to true if the value of bbox[0] is less than 50.\"\n            },\n            {\n                \"symbol\": \"array_contains\",\n                \"example\": \"array_contains(bbox, 100)\",\n                \"description\": \"This expression evaluates to true if array bbox contains element 100.\"\n            },\n            {\n                \"symbol\": \"array_length\",\n                \"example\": \"array_length(int_array) == 4\",\n                \"description\": \"This expression evaluates to true if int_array contains exactly 4 elements.\"\n            }\n        ]\n    },\n    \"use cases\": [\n        {\n            \"example\": \"table_name == 'chunks' and column_name == 'text_content'\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and column_name equal to 'text_content'.\"\n        },\n        {\n            \"example\": \"table_name == 'chunks' and primary_key in ['123', '456', '789']\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and primary_key equal to any of the values in the list ['123', '456', '789'].\"\n        },\n        {\n            \"example\": \"bbox[0] + bbox[2] <= 100 and bbox[1] + bbox[3] <= 300 and pdf_id == '123456' and page_number == 1\",\n            \"description\": \"For image modality, filter results to include only image regions that are entirely within the upper-left quadrant of page 1 in the PDF with ID '123456', assuming the page dimensions are 200 (width) x 600 (height).\"\n        }\n    ]\n}"}
{"role": "assistant", "content": "[Thought]: To find the best performing benchmarks on easier and harder tasks in the Metaworld benchmark, I need to retrieve the relevant sections of the paper. I will first retrieve the section content related to the \"Comparisons\" experiment in the paper \"Prediction with Action: Visual Policy Learning via Joint Denoising Process\".\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT section_content FROM sections JOIN metadata ON sections.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = 'db33f34d-5174-5e5c-bf44-1cf9247b4836' AND section_title LIKE '%Comparisons%';\")"}
{"role": "user", "content": "[Observation]: [Error]: Failed to parse a valid action from the response. Please check the specification for these actions ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']."}
{"role": "assistant", "content": "[Thought]: It seems there was an error in the action format. I will correct the action and try again to retrieve the section content related to the \"Comparisons\" experiment in the paper.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections JOIN metadata ON sections.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = 'db33f34d-5174-5e5c-bf44-1cf9247b4836' AND section_title LIKE '%Comparisons%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which suggests that the section title might not match the pattern I used. I will try a more flexible query to find the relevant section content.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections JOIN metadata ON sections.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = 'db33f34d-5174-5e5c-bf44-1cf9247b4836' AND section_content LIKE '%Metaworld%';\")"}
{"role": "user", "content": "[Observation]:\n{\"section_content\":\"Introduction\\nMaking predictions and taking actions are critical human capabilities, allowing individuals to foresee\\nthe change of their surroundings and behave appropriately in response [1, 2]. Despite prediction\\nand action seeming like two distinct abilities, they are highly coupled since they share the same\\n38th Conference on Neural Information Processing Systems (NeurIPS 2024).\\n(a) Diffusion Generative Model\\nDenoising\\n(b) Diffusion Policy\\nPAD  Joint Denoising\\nRGB image           Robot pose         Other modalities (e.g., depth)\\n......\\n......\\n(c) Joint Prediction Framework\\nImage Editing, Video Generation\\nVisual Policy Learning\\nDenoising\\nCo-train on \\nVideo Dataset \\nFigure 2: Diffusion models have achieved impressive success in visual generation tasks (a) and\\nvisual-motor control tasks (b). Image prediction and robot action are actually highly correlated since\\nthey share the same underlying physical dynamics. The PAD framework predicts the future and\\ngenerates actions in a joint denoising process.\\nunderlying physical laws of the world [3]. Understanding these laws enables humans to make better\\npredictions and actions.\\nRecently, diffusion models [4, 5, 6] have achieved impressive success in visual generation tasks\\nby training on extensive web-scale image and video datasets [7, 8, 9]. For example, image editing\\nmodels can predict outcomes based on user instructions [10, 11, 12], while video generation models\\ncan generate sequences of future images [13, 14, 15], representing a good understanding of the\\nphysical world. On the other line, diffusion models have also shown efficacy in robotic control tasks\\nby denoising actions conditioned on robot observations, known as diffusion policy [16]. Although\\nthe diffusion generative model and diffusion policy serve different functions across two domains, we\\nbelieve that the capability for image prediction could significantly enhance robot policy learning,\\nas they share the same fundamental physical laws. Previous works [17, 18, 19] have employed the\\nimage-editing model in an off-the-shelf manner by first synthesizing a goal image and subsequently\\nlearning a goal-conditioned policy. However, this two-stage approach separates the prediction and\\naction learning process, neglecting deeper connections between prediction and action. In this way,\\nactions do not leverage the pre-trained representations in the prediction models which encode rich\\nknowledge of the physical world.\\nIn this paper, we introduce the Prediction with Action Diffuser (PAD), a unified policy learning frame-\\nwork that integrates prediction and action under the same diffusion transformer (DiT) architecture\\n[20]. Specifically, we utilize the diffusion transformer model to seamlessly merge all modality inputs\\nand simultaneously predict future images and actions via joint denoising, as illustrated in Figure\\n2(c). Additionally, the flexible DiT backbone also allows PAD to be co-trained on large-scale video\\ndata and extended to other robotic modalities, such as depth images. We have conducted extensive\\nexperiments on the MetaWorld Benchmark [21] as well as real-world robot arm manipulation tasks,\\ndemonstrating the efficacy of our approach, as shown in Figure 1. Our key contributions are:\\n\\u2022 We propose a novel policy learning framework, Prediction with Action Diffuser (PAD),\\nto predict futures and robot actions through a joint denoising process, benefiting policy\\nlearning for robotic tasks.\\n\\u2022 The proposed PAD framework enables co-training of different datasets containing different\\nmodalities, allowing encoding rich physical knowledge from various data sources.\\n\\u2022 We outperform previous methods with a clear margin in the Metaworld benchmark, sur-\\npassing baselines with a 26.3% relative improvement in success rate using a single visual-\\nlanguage conditioned policy. Furthermore, our method outperforms all baselines in the\\nreal-world robot manipulation experiments and can better generalize to unseen tasks.\\n2\"}\n{\"section_content\":\"Experiments\\nIn this section, we conduct a series of experiments on the simulated Metaworld Benchmark [21] and\\na real-world table manipulation suite, utilizing our joint prediction framework. We aim to answer the\\nfollowing questions:\\n\\u2022 Can PAD enhance visual policy learning through joint prediction and action with limited\\nrobotic data?\\n\\u2022 Can PAD benefit from co-training on large-scale internet video datasets and better generalize\\nto unseen tasks?\\n\\u2022 Can scaling up computational resources improve PAD\\u2019s performance?\\n(1) Bridge video data                  (2) All 50 tasks in MetaWorld\\n(3) Real-world Panda Manipulation\\nExpert data                   Unseen Tasks                Button                   Cable-route\\nDrawer                   Pick\\/Place \\n\\u2026\\n\\u2026\\nFigure 4: We learn a single vision-language conditioned policy to solve all tasks in each domain with\\nlimited demonstrations, co-training with the bridge video data. In simulated MetaWorld, we learn a\\npolicy to tackle all 50 tasks. In real-world panda manipulations, we split objects into seen objects and\\nunseen new objects to test the generalization ability of our policy.\\n4.1\\nEnvironmental Setups and Baselines\\nMetaworld. Metaworld [21] serves as a widely used benchmark for robotic manipulation, accommo-\\ndating both low-level feature and pixel input modalities. Previous studies that utilized pixel input\\ngenerally developed separate task-specific policies for each of the 50 tasks. In contrast, our approach\\ndemonstrates a significant advancement by employing a single text-conditioned visual policy to\\naddress all 50 tasks, within a data-efficient imitation learning framework. We collected 50 trajectories\\nper task, consistently using the \\u201ccorner2\\u201d camera viewpoint and recording the robot\\u2019s pose with\\n4-dimensional states that include end-effector position and gripper status. For a fair comparison, we\\ndo not utilize an additional depth input in Metaworld.\\nReal-World Panda Manipulation Tasks. Our real-world experiments involve a Panda arm per-\\nforming diverse manipulation tasks such as pressing buttons, opening drawers, routing cables, and\\npicking and placing with various objects, as shown in Figure 4. We follow the same hardware setup\\ndescribed in SERL [27] and utilize a wrist-mounted camera for pixel input [28]. The robot\\u2019s poses\\nare represented by 7-dimensional vectors, including 3 end-effector positions, 3 rotation angles, and 1\\n5\\nEasier Tasks\\nbutton-\\npress\\nbutton\\ntopdown\\ndrawer-\\nopen\\ndoor-\\nopen\\nfaucet-\\nclose\\nplate-\\nslide\\nreach-\\nwall\\nwindow-\\nopen\\nwindow-\\nclose\\ndoor-\\nlock\\nDiffusion Policy\\n0.92\\n0.16\\n0.36\\n0.32\\n0.76\\n0.60\\n0.72\\n0.60\\n0.36\\n0.12\\nSuSIE\\n0.96\\n0.32\\n0.60\\n0.68\\n0.56\\n0.68\\n0.92\\n0.68\\n0.96\\n0.32\\nRT-1\\n0.88\\n1.00\\n0.56\\n0.56\\n1.00\\n0.08\\n0.12\\n1.00\\n1.00\\n0.00\\nRT-2*\\n1.00\\n0.84\\n0.92\\n0.96\\n0.96\\n0.88\\n0.76\\n1.00\\n0.96\\n0.40\\nGR-1\\n1.00\\n0.84\\n1.00\\n1.00\\n0.96\\n0.88\\n1.00\\n1.00\\n1.00\\n0.60\\nPAD (ours)\\n1.00\\n0.92\\n1.00\\n1.00\\n0.92\\n0.72\\n1.00\\n0.92\\n1.00\\n0.88\\nPAD w\\/o img\\n1.00\\n0.92\\n1.00\\n0.88\\n0.92\\n0.16\\n0.92\\n1.00\\n1.00\\n0.12\\nPAD w\\/o co-train\\n1.00\\n0.92\\n1.00\\n0.92\\n0.92\\n0.48\\n0.92\\n0.96\\n0.96\\n0.72\\nHarder Tasks\\nassem-\\nble\\nbasket-\\nball\\ncoffee-\\npull\\nhammer\\npeg-\\ninsert\\npick-place\\n-wall\\nshelf-\\nplace\\nstick-\\npush\\nstick-\\npull\\nAverage\\n(50tasks)\\nDiffusion Policy\\n0.20\\n0.08\\n0.00\\n0.08\\n0.16\\n0.36\\n0.00\\n0.00\\n0.00\\n0.279\\nSuSIE\\n0.40\\n0.24\\n0.32\\n0.04\\n0.24\\n0.24\\n0.08\\n0.16\\n0.16\\n0.410\\nRT-1\\n0.00\\n0.00\\n0.08\\n0.00\\n0.00\\n0.00\\n0.00\\n0.00\\n0.00\\n0.346\\nRT-2*\\n0.24\\n0.08\\n0.68\\n0.20\\n0.12\\n0.32\\n0.20\\n0.12\\n0.00\\n0.522\\nGR-1\\n0.64\\n0.08\\n0.52\\n0.48\\n0.24\\n0.48\\n0.28\\n0.60\\n0.44\\n0.574\\nPAD (ours)\\n0.88\\n0.84\\n0.80\\n0.80\\n0.68\\n0.92\\n0.72\\n0.96\\n0.88\\n0.725\\nPAD w\\/o img\\n0.04\\n0.44\\n0.40\\n0.48\\n0.16\\n0.36\\n0.16\\n0.24\\n0.16\\n0.436\\nPAD w\\/o co-train\\n0.32\\n0.28\\n0.32\\n0.72\\n0.92\\n0.68\\n0.56\\n0.88\\n0.40\\n0.592\\nTable 1: Comparisons on Metaworld benchmark. We utilize a single policy to solve all 50 tasks in\\nMetaworld. Due to the space limit, we show a subset of tasks and the average success rate on all 50\\ntasks. Detailed data can be found in Appendix A.4.\\ngripper status dimension. We collected 200 trajectories per task through teleoperation using a space\\nmouse and scripted commands. Similarly, we developed a single policy capable of addressing all\\ntasks, conditioned on instructions. We also assessed the policy\\u2019s generalization capabilities on unseen\\ntasks, as depicted in Figure 5.\\nPolicy Training Details. As detailed in Section 3, the flexible PAD framework can be co-trained on\\nvarious internet RGB video data and robotic demonstrations. In order to save computational resources\\nand avoid the need to co-train the model from scratch in each robot domain, we first pre-train the\\nmodel on internet data to establish better image prediction priors. We then adapt this pre-trained\\nmodel to various robotic domains, including the simulated Metaworld and the real-world panda\\nmanipulation. Empirically, we first pretrain 200k steps on the BridgeData-v2 dataset [9], which\\nconsists of 60,000 trajectories. After this, we adapted the model to each domain, continuing training\\nfor an additional 100k steps with robotic demonstrations. The pre-training and adaptation stage\\nrequires approximately 2 days and 1 day, utilizing 4 NVIDIA A100 GPUs.\\nMoreover, we found that increasing the weight of the image prediction loss during the early adaptation\\nstages accelerates convergence, as image priors are already established in the pre-trained models.\\nSpecifically, we maintained the image prediction loss coefficient \\u03bbI at 1.0 throughout the training\\nperiod and linearly increased \\u03bbA and \\u03bbE from 0.0 to 2.0 during the 100k training steps.\\nPolicy Execution Details. Our policy is conditioned on the current image, cI, and the robot pose, cA,\\nand predicts k frames of futures and actions. We configure the prediction horizon at k = 3 and set the\\ninterval between frames at i = 4 for both Metaworld and real-world tasks. During policy execution,\\nwe utilize 75 steps of DDIM sampling [5] to denoise the k steps of future images, x1:K\\nI\\n, and actions,\\nx1:k\\nA . These k step predictions can be viewed as k step planning and only the first predicted action,\\nx1\\nA, is executed by the robot. The robot then moves to the first desired pose using a simple linear\\ninterpolation motion planner, triggering the next prediction cycle.\\nComparisons. Visual policy learning has been widely explored in previous studies. In our experi-\\nments, we opted to compare against a representative subset of prior methods that have either achieved\\nstate-of-the-art performance or share a similar architecture with our methods. Notably, all methods\\nare trained on all tasks in the domain using a single text-condition visual policy.\\n\\u2022 Diffusion Policy [16]. A novel visual control policy that generates robot actions through\\nan action diffuser. We augmented the original diffusion policy model with instruction\\nconditions to address the multi-task setting. We use the CLIP encoder [25] as instruction\\nencoders, referring to related work [29].\\n6\\nTask\\nButton-\\nCable-\\nPick\\nPlace\\nDrawer-\\nDrawer-\\nAverage\\nPress\\nRoute\\n(4 tasks)\\n(3 tasks)\\nOpen\\nClose\\nDiffusion Policy\\n0.70\\n0.30\\n0.28\\n0.34\\n0.42\\n0.58\\n0.38\\nSuSIE\\n0.74\\n0.44\\n0.46\\n0.40\\n0.42\\n0.70\\n0.49\\nRT-1\\n0.72\\n0.52\\n0.40\\n0.34\\n0.44\\n0.50\\n0.43\\nRT-2*\\n0.80\\n0.60\\n0.64\\n0.74\\n0.66\\n0.82\\n0.69\\nPAD(ours)\\n0.80\\n0.55\\n0.76\\n0.72\\n0.56\\n0.84\\n0.72\\nPAD-Depth(ours)\\n0.78\\n0.64\\n0.84\\n0.78\\n0.60\\n0.88\\n0.78\\nTable 2: Comparisons on real-world manipulation in-distribution tasks. PAD achieves the highest\\nsuccess rate. Incorporating depth modality can additionally lead to performance improvement. We\\nevaluate each task with 50 roll-outs.\\nExpert Data                            Easy\\nMiddle\\nHard\\nEasy\\nMiddle\\nHard\\n0.0\\n0.2\\n0.4\\n0.6\\n0.8\\n1.0\\nSuccess Rate\\nGeneralization Test\\nDiffusion Policy\\nSuSIE\\nRT-1\\nRT-2*\\nPAD(ours)\\nFigure 5: Generalization test under 3 levels of difficulties. The yellow bounding box suggests the\\ntarget position. Our proposed PAD shows the strongest generalization abilities in unseen tasks.\\n\\u2022 SuSIE [18]. A two-stage approach that utilizes a pre-trained image-editing model [26] to\\ngenerate image goals for robotic tasks, followed by a goal-conditioned low-level diffusion\\npolicy. We fine-tune the image-editing diffusion model on the same dataset and also use the\\ndiffusion policy for goal-conditioned behavioral cloning. To ensure a fair comparison, we\\nalso use the more powerful DiT framework as the image-editing model.\\n\\u2022 RT-1 [30]. An end-to-end robot control policy that leverages FiLM-conditioned [31]\\nEfficientNet [32] to fuse visual input and language input, then followed by transformer\\nblocks to output action.\\n\\u2022 RT-2* [33] (re-implement). A large-scale embodied model that directly fine-tunes vision-\\nlanguage models(VLMs) to produce robot actions. The original RT-2 model was fine-tuned\\non the PaLM model [34], which is not publicly available. Following the specifications\\noutlined in the original paper, we re-implemented the RT-2 model using the InstructBlip-7B\\n[35] backbone.\\n\\u2022 GR-1 [36]. Method that also leverages image prediction to assist policy learning. Different\\nfrom PAD, they generate images and actions via auto-regressive architecture.\\n4.2\\nMain Results\\nPerformance Analysis. In all comparisons, we train a single visual policy to address all tasks within\\na domain, conditioned on instructions. Our proposed PAD outperforms all baselines by a significant\\nmargin. As shown in Table 1, in the Metaworld benchmark, PAD achieved an average success rate\\nof 72.5%, which markedly surpasses the strongest baseline at 57.4%. Due to space constraints, we\\npresent comparisons on a subset of tasks and report the average success rate across all 50 tasks. A\\ncomprehensive comparison of all 50 tasks is available in Appendix A.4. Furthermore, Table 2 shows\\nthe results in real-world seen-tasks where PAD also attains the highest success rate.\\nWe notice that PAD predicts more precise future images than the GR-1 method (Figure 6), likely\\ndue to the superior capabilities of diffusion models in image generation tasks. These precise images\\nmay more effectively facilitate policy learning, leading to higher success rates, particularly in tasks\\nrequiring precise and accurate operation such as picking small blocks, insertion, basketball, etc., in\\nMetaworld.\\n7\\nCurrent Observation                 Ground Truth Future                  PAD Predicted Future                   GR-1 Predicted Future\\nFigure 6: Comparisons on predicted images between PAD and GR-1. PAD generates more precise\\nimages than GR-1 which may potentially lead to more accurate control actions. Zoom in for better\\ncomparisons.\\nCurrent Observation                     Ground Truth                       Predicted Future\\n\\u201cPut corn in bowl sink.\\\"\\n\\u201cOpen cabinet.\\u201d\\nFigure 7: Predictions on bridge datasets. PAD predicts futures align with instructions but also keeps\\nuncertainty. In the first image, PAD imagines \\\"a yellow pear\\\" instead of the ground truth \\\"banana\\\"; in\\nthe second image, PAD imagines scenes faster than the ground truth.\\nQuality of the Generated Images. In addition to achieving the highest success rate in robotic control,\\nwe also present visualizations of some image prediction results in Figure 6 and Figure 7. In the\\nMetaworld domain, the predicted image (second row) closely resembles the ground truth image (first\\nrow), which is directly decoded from the original latent. In the Bridge domain, the predicted image\\naligns with the language instructions but also keeps a certain level of uncertainty. These indicate that\\nthe PAD model has effectively learned the physical dynamics across these two domains.\\n4.3\\nGeneralization Analysis\\nPAD can leverage existing physical knowledge from co-training on large-scale internet video datasets\\nto enhance its generalization capabilities across new tasks. We evaluated PAD\\u2019s generalization ability\\nin real-world panda manipulation with unseen tasks. As depicted in Figure 4, the expert dataset\\ncomprises only colored square blocks and plates, while we introduce a variety of previously unseen\\nfruit and vegetable toys during testing. We designed tasks of three difficulty levels: easy mode,\\nfeaturing 1-4 disturbance objects; a middle level with 5-15 disturbance objects; and difficult tasks that\\nrequire picking previously unseen objects with 5-15 disturbances or unseen backgrounds. We excluded\\ndepth input to ensure a fair comparison. As illustrated in Figure 5, PAD demonstrates remarkable\\ngeneralization abilities, successfully managing out-of-distribution objects such as strawberries, carrots,\\nand eggplants, and even adapting to new backgrounds. The baseline method failed to generalize to\\ndifficult unseen tasks.\\n4.4\\nAblation Studies\\nEffectiveness of RGB image prediction. We evaluated the effectiveness of our joint prediction\\nprocess by modifying the original model to exclude the image prediction component, namely in PAD\\nw\\/o image prediction. This modification leads to significant performance drops compared to PAD,\\nas illustrated in Table 1. The absence of image prediction compromises the robot\\u2019s ability to utilize\\nthe physical knowledge encoded in the image modalities, which may be crucial for robotic control.\\n8\\nGround \\nTruth \\nCo-training \\nwith \\nVideos\\nTraining \\nw\\/o \\nVideos\\nPredictions\\nPredictions\\nGround \\nTruth \\nCo-training \\nwith \\nVideos\\nTraining \\nw\\/o \\nVideos\\nCondition\\nCondition\\nFigure 8: We observe that co-training with an internet video dataset leads to better image generation\\nqualities, which may potentially lead to better robot action predictions.\\nFurthermore, predicting solely the robot pose provides only low-dimensional supervision signals,\\npotentially leading to overfitting of the training data.\\nEffectiveness of Co-training with Internet RGB Video Datasets. Another major benefit of PAD\\nis the ability to co-train with large-scale internet-sourced RGB videos, which potentially leverages\\nthe physical knowledge embedded in these web datasets to enhance robotic pose prediction. We\\ntrain PAD without the inclusion of web-scale RGB data, namely PAD w\\/o co-train. We observed a\\nperformance drop without co-train on the video dataset, as shown in Table 1. Furthermore, the quality\\nof the predicted image also decreased. For instance, as depicted in the bottom column of Figure 8, the\\nblue block is absent in the predicted images. The quality of the predicted images markedly improves\\nwith co-training, which in turn indirectly enhances robot action prediction.\\nConditions\\nPredictions\\nRGB Image \\nGround Truth \\nPAD Output\\nDepth Image\\nGround Truth \\nPAD Output\\nFigure 9: PAD can flexibly train with\\nadditional modality, and simultaneously\\npredict all the futures through joint de-\\nnoising process.\\nCompatible with Additional Modalities. As detailed in\\nSection 3, our framework accommodates additional modal-\\nities owing to the adaptable DiT architectures. We incor-\\nporate additional depth image inputs in real-world manipu-\\nlation experiments and jointly predict future RGB images,\\ndepth images, and robot actions, denoted as PAD-depth.\\nWe observe highly aligned prediction results among dif-\\nferent modalities under our joint denoising framework,\\nwith some results illustrated in Figure 9. The inclusion of\\ndepth input enhances performance in manipulation tasks,\\nas demonstrated in Table 2. This improvement may stem\\nfrom the precise prediction of depth information, which\\naids agents in discerning distance changes, thereby en-\\nhancing performance. Moreover, our framework could be\\nextended to predict other modalities relevant to robot con-\\ntrol, such as tactile force or point clouds, which we left for\\nthe future work.\\n4.5\\nScaling Analysis\\nWe evaluated models across various sizes and patchify sizes [20], as outlined in Table 3. For example,\\nthe XL\\/2 model denotes the model with an XL size and a 2 \\u00d7 2 patchify size. Halving the image\\npatch size will quadruple the image token lengths, which leads to higher computational costs. Our\\nfindings reveal a strong correlation between computational allocation (measured as transformer\\nGflops) and the success rate (SR) of the learned policy, as depicted in Figure 10. All the experiments\\nare run in Metaworld benchmarks and detailed success ra ...\"}\n\n... # only display 2 rows in JSON format, more are truncated due to length constraint based on max_tokens (5000)"}
{"role": "assistant", "content": "[Thought]: The retrieved section content contains the relevant comparison results for the Metaworld benchmark. I will extract the best performing benchmarks on easier and harder tasks from the provided data.\n[Action]:\nGenerateAnswer(answer=['RT-2*', 'PAD (ours)'])"}
{"role": "user", "content": "[Observation]: ['RT-2*', 'PAD (ours)']"}
