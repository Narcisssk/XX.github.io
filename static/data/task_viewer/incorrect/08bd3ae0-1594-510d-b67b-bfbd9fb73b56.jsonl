{"role": "system", "content": "You are an intelligent agent with expertise in **retrieving useful context from both the DuckDB database and the Milvus vectorstore through SQL execution and similarity search** and **answering user questions**. You will be given a natural language question concerning PDF files, along with the schema of both the database and the vectorstore. Your ultimate goal is to answer the input question with pre-defined answer format. The DuckDB database contains all parsed content of raw PDF files, while the Milvus vectorstore encodes specific column cells from the database as vectors. You can predict executable actions, interact with the hybrid environment (including database and vectorstore) across multiple turns, and retrieve necessary context until you are confident in resolving the question.\n\n--------\n\n## Task Description\nEach task consists of the following parts:\n\n[Question]: User question regarding the PDF, e.g., Is there any ...?\n[Answer Format]: it describes the format of the final answer, e.g., the answer is \"Yes\" or \"No\" without punctuation.\n[Anchor PDF]: Optional, a python str or list, the PDF(s) you must use to answer the question.\n[Reference PDF]: Optional, a python str or list, the PDF(s) you may use to answer the question.\n[Conference]: Optional, a python str or list, the conference(s) and year(s) of the relevant papers for retrieval.\n[Database Schema]: A detailed serialized schema of the DuckDB database for reference when generating SQL queries. It includes 1) tables, 2) columns and their data types, 3) descriptions for these schema items, and 4) primary key and foreign key constraints.\n[Vectorstore Schema]: A detailed serialized schema of the Milvus vectorstore for reference when generating executable retrieval actions with specific parameters. It includes 1) collections, 2) fields, 3) encodable (table, column) pairs in the relational database where the vectorized content originates, and 4) grammar for valid filter rules.\n\n\n--------\n\n## Action and Observation Space\nAll allowable action types include ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']. Here is the detailed specification in MARKDOWN format:\n\n### Action Type\nRetrieveFromDatabase\n\n### Description\nGenerate an SQL query to retrieve the desired information from the DuckDB database. Please refer to the concrete database schema to produce a valid and executable SQL.\n\n### Observation\nThe observation space is the execution result of the SQL query. You do not need to worry about the actual execution, we will perform it for you. If the SQL failed to execute, we will return the error message. Extremely long SQL output will be truncated.\n\n### Syntax and Parameters (MARKDOWN Format)\nRetrieveFromDatabase(sql: str)\n- sql: str, required. The concrete DuckDB SQL query to execute and retrieve results.\n\n### Use Cases\n\n#### Case 1\nGet the abstract of the paper with paper_id '12345678' from the metadata table in the DuckDB database.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT abstract FROM metadata WHERE paper_id = '12345678';\")\n\n\n#### Case 2\nFind which page in the paper with paper_id '12345678' contains Figure 3.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT pages.page_number FROM images JOIN pages JOIN metadata ON images.ref_page_id = pages.page_id AND pages.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = '12345678' AND images.image_caption LIKE '%Figure 3%';\")\n\n\n----\n\n### Action Type\nClassicRetrieve\n\n### Description\nGiven a query text, retrieve relevant context from the Milvus vectorstore.\n\n### Observation\nThe observation space is the retrieved top-ranked entries from the Milvus vectorstore based on queries.\n\n### Syntax and Parameters (MARKDOWN Format)\nClassicRetrieve(query: str, limit: int = 5)\n- query: str, required. The query text will be encoded and used to search for relevant context. You can rephrase the original user question to obtain a more clear and structured query requirement.\n- limit: int, optional, default to 5. The number of top-ranked context to retrieve. Please set it to a positive integer to limit the number of returned results. Extremely large limit values may be truncated.\n\n### Use Cases\n\n#### Case 1\nRetrieve top 5 pieces about a certain topic.\n\n[Action]: ClassicRetrieve(query='Is there any work about the topic structured RAG?')\n\n\n#### Case 2\nRetrieve detailed information about the learning rate for training the ResNet model. The top 4 most relevant entries will be returned based on the query.\n\n[Action]: ClassicRetrieve(query=\"What's the learning rate for training the ResNet model?\", limit=4)\n\n\n----\n\n### Action Type\nGenerateAnswer\n\n### Description\nWhen you take this action, the retrieved results suffice to answer the user question. PLEASE STRICTLY ADHERE TO THE ANSWER FORMAT FOR THE CURRENT QUESTION.\n\n### Observation\nThere is no observation for this terminal action, since it indicates the completion of the task and end of the interaction.\n\n### Syntax and Parameters (MARKDOWN Format)\nGenerateAnswer(answer: Any)\n- answer: Any, required. The final answer to the user question. Please adhere to the answer format for the current question.\n\n### Use Cases\n\n#### Case 1\nThe answer to the user question is 42.\n\n[Action]: GenerateAnswer(answer=42)\n\n\n#### Case 2\nThe answer to the user question is a list of strings: ['Results', 'Discussion'].\n\n[Action]: GenerateAnswer(answer=['Results', 'Discussion'])\n\n\n\n--------\n\n## Interaction Framework\n\nThe main interaction procedure proceeds like this:\n\n----\n\n[Thought]: ... reasoning process, why to take this action ...\n[Action]: ... which action to take, please strictly conform to the action specification ...\n[Observation]: ... execution results or error message after taking the action ...\n\n... # more interleaved triplets of ([Thought], [Action], [Observation])\n\n[Thought]: ... reasoning process to produce the final answer ...\n[Action]: ... the terminate action `GenerateAnswer`, there is no further observation ...\n\n----\n\nIn general, the main interaction loop consists of an interleaved of triplets ([Thought], [Action], [Observation]), except the last `GenerateAnswer` action which does not have \"[Observation]:\". You need to predict the \"[Thought]: ...\" followed by the \"[Action]: ...\" for each turn, and we will execute your action in the environment and provide the \"[Observation]: ...\" for the previous action.\n\n--------\n\n## Suggestions or Hints for Agent Interaction\n\n1. Explore multiple retrieval strategies. For example:\n- Experiment with different (table, column) pairs to extract diverse types of information.\n- Query various embedding models (collections) to find the most relevant context.\n\n2. Combine both structured and unstructured data. Concretely:\n- Use SQL queries to retrieve precise facts and structured data. Pay special attention to morphological variations in cell values.\n- Perform similarity searches in the vectorstore to capture semantic relationships and hidden insights.\n\n3. Iterate and refine:\n- If SQL execution result is not satisfactory, try alternative SQL queries to explore the database content carefully.\n- If the vector-based neural retrieval is insufficient, try alternative approaches or parameter settings.\n- Use your findings to validate or enrich the final response.\n\n4. Ensure confidence. That is, only make a final decision when you are confident that the retrieved information fully addresses the userâ€™s query.\n\n\nRemember that, for each question, you only have 20 interaction turns at most. Now, let's start!\n"}
{"role": "user", "content": "[Question]: What baselines do authors use? And according to Table 2, which baseline can reach the best performance?\n[Answer Format]: Your answer should a list with two items, the first item is a python list of the name of baselines, and the second item is the name of baseline reaching the best performance, e.g. [[baseline 1, baseline 2, ...], baseline 1].\n[Anchor PDF]: '3d2fcb43-2cda-5645-99aa-da78c6cfd23f'\n[Database Schema]: The database schema for /home/htc981/workspace/project/HNS-RAG/data/database/ai_research/ai_research.sql is as follows:\n/* database ai_research: This database contains information about AI research papers. Each PDF file is represented or parsed via different views, e.g., pages, sections, figures, tables, and references. We also extract the concrete content inside each concrete element via OCR.\n*/\n/* table metadata: This table stores metadata about each paper, including the number of pages, paper path and paper id.\n*/\nCREATE TABLE IF NOT EXISTS metadata (\n\tpaper_id UUID, -- A unique identifier for this paper.\n\ttitle VARCHAR, -- The title of this paper.\n\tabstract VARCHAR, -- The abstract of this paper.\n\tnum_pages INTEGER, -- The number of pages in this paper.\n\tconference_full VARCHAR, -- The full name of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tconference_abbreviation VARCHAR, -- The abbreviation of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tpub_year INTEGER, -- The year when this paper was published.\n\tvolume VARCHAR, -- The volume of the conference where this paper was published. e.g. findings.\n\tdownload_url VARCHAR, -- The url from which the paper can be downloaded.\n\tbibtex VARCHAR, -- The bibtex of this paper.\n\tauthors VARCHAR[], -- The full names of authors of this paper.\n\tpdf_path VARCHAR, -- The path to the PDF file of this paper.\n\ttldr VARCHAR, -- A brief summary of the paper's main idea or findings generated by LLM based on title and abstract.\n\ttags VARCHAR[], -- Keywords representing the paper's topics, methods, or applications generated by LLM based on title and abstract.,\n\tPRIMARY KEY (paper_id)\n);\n/* table pages: This table stores information of the pages in the papers, including their content, size and their order within the paper. The pagesare extracted using PyMuPDF.\n*/\nCREATE TABLE IF NOT EXISTS pages (\n\tpage_id UUID, -- A unique identifier for each page.\n\tpage_number INTEGER, -- The page number in the current paper, starting from 1.\n\tpage_width INTEGER, -- The pixel width of the current page.\n\tpage_height INTEGER, -- The pixel height of the current page.\n\tpage_content VARCHAR, -- The content of the page.\n\tpage_summary VARCHAR, -- A brief summary of the page content, generated by LLM, focusing on key information and describing the page content.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (page_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table images: This table stores the information about images in each paper. The images are extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS images (\n\timage_id UUID, -- The unique identifier of the image.\n\timage_caption VARCHAR, -- The caption of this image, \"\" if it doesn't have one.\n\timage_summary VARCHAR, -- A brief summary of the image, generated by LLM, focusing on key information and describing the image.\n\tbounding_box INTEGER[4], -- The bounding box of the figure in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height which are used to determine the shape of the rectangle.\n\tordinal INTEGER, -- Each figure is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (image_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table chunks: This table contains the information of each chunk of text (chunk size = 512 tokens with no overlapping) in each page of the paper. A chunk is a sub-text that is extracted from the main text using langchain, such as a sentence or a paragraph.\n*/\nCREATE TABLE IF NOT EXISTS chunks (\n\tchunk_id UUID, -- A unique identifier for each chunk of text.\n\ttext_content VARCHAR, -- The text content of the current chunk.\n\tordinal INTEGER, -- Each chunk is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (chunk_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table tables: This table stores information about tables extracted from pages using MinerU, including content (in html format), bounding box and summary of each table generated by LLM.\n*/\nCREATE TABLE IF NOT EXISTS tables (\n\ttable_id UUID, -- A unique identifier for each table.\n\ttable_caption VARCHAR, -- Caption of the table, showing key information of the table.\n\ttable_content VARCHAR, -- The content of the table in html format.\n\ttable_summary VARCHAR, -- A brief summary of the table content generated by LLM, focusing on key information and describing the table content.\n\tbounding_box INTEGER[4], -- The bounding box of the table in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height.\n\tordinal INTEGER, -- Each table is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this table is located.,\n\tPRIMARY KEY (table_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table sections: This table contains the text content of each section in the paper, e.g. `Introduction`, `Experiment`, `Conclusion`, `Reference`. The sections are extracted using PyMuPDF or MinerU.\n*/\nCREATE TABLE IF NOT EXISTS sections (\n\tsection_id UUID, -- A unique identifier for each section of text.\n\tsection_title VARCHAR, -- The title of the current section.\n\tsection_content VARCHAR, -- The text content of the current section.\n\tsection_summary VARCHAR, -- A brief summary of the section content generated by LLM, focusing on key information and describing the section content.\n\tordinal INTEGER, -- Each section is labeled with one distinct integer number in the paper, which starts from 0.\n\tpage_numbers INTEGER[], -- A list of page numbers where current section is located in the relevant paper.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (section_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table equations: This table stores information about equations extracted from pages using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS equations (\n\tequation_id UUID, -- A unique identifier for each equation.\n\tequation_content VARCHAR, -- Content of the equation in latex format.\n\tordinal INTEGER, -- Each equation is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the paper ID in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the page ID in the `pages` table where this equation is located.,\n\tPRIMARY KEY (equation_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table reference: This table stores information about references extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS reference (\n\treference_id UUID, -- A unique identifier for each reference.\n\treference_content VARCHAR, -- Content of the reference.\n\tordinal INTEGER, -- Each reference is labeled with one distinct integer number according to its order in the paper, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this reference is located.,\n\tPRIMARY KEY (reference_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n[Vectorstore Schema]: The vectorstore schema for ai_research is as follows. You can try collections with different encoding models or modalities:\n[\n    {\n        \"collection_name\": \"text_bm25_en\",\n        \"modality\": \"text\",\n        \"embed_type\": \"bm25\",\n        \"embed_model\": \"en\",\n        \"description\": \"This collection is used to store the sparse embeddings generated by the BM25 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric inner-product (IP).\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"dtype\": \"INT64\",\n                \"is_primary\": true,\n                \"description\": \"The unique id for each encoded text vector in this collection.\"\n            },\n            {\n                \"name\": \"vector\",\n                \"dtype\": \"SPARSE_FLOAT_VECTOR\",\n                \"description\": \"The encoded sparse vector of the text content generated by the BM25 model. Note that, the raw text content can be uniquely identified by the triplet fields below: `table_name`, `column_name`, `primary_key`.\"\n            },\n            {\n                \"name\": \"pdf_id\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The unique id of the PDF file stored in the relational database that the encoded text belongs to. This field can be used to quickly filter the search space.\"\n            },\n            {\n                \"name\": \"page_number\",\n                \"dtype\": \"INT16\",\n                \"description\": \"The page number in the PDF file that the encoded text belongs to (starting from 1). This field can be used to quickly filter the search space. Value -1 means unknown.\"\n            },\n            {\n                \"name\": \"table_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which table in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"column_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which column under `table_name` in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"primary_key\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The primary key value of `table_name` (or which row) in the relational database that the text content belongs to. Note that, the triplet (`table_name`, `column_name`, `primary_key`) can be used to construct a one-to-one mapping between the `text` field in the current vectorstore and the cell entry in the relational database.\"\n            }\n        ]\n    },\n    {\n        \"collection_name\": \"text_sentence_transformers_all_minilm_l6_v2\",\n        \"modality\": \"text\",\n        \"embed_type\": \"sentence_transformers\",\n        \"embed_model\": \"all-MiniLM-L6-v2\",\n        \"description\": \"This collection is used to store the embeddings generated by the all-MiniLM-L6-v2 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric COSINE.\",\n        \"fields\": \"The fields of this collection are similar to the `text_bm25_en` collection.\"\n    }\n]\n\nThe following lists all encodable (table_name, column_name, encode_modality) information from the corresponding DuckDB database, where the encoded vector entries are sourced. Note that, for text modality, we directly encode cell values from the `table_name.column_name`; for image modality, we encode the cropped images for `page_number` in `pdf_id` with bounding boxes from `table_name.column_name`. You can leverage them for filter condition during similarity search:\n[\n    [\n        \"metadata\",\n        \"title\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"abstract\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"bibtex\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"tldr\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_content\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_summary\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_caption\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_summary\",\n        \"text\"\n    ],\n    [\n        \"chunks\",\n        \"text_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_caption\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_summary\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_title\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_content\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_summary\",\n        \"text\"\n    ],\n    [\n        \"equations\",\n        \"equation_content\",\n        \"text\"\n    ],\n    [\n        \"reference\",\n        \"reference_content\",\n        \"text\"\n    ]\n]\n\nHere are the operators that you can use in the filtering condition for the vectorstore:\n{\n    \"operators\": {\n        \"logical\": [\n            {\n                \"symbol\": \"not\",\n                \"example\": \"not expr\",\n                \"description\": \"True if expr is false.\"\n            },\n            {\n                \"symbol\": \"and\",\n                \"example\": \"expr1 and expr2\",\n                \"description\": \"True if both expr1 and expr2 are true.\"\n            },\n            {\n                \"symbol\": \"or\",\n                \"example\": \"expr1 or expr2\",\n                \"description\": \"True if either expr1 or expr2 are true.\"\n            }\n        ],\n        \"binary arithmetic\": [\n            {\n                \"symbol\": \"+\",\n                \"example\": \"a + b\",\n                \"description\": \"Add the two operands.\"\n            },\n            {\n                \"symbol\": \"-\",\n                \"example\": \"a - b\",\n                \"description\": \"Subtract the second operand from the first operand.\"\n            },\n            {\n                \"symbol\": \"*\",\n                \"example\": \"a * b\",\n                \"description\": \"Multiply the two operands.\"\n            },\n            {\n                \"symbol\": \"/\",\n                \"example\": \"a / b\",\n                \"description\": \"Divide the first operand by the second operand.\"\n            },\n            {\n                \"symbol\": \"**\",\n                \"example\": \"a ** b\",\n                \"description\": \"Raise the first operand to the power of the second operand.\"\n            },\n            {\n                \"symbol\": \"%\",\n                \"example\": \"a % b\",\n                \"description\": \"Divide the first operand by the second operand and yield the remainder portion.\"\n            }\n        ],\n        \"relational\": [\n            {\n                \"symbol\": \"<\",\n                \"example\": \"a < b\",\n                \"description\": \"True if a is less than b.\"\n            },\n            {\n                \"symbol\": \">\",\n                \"example\": \"a > b\",\n                \"description\": \"True if a is greater than b.\"\n            },\n            {\n                \"symbol\": \"==\",\n                \"example\": \"a == b\",\n                \"description\": \"True if a is equal to b. Please use **two** equal signs for equality comparison.\"\n            },\n            {\n                \"symbol\": \"!=\",\n                \"example\": \"a != b\",\n                \"description\": \"True if a is not equal to b.\"\n            },\n            {\n                \"symbol\": \"<=\",\n                \"example\": \"a <= b\",\n                \"description\": \"True if a is less than or equal to b.\"\n            },\n            {\n                \"symbol\": \">=\",\n                \"example\": \"a >= b\",\n                \"description\": \"True if a is greater than or equal to b.\"\n            },\n            {\n                \"symbol\": \"in\",\n                \"example\": \"a in [b, c, ...]\",\n                \"description\": \"True if a is equal to any of the values in the list.\"\n            }\n        ],\n        \"array operations\": [\n            {\n                \"symbol\": \"[]\",\n                \"example\": \"bbox[0]\",\n                \"description\": \"This expression gets the first element in array bbox. For example, 'bbox[0] < 50' evaluates to true if the value of bbox[0] is less than 50.\"\n            },\n            {\n                \"symbol\": \"array_contains\",\n                \"example\": \"array_contains(bbox, 100)\",\n                \"description\": \"This expression evaluates to true if array bbox contains element 100.\"\n            },\n            {\n                \"symbol\": \"array_length\",\n                \"example\": \"array_length(int_array) == 4\",\n                \"description\": \"This expression evaluates to true if int_array contains exactly 4 elements.\"\n            }\n        ]\n    },\n    \"use cases\": [\n        {\n            \"example\": \"table_name == 'chunks' and column_name == 'text_content'\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and column_name equal to 'text_content'.\"\n        },\n        {\n            \"example\": \"table_name == 'chunks' and primary_key in ['123', '456', '789']\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and primary_key equal to any of the values in the list ['123', '456', '789'].\"\n        },\n        {\n            \"example\": \"bbox[0] + bbox[2] <= 100 and bbox[1] + bbox[3] <= 300 and pdf_id == '123456' and page_number == 1\",\n            \"description\": \"For image modality, filter results to include only image regions that are entirely within the upper-left quadrant of page 1 in the PDF with ID '123456', assuming the page dimensions are 200 (width) x 600 (height).\"\n        }\n    ]\n}"}
{"role": "assistant", "content": "[Thought]: To answer the question, we need to find the baselines used in the paper and determine which baseline performs the best according to Table 2. We will start by retrieving the relevant section content from the paper with the given `paper_id`.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND section_title LIKE '%Experiment%' OR section_title LIKE '%Results%';\")"}
{"role": "user", "content": "[Observation]:\n{\"section_content\":\"FURTHER EXPERIMENTAL RESULTS\\nDatasetsize Ablation Study. We provide the exact numbers for the dataset size ablation study\\npresented in Section 4.6, Figure 2. These numbers are presented in Table 6.\\n10% dataset\\n25% dataset\\n50% dataset\\n75% dataset\\n100% dataset\\nSuccess Rate\\nentropy\\nSuccess Rate\\nentropy\\nSuccess Rate\\nentropy\\nSuccess Rate\\nentropy\\nSuccess Rate\\nentropy\\nBC-MLP\\n0.0\\u00b10.0\\n0.0\\u00b10.0\\n0.208\\u00b10.125\\n0.0\\u00b10.0\\n0.586\\u00b10.078\\n0.0\\u00b10.0\\n0.691\\u00b10.066\\n0.0\\u00b10.0\\n0.708\\u00b10.052\\n0.0\\u00b10.0\\nVAE-State\\n0.0\\u00b10.0\\n0.0\\u00b10.0\\n0.035\\u00b10.034\\n0.002\\u00b10.005\\n0.121\\u00b10.062\\n0.020\\u00b10.026\\n0.363\\u00b10.086\\n0.034\\u00b10.032\\n0.579\\u00b10.138\\n0.030\\u00b10.053\\nBeT-MLP\\n0.0\\u00b10.0\\n0.0\\u00b10.0\\n0.194\\u00b10.099\\n0.120\\u00b10.084\\n0.466\\u00b10.025\\n0.345\\u00b10.097\\n0.438\\u00b10.103\\n0.381\\u00b10.156\\n0.507\\u00b10.081\\n0.485\\u00b10.092\\nIBC\\n0.0\\u00b10.0\\n0.0\\u00b10.0\\n0.392\\u00b10.039\\n0.220\\u00b10.049\\n0.554\\u00b10.033\\n0.307\\u00b10.141\\n0.602\\u00b10.086\\n0.293\\u00b10.094\\n0.638\\u00b10.027\\n0.300\\u00b10.048\\nDDPM-MLP\\n0.056\\u00b10.007\\n0.002\\u00b10.006\\n0.336\\u00b10.131\\n0.275\\u00b10.162\\n0.699\\u00b10.009\\n0.628\\u00b10.041\\n0.748\\u00b10.029\\n0.652\\u00b10.029\\n0.763\\u00b10.039\\n0.712\\u00b10.064\\nBC-GPT\\n0.163\\u00b10.062\\n0.0\\u00b10.0\\n0.500\\u00b10.088\\n0.0\\u00b10.0\\n0.722\\u00b10.065\\n0.0\\u00b10.0\\n0.811\\u00b10.043\\n0.0\\u00b10.0\\n0.833\\u00b10.043\\n0.0\\u00b10.0\\nBeT\\n0.184\\u00b10.037\\n0.104\\u00b10.071\\n0.385\\u00b10.064\\n0.333\\u00b10.116\\n0.545\\u00b10.055\\n0.400\\u00b10.106\\n0.602\\u00b10.024\\n0.511\\u00b10.095\\n0.645\\u00b10.069\\n0.536\\u00b10.105\\nDDPM-GPT\\n0.337\\u00b10.064\\n0.249\\u00b10.029\\n0.659\\u00b10.068\\n0.520\\u00b10.049\\n0.791\\u00b10.027\\n0.597\\u00b10.048\\n0.852\\u00b10.020\\n0.609\\u00b10.023\\n0.839\\u00b10.020\\n0.664\\u00b10.075\\nBESO\\n0.436\\u00b10.043\\n0.262\\u00b10.069\\n0.735\\u00b10.042\\n0.534\\u00b10.058\\n0.812\\u00b10.015\\n0.570\\u00b10.056\\n0.862\\u00b10.012\\n0.649\\u00b10.030\\n0.861\\u00b10.016\\n0.711\\u00b10.030\\nVAE-ACT\\n0.146\\u00b10.075\\n0.006\\u00b10.007\\n0.670\\u00b10.123\\n0.028\\u00b10.019\\n0.885\\u00b10.021\\n0.036\\u00b10.012\\n0.890\\u00b10.039\\n0.050\\u00b10.0194\\n0.891\\u00b10.022\\n0.025\\u00b10.012\\nDDPM-ACT\\n0.364\\u00b10.084\\n0.309\\u00b10.097\\n0.730\\u00b10.030\\n0.659\\u00b10.022\\n0.814\\u00b10.016\\n0.681\\u00b10.021\\n0.829\\u00b10.022\\n0.736\\u00b10.020\\n0.849\\u00b10.023\\n0.749\\u00b10.041\\nTable 6: Exact numbers for the dataset size ablation study presented in Section 4.6, Figure 2.\\nHyparameter Ablation Study. To gain deeper insights into the hyperparameter sensitivity of our\\nmethods, we conducted an ablation study on the Aligning (T2) task, that highlights the influence of\\nkey hyperparameters on performance metrics. Specifically, for DDPM-GPT and BESO, we ablated\\nthe number of diffusion steps; for BeT, we focused on the number of action clusters, and for VAE-\\nACT, we ablated the scaling factor of the Kullback-Leibler divergence in the loss term. The detailed\\nresults are presented in Figure 9.\\nOur findings reveal that increasing the number of diffusion steps primarily enhances behavior en-\\ntropy, signifying an improvement in the model\\u2019s capacity to capture multi-modalities. However,\\nfor BeT and VAE-ACT, we did not observe a consistent trend indicating a correlation between the\\nparameters and success rate or entropy.\\nInference Time Comparison. We conducted a comprehensive comparison of inference times for\\nall baseline models using both state- and image-based inputs. For state-based inputs, we utilized a\\n16\\nPublished as a conference paper at ICLR 2024\\n4\\n8\\n16\\n32\\n0.88\\n0.9\\n0.92\\n0.94\\n0.96\\nDiffusion steps\\nsuccess rate\\nDDPM\\nBESO\\n4\\n8\\n16\\n32\\n0.85\\n0.9\\n0.95\\n1\\nDiffusion steps\\nentropy\\nDDPM\\nBESO\\n4\\n8\\n16\\n32\\n0.84\\n0.86\\n0.88\\n0.9\\n0.92\\nDiffusion steps\\nsuccess rate\\nDDPM\\nBESO\\n4\\n8\\n16\\n32\\n0.4\\n0.6\\n0.8\\nDiffusion steps\\nentropy\\nDDPM\\nBESO\\n8\\n16\\n32\\n64\\n0.65\\n0.7\\n0.75\\naction clusters\\nsuccess rate\\nBeT\\n8\\n16\\n32\\n64\\n0.76\\n0.78\\n0.8\\n0.82\\n0.84\\n0.86\\naction clusters\\nentropy\\nBeT\\n8\\n16\\n32\\n64\\n0.6\\n0.65\\n0.7\\naction clusters\\nsuccess rate\\nBeT\\n8\\n16\\n32\\n64\\n0.45\\n0.5\\n0.55\\naction clusters\\nentropy\\nBeT\\n0.01\\n0.1\\n1\\n10\\n100\\n0.4\\n0.6\\n0.8\\nscaling for KL loss\\nsuccess rate\\nVAE-ACT\\n0.01\\n0.1\\n1\\n10\\n100\\n0.1\\n0.15\\n0.2\\n0.25\\n0.3\\nscaling for KL loss\\nentropy\\nVAE-ACT\\n0.01\\n0.1\\n1\\n10\\n100\\n0.88\\n0.9\\n0.92\\nscaling for KL loss\\nsuccess rate\\nVAE-ACT\\n0.01\\n0.1\\n1\\n10\\n100\\n0.02\\n0.03\\n0.04\\n0.05\\nscaling for KL loss\\nentropy\\nVAE-ACT\\nFigure 9: Ablation Study for the most important hyperparameters of DDPM\\/BESO (diffusion steps),\\nBeT (action clusters), and VaE (scaling factor for Kullback-Leibler loss term) on the Avoiding (T1)\\nand Aligning (T2) task.\\nten-dimensional input, while for images, a 2 \\u00d7 3 \\u00d7 96 \\u00d7 96 dimensional input was employed. To\\nensure robustness, we repeated the inference process 500 times and calculated the average time. The\\ndetailed results are presented in Table 7.\\nIt is evident that methods employing (discretized) Langevin dynamics, such as IBC and diffusion-\\nbased models, exhibit longer inference times. It\\u2019s noteworthy that methods labeled with \\u2019ACT\\u2019\\npredict three steps into the future, resulting in lower per-step inference times.\\nInference Time\\nstate-based\\nimage-based\\nBC-MLP\\n0.46 ms\\n5.77 ms\\nVAE-State\\n0.52 ms\\n6.41 ms\\nBeT-MLP\\n1.00 ms\\n6.56 ms\\nIBC\\n21.94 ms\\n26.53 ms\\nDDPM-MLP\\n5.29 ms\\n11.53 ms\\nVAE-ACT\\n0.64 ms\\n5.68 ms\\nBC-GPT\\n1.84 ms\\n7.82 ms\\nBeT\\n1.97 ms\\n7.89 ms\\nDDPM-GPT\\n30.52 ms\\n43.56 ms\\nBESO\\n31.14 ms\\n40.30 ms\\nDDPM-ACT\\n12.75 ms\\n14.81 ms\\nTable 7: Inference time comparison averaged over 500 runs. Methods labeled with \\u2019ACT\\u2019 predict\\nthree steps into the future, resulting in lower per-step inference times.\\nPosition vs. Velocity Control. Similar to Chi et al. (2023), we conducted a comparison between\\nposition control (absolute actions) and velocity control (relative actions) for DDPM-ACT and BESO\\nacross three distinct tasks. The results, obtained from four different seeds, are presented in Table 8.\\n17\\nPublished as a conference paper at ICLR 2024\\nOur findings indicate that employing velocity control leads to a significant improvement in both\\nsuccess rate and entropy for the tasks.\\nAvoiding (T1)\\nAligning (T2)\\nPushing (T3)\\nVelocity Control\\nSuccess Rate\\nEntropy\\nSuccess Rate\\nEntropy\\nSuccess Rate\\nEntropy\\nBESO\\n0.950\\u00b10.015\\n0.856\\u00b10.018\\n0.861\\u00b10.016\\n0.711\\u00b10.030\\n0.794\\u00b10.095\\n0.871\\u00b10.037\\nDDPM-ACT\\n0.899\\u00b10.006\\n0.863\\u00b10.068\\n0.849\\u00b10.023\\n0.749\\u00b10.041\\n0.920\\u00b10.027\\n0.859\\u00b10.012\\nPosition Control\\nSuccess Rate\\nEntropy\\nSuccess Rate\\nEntropy\\nSuccess Rate\\nEntropy\\nBESO\\n0.459\\u00b10.333\\n0.327\\u00b10.226\\n0.133\\u00b10.024\\n0.071\\u00b10.066\\n0.013\\u00b10.010\\n0.000\\u00b10.000\\nDDPM-ACT\\n0.153\\u00b10.040\\n0.836\\u00b10.054\\n0.413\\u00b10.163\\n0.385\\u00b10.347\\n0.404\\u00b10.141\\n0.478\\u00b10.077\\nTable 8: Comparison between position control (absolute actions) and velocity control (relative ac-\\ntions). The results are averaged over four seeds.\\nResult Visualization for Avoiding Task (T1). To offer deeper insights into the diverse behaviors of\\nthe policies, we present visualizations of the end-effector trajectories for various methods in Figure\\n10.\\nIBC, BeT, BESO, and DDPM-ACT manage to acquire a diverse set of skills, while the other methods\\nstruggle to represent the different modes present in the data distribution. This is consistent with the\\nresults presented in Table 3.\\n(a) VAE-State\\n(b) VAE-ACT\\n(c) IBC\\n(d) BeT\\n(e) BESO\\n(f) DDPM-ACT\\nFigure 10: Visualization of 100 end-effector trajectories for different methods, as indicated by the\\nsub-captions.\\n18\\nPublished as a conference paper at ICLR 2024\\nC\"}\n{\"section_content\":\"We summarize the observations and analysis of the results from our experiments 4 as follows:\\nMATE excels at both in-domain and out-ofdomain generalization: Table 1 summarizes the performance of the proposed MATE and multiple baseline models, under various settings, across in-domain and OOD datasets. Overall, we observe that our proposed approach (row 8) signifcantly outperforms text-only baseline (row 3) on in-domain datasets indicating that audio information helps even when we have suffcient target domain corpus for fne-tuning. Furthermore, results on OOD datasets indicate that MATE generalizes much better to new domains in the complete absence of domain data (zero-shot setting), when compared to the text-only baseline, by utilizing the rich information from audio.\\nMLMs are more effective multi-modal rescorers than autoregressive LMs: Rows 2-5 indicate a signifcant performance gap between BERT and autoregressive rescorers (LAS\\/GPT-2). BERT-Text, which is a text-only baseline, outperforms even the multi-modal GPT2 indicating the root cause of the gap is the lack of bi-directional (left and right) context in GPT2 which is necessary for reliable and effective LLM scoring, hence validating the choice of MLM in MATE.\\n\\nAlignment loss gives signifcant performance boost: To study the effect of alignment loss, we train the multi-modal rescorer with two loss functions: Mean squared error (MSE) loss and contrastive loss. Signifcant performance gains (row 6 vs. row 7-8) in Table 1 indicate that explicit alignment techniques greatly improve learning of multimodal representations. Specifcally, contrastive loss not only aligns relevant pairs like MSE loss, but also promotes distancing irrelevant samples, leading to improved generalization on OOD sets.\\nParameter-effcient fne-tuning results in limited gains: Rows 9-11 study the performance of a multi-modal rescorer under different parameter effcient fne-tuning settings. We observe that performance degrades as we move from full fnetuning to adapter-tuning and freezing the full BERT encoder layers, indicating that fne-tuning BERT encoder is the most benefcial in terms of performance improvement. As expected, in comparison to model with full fne-tuning (row 6), rows 9-11 exhibit lower performance. This suggests that frozen or parameter-effcient training methods may lack the model capacity to fully leverage the acoustic information present in the multi-modal data.\\nMATE is the most effective few-shot learner: To study the effect of few-shot learning, we plot the relative WER reduction (WERR) on Voxpopuli and WSJ datasets across different resource conditions as shown in Figure 2. We observe that MATE transfers well to the new domains in the zero-shot setting with no training or domain data at all. Fewshot performance clearly improves with more examples and goes a reasonable way towards closing the gap from zero-shot performance to full fnetuning performance. We also observe that MATE consistently has superior performance to text-only baseline across both datasets, confrming the ability to rapidly adapt to new domains by leveraging additional information from the audio modality.\\nMATE achieves best zero-shot performance improvement on downstream SLU tasks: To evaluate the effectiveness of the proposed approach on the end goals in a dialog system, we compare it with other baselines using metrics such as scenario\\/action accuracy and entity F1 score in a zeroshot setting on SLURP dataset. From results in Table 2, we observe that MATE consistently outperforms5 the other baselines on end-to-end goals indicating that the improvements are mainly on\"}\n{\"section_content\":\"Since each view may predict more than one tuple, we frst aggregate the results of all views and then use the tuples that appear in most views as the fnal prediction. Specifcally, for an input sentence $\\\\textbf{\\\\em x}$ , suppose we prompt a trained model to generate from $m$ selected permutations, and the set of predicted tuples for permutation pi is T p\\u2032i, which may contain one or more sentiment tuples, and then we can obtain the fnal aggregated result $T_{\\\\mathrm{MvP}}^{\\\\prime}$ by the following equation:\"}\n{\"section_content\":\"\"}\n{\"section_content\":\"Our methods outperform previous best baselines signifcantly in supervised settings among 4 tasks, 10 datasets, becoming the new state-of-the-art in all of them. As shown in Table 2, we observe that:\\n1) By aggregating results from multiple views, MVP surpasses the most of previous single-order methods. In comparison with Paraphrase, the single-view method which applies templates with elements in a fxed order, MVP achieves a sizable improvement of $1.89\\\\%$ on average, verifying the effectiveness of multiple informative views.\\n2) Element order-based prompt learning effectively guides the generation of tuples by unifying training and inference. Compared with DLO augmenting data on the target side, MVP obtains an improvement of $1.34\\\\%$ by generating tuples controllably with designed element order-based prompts.\\n\\n3) MVP can be applied without abundant pretraining simply and achieves better performance. It is notable that MVP trained on T5-base exceeds UIE using T5-v1.1-base and subsequently trained on a large corpus with 65M instances on all datasets of ASTE $(+1.00$ on average).\\nMulti-task Learning. By permutation and combination, MVP (multi-task) obtains generalized ability among diverse tasks. Compared with LEGO-ABSA, a multi-task unifed baseline, MVP (multi-task) obtains a $+2.82\\\\%$ absolute improvement in F1 score on average.\\nMVP, a single model completing tuple prediction by information from multiple views, can be naturally employed on multiple ABSA tasks, achieving competitive or better performances than previous methods that require task-specifc fne-tuning, data augmentation (e.g., Seq2Path) or complex pretraining (e.g., UIE), either in single-task or multitasking settings, showing strong stability.\"}\n{\"section_content\":\"To further explore the behavior of our methods in low-resource settings, we train Paraphrase, DLO, MVP using $1\\\\%$ , $2\\\\%$ , $5\\\\%$ , $10\\\\%$ , and $20\\\\%$ of 4 different training sets in 2 domains over 4 tasks. The F1 scores of test sets are reported in Table 3. We fnd that MVP, with effcient prompts from different views, achieves better results than previous works with only a small number of samples. In particular, MVP outperforms Paraphrase and DLO substantially in all settings with a performance boost of $5.70\\\\%$ and $3.87\\\\%$ F1 on average.\\nCross-task transfer. Based on MVP, transfer brings further signifcant improvements, from triplets to quadruplets and vice versa. MVP (transfer) performs relatively well in extremely lowresource situations, thus exceeding strong baselines under cross-task transfer situations, both in-domain and cross-domain. Compared with DLO (transfer), MVP (transfer) achieves considerably better results under various transfer settings, showing a strong transferability (from $50.36\\\\%$ to $68.78\\\\%$ for TASD). Rather than capture task-specifc features, MVP effectively shares ABSA abilities. MVP (transfer) trained with simple tasks (TASD and ASTE here) with adequate data can be easily transferred to tough tasks (ASQP and ACOS here) when the dataset sizes are small, and vice versa.\\nTable 4: Ablation of constrained decoding and effect of aggregation strategy on ASTE (L14) and ASQP (R15). \\u201cw\\/o cd\\u201d discards the constrained decoding during inference. MVP (rank) and MVP(rand) are both single-view strategies. The former selects the top-ranked sequence based on the prediction scores (perplexity) of generated sequences from multiple views during inference while the latter randomly samples one.\"}\n\n... # only display 6 rows in JSON format, more are truncated due to length constraint based on max_tokens (5000)"}
{"role": "assistant", "content": "[Thought]: The retrieved section content contains the baselines and the performance results. We need to extract the list of baselines and identify which baseline performs the best according to Table 2.\n[Action]:\nClassicRetrieve(query='What baselines are used in the paper and which baseline performs the best according to Table 2?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.7506,\"pdf_id\":\"1b83eae2-c18a-5090-906e-5457a635e702\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"05062194-2164-5cec-8345-996d5ef0b098\",\"text\":\"different approaches. The performance comparison between baselines and ours is reported in Table 1\\n(Gym, Adroit and Kitchen) and Table 2 (AntMaze). Detailed results are discussed below.\\n6\"}\n{\"score\":0.7501,\"pdf_id\":\"f08b0ee4-2fd1-50e0-a346-0e586851195a\",\"page_number\":2,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4bb2f3ed-1d74-57fd-ab1e-090c8468d963\",\"text\":\"baselines.\\n2\"}\n{\"score\":0.7499,\"pdf_id\":\"b8f8b65b-c583-54ec-a1eb-5bce152d22f3\",\"page_number\":13,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"ba166dbb-8d95-5521-a490-6ba65698ed8f\",\"text\":\"Table 7: Results for the four additional baselines.\\n4708\"}\n{\"score\":0.7385,\"pdf_id\":\"997fc3f6-5b96-5e1f-bdd8-8a69a54c6586\",\"page_number\":14,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"dd8bdf1f-6797-5b8d-834f-2c07152e0f3a\",\"text\":\"baselines (Section 4.1), and can be viewed as a good trade-off between efficiency and performance.\\n14\"}\n{\"score\":0.731,\"pdf_id\":\"18b71546-9bf3-592c-b0ef-cd4fb867c75f\",\"page_number\":25,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"8541efe6-2f74-52e3-86f4-9502607dbe54\",\"text\":\"We provide the full results of all baseline methods at Tabs. 8 to 14. We report best and worst\\nperformance of these baselines in Sec. 5.\\n25\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context does not provide the specific baselines and performance results. We need to focus on the specific section content from the paper with the given `paper_id` to extract the required information.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT table_content FROM tables WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND table_caption LIKE '%Table 2%';\")"}
{"role": "user", "content": "[Observation]:\n{\"table_content\":\"<html><body><table><tr><td rowspan=\\\"2\\\">Method<\\/td><td colspan=\\\"2\\\">En=Zh<\\/td><td colspan=\\\"2\\\">Zh=En<\\/td><td colspan=\\\"2\\\">Ru=De<\\/td><td colspan=\\\"2\\\">De=Ru<\\/td><\\/tr><tr><td>COMET20<\\/td><td>COMET22<\\/td><td>COMET20<\\/td><td>COMET22<\\/td><td>COMET20<\\/td><td>COMET22<\\/td><td>COMET20<\\/td><td>COMET22<\\/td><\\/tr><tr><td><\\/td><td colspan=\\\"8\\\">-w\\/1-shot<\\/td><\\/tr><tr><td>Random<\\/td><td>35.7<\\/td><td>81.5<\\/td><td>60.9<\\/td><td>85.1<\\/td><td>44.0<\\/td><td>79.8<\\/td><td>52.4<\\/td><td>83.6<\\/td><\\/tr><tr><td>BM25<\\/td><td>35.1<\\/td><td>81.3<\\/td><td>60.9<\\/td><td>85.1<\\/td><td>42.2<\\/td><td>79.5<\\/td><td>50.2<\\/td><td>83.4<\\/td><\\/tr><tr><td>TopK<\\/td><td>35.9<\\/td><td>81.5<\\/td><td>61.0<\\/td><td>85.1<\\/td><td>43.9<\\/td><td>79.7<\\/td><td>49.7<\\/td><td>83.3<\\/td><\\/tr><tr><td>Ours<\\/td><td>37.17<\\/td><td>81.7t<\\/td><td>61.7<\\/td><td>85.4t<\\/td><td>43.9<\\/td><td>79.9<\\/td><td>51.8t<\\/td><td>83.87<\\/td><\\/tr><tr><td colspan=\\\"9\\\">-w\\/3-shot<\\/td><\\/tr><tr><td>Random<\\/td><td>40.1<\\/td><td>82.4<\\/td><td>62.7<\\/td><td>85.5<\\/td><td>47.8<\\/td><td>80.6<\\/td><td>54.6<\\/td><td>84.0<\\/td><\\/tr><tr><td>BM25<\\/td><td>39.6<\\/td><td>82.3<\\/td><td>62.3<\\/td><td>85.4<\\/td><td>47.0<\\/td><td>80.5<\\/td><td>53.2<\\/td><td>83.9<\\/td><\\/tr><tr><td>TopK<\\/td><td>39.9<\\/td><td>82.4<\\/td><td>63.3<\\/td><td>85.6<\\/td><td>46.8<\\/td><td>80.4<\\/td><td>53.1<\\/td><td>83.9<\\/td><\\/tr><tr><td>Ours<\\/td><td>40.7<\\/td><td>82.6t<\\/td><td>63.3<\\/td><td>85.7<\\/td><td>47.97<\\/td><td>80.87<\\/td><td>55.37<\\/td><td>84.5t<\\/td><\\/tr><\\/table><\\/body><\\/html>\"}\n\nIn total, 1 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved table content does not match the expected Table 2 from the paper. We need to retrieve the correct table content that includes the baselines and their performance.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT table_content FROM tables WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND table_caption LIKE '%Table 2%' AND table_content LIKE '%Baseline%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which means the table content we are looking for might not be in the `tables` table with the given conditions. We need to try a different approach to find the relevant information. Let's retrieve the section content that mentions the baselines and Table 2.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND section_content LIKE '%Table 2%' AND section_content LIKE '%Baseline%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which means the section content we are looking for might not be in the `sections` table with the given conditions. We need to try a different approach to find the relevant information. Let's retrieve the chunk content that mentions the baselines and Table 2.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND text_content LIKE '%Table 2%' AND text_content LIKE '%Baseline%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which means the chunk content we are looking for might not be in the `chunks` table with the given conditions. We need to try a different approach to find the relevant information. Let's use the vectorstore to retrieve the context that mentions the baselines and Table 2.\n[Action]:\nClassicRetrieve(query='What baselines are used in the paper and which baseline performs the best according to Table 2?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.7506,\"pdf_id\":\"1b83eae2-c18a-5090-906e-5457a635e702\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"05062194-2164-5cec-8345-996d5ef0b098\",\"text\":\"different approaches. The performance comparison between baselines and ours is reported in Table 1\\n(Gym, Adroit and Kitchen) and Table 2 (AntMaze). Detailed results are discussed below.\\n6\"}\n{\"score\":0.7501,\"pdf_id\":\"f08b0ee4-2fd1-50e0-a346-0e586851195a\",\"page_number\":2,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4bb2f3ed-1d74-57fd-ab1e-090c8468d963\",\"text\":\"baselines.\\n2\"}\n{\"score\":0.7499,\"pdf_id\":\"b8f8b65b-c583-54ec-a1eb-5bce152d22f3\",\"page_number\":13,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"ba166dbb-8d95-5521-a490-6ba65698ed8f\",\"text\":\"Table 7: Results for the four additional baselines.\\n4708\"}\n{\"score\":0.7385,\"pdf_id\":\"997fc3f6-5b96-5e1f-bdd8-8a69a54c6586\",\"page_number\":14,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"dd8bdf1f-6797-5b8d-834f-2c07152e0f3a\",\"text\":\"baselines (Section 4.1), and can be viewed as a good trade-off between efficiency and performance.\\n14\"}\n{\"score\":0.731,\"pdf_id\":\"18b71546-9bf3-592c-b0ef-cd4fb867c75f\",\"page_number\":25,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"8541efe6-2f74-52e3-86f4-9502607dbe54\",\"text\":\"We provide the full results of all baseline methods at Tabs. 8 to 14. We report best and worst\\nperformance of these baselines in Sec. 5.\\n25\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context does not provide the specific baselines and performance results for the paper with the given `paper_id`. We need to refine our query to focus more on the specific paper and Table 2.\n[Action]:\nClassicRetrieve(query='What baselines are used in the paper with ID 3d2fcb43-2cda-5645-99aa-da78c6cfd23f and which baseline performs the best according to Table 2?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.6832,\"pdf_id\":\"f08b0ee4-2fd1-50e0-a346-0e586851195a\",\"page_number\":2,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4bb2f3ed-1d74-57fd-ab1e-090c8468d963\",\"text\":\"baselines.\\n2\"}\n{\"score\":0.6812,\"pdf_id\":\"b8f8b65b-c583-54ec-a1eb-5bce152d22f3\",\"page_number\":13,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"ba166dbb-8d95-5521-a490-6ba65698ed8f\",\"text\":\"Table 7: Results for the four additional baselines.\\n4708\"}\n{\"score\":0.661,\"pdf_id\":\"997fc3f6-5b96-5e1f-bdd8-8a69a54c6586\",\"page_number\":14,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"dd8bdf1f-6797-5b8d-834f-2c07152e0f3a\",\"text\":\"baselines (Section 4.1), and can be viewed as a good trade-off between efficiency and performance.\\n14\"}\n{\"score\":0.6573,\"pdf_id\":\"147215e5-9448-5955-9d90-d99abc21d04f\",\"page_number\":2,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7d3c7a19-9447-5ea1-94f8-04fd829a1883\",\"text\":\"comparable or even better performance than the full baseline and alternative baselines.\\n2\"}\n{\"score\":0.6564,\"pdf_id\":\"18b71546-9bf3-592c-b0ef-cd4fb867c75f\",\"page_number\":25,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"8541efe6-2f74-52e3-86f4-9502607dbe54\",\"text\":\"We provide the full results of all baseline methods at Tabs. 8 to 14. We report best and worst\\nperformance of these baselines in Sec. 5.\\n25\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context still does not provide the specific baselines and performance results for the paper with the given `paper_id`. We need to try a more targeted SQL query to retrieve the exact table content from the `tables` table.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT table_content FROM tables WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND table_caption LIKE '%Table 2%' AND table_content LIKE '%Baseline%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which means the table content we are looking for might not be in the `tables` table with the given conditions. We need to try a different approach to find the relevant information. Let's retrieve the section content that mentions the baselines and Table 2, but with a more relaxed condition.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_content FROM sections WHERE ref_paper_id = '3d2fcb43-2cda-5645-99aa-da78c6cfd23f' AND section_content LIKE '%Table 2%' OR section_content LIKE '%Baseline%';\")"}
{"role": "user", "content": "[Observation]:\n{\"section_content\":\"Training & evaluation datasets. Our model only requires multi-view posed images to train. We use a mixture of multi-view posed renderings from Objaverse (Deitke et al., 2023) and posed real captures from MVImgNet (Yu et al., 2023) for training. To evaluate our model\\u2019s cross-dataset generalization capability, we utilize a couple of datasets, including OmniObject3D (Wu et al., 2023), Google Scanned Objects (GSO) (Downs et al., 2022), Amazon Berkeley Objects (ABO) (Collins et al., 2022), Common Objects 3D (CO3D) (Reizenstein et al., 2021), and DTU (Aan\\u00e6s et al., 2016). For OmniObject3D, GSO, ABO datasets, we randomly choose 500 objects for assessing our model\\u2019s performance. For CO3D dataset, we use the 400 held-out captures provided by Rel$\\\\mathrm{Pose++}$ (Lin et al., 2023a), which covers 10 object categories. For DTU dataset, we take the 15 objects with manually annotated masks provided by IDR (Yariv et al., 2020); for each object, we randomly select 8 different combinations of four input views, resulting in a total of 120 different testing inputs. Additional details can be found in the appendix.\\nBaselines. As our PF-LRM can do joint pose and shape estimation, we evaluate its performance against baselines on both tasks. For the pose estimation task, we compare PF-LRM with\\nFORGE (Jiang et al., 2022), RelPose $^{++}$ (Lin et al., 2023a), and the SfM-based method HLoc (Sarlin et al., 2019; Schonberger & Frahm, 2016). We also compare with FORGE in terms of the reconstruction quality. SRT (Sajjadi et al., 2022) is geometry-free and does not directly predict shapes like us; hence we did not compare with it due to this clear distinction in problem scopes.\\nMetrics. We use the pair-wise related pose errors as our metric as in $\\\\mathrm{RelPose++}$ (Lin et al., 2023a). We also report the percentage of image pairs with relative rotation errors below $15^{\\\\circ}$ and $30^{\\\\circ}$ . The translation part of the predicted relative pose is measured by its absolute difference from the groundtruth. We evaluate the reconstruction quality by comparing renderings of reconstructed NeRF using both predicted input-view poses and ground-truth novel-view poses against the ground-truth. We report the PSNR, SSIM and LPIPS (Zhang et al., 2018) metrics for measuring the image quality. We use 4 images as inputs for each object when comparing the performance of different methods.\"}\n{\"section_content\":\"Experimental settings\\nA.1\\nBaseline model\\nBased on the streaming nature of driving data, our baseline model employs a lightweight transformer-\\nbased architecture capable of historical prediction [45, 59]. This model predicts future trajectories\\nat intervals of 3s, 4s, and 5s for the Argoverse 2 dataset, and at 1s, 1.5s, and 2s for the Argoverse 1\\ndataset. The final prediction is the ultimate outcome of these trajectories. Features from the encoder\\nand decoder in the historical prediction phase are aggregated with those from the encoder and decoder\\nin the subsequent prediction phase. The aggregation module comprises two cross-attention layers.\\nThe historical prediction component is not used for the nuScenes dataset due to the limited history\\nsteps. In ablation studies, we remove the historical prediction component from the baseline model to\\nmake the experiments more efficient.\\nA.2\\nSingle-agent evaluation metrics\\nWe employ established metrics to evaluate our models, including minimum Average Displacement\\nError (minADEk), minimum Final Displacement Error (minFDEk), Miss Rate (MRk), and\\nBrier minimum Final Displacement Error (b-minFDEk). The minADEk metric calculates the\\nL2 distance between the ground-truth trajectory and the best K predicted trajectories, averaged\\nover all future time steps. The minFDEk metric measures the discrepancy between the endpoints\\nof the predicted trajectories and the ground truth. The MRk metric represents the proportion of\\nscenes where minFDEk exceeds 2 meters. To provide a more nuanced evaluation of uncertainty,\\nb-minFDEk incorporates (1\\u2212\\u03c0)2 into the final displacement error, where \\u03c0 indicates the probability\\nscore assigned by the model to the best-predicted trajectory.\\nA.3\\nMulti-agent evaluation metrics\\nFollowing the official settings for the Argoverse 2 multi-agent test set, we use metrics like Average\\nMinimum Final Displacement Error (avgMinFDE), Average Minimum Average Displacement\\nError (avgMinADE), and Actor Miss Rate (actorMR). The avgMinFDE metric calculates the\\naverage of the lowest Final Displacement Errors (FDEs) for all scored actors in a scenario, reflecting\\nprediction accuracy. Similarly, avgMinADE is the average of the lowest Average Displacement\\nErrors (ADEs) for all scored actors, showing overall movement accuracy. The actorMR measures\\nthe proportion of actors missed across the evaluation set, as previously described.\\nA.4\\nMore implementation details\\nIn addition to the details in Section 4.1, we set the dropout rates at 0.2 for single-agent settings and\\n0.1 for multi-agent settings. We employ a cosine learning rate schedule with a warm-up phase of\\n10 epochs. For normalization, we use nn.LayerNorm, and for activation, we use nn.GELU. No data\\naugmentation techniques are used. For details on the number of layers in each component, please\\nrefer to Table 10.\\nA.5\\nA precise formulation of the auxiliary losses\\nWe use an MLP to decode state queries into a single future trajectory Yf and calculate the loss with\\nground truth Ygt to obtain Lts:\\nLts = SmoothL1(Yf, Ygt).\\n(6)\\nWe use MLPs to decode the future trajectories Yf and probabilities Pf. So Lm is shown below:\\nYbest, Pbest = SelectBest(Yf, Ygt),\\nLm = SmoothL1(Ybest, Ygt) + CrossEntropy(Pf, Pbest).\\n(7)\\n14\\nTable 10: Number of layers in each component.\\nEnc\\/Dec\\nName\\nNum-AV1&AV2\\nNum-nuScenes\\nEnc\\nAgent Encoding Mamba\\n4\\n2\\nScene Context Transformer\\n5\\n4\\nDec\\nState Consistency Module Attention\\n2\\n2\\nState Consistency Module Mamba\\n2\\n2\\nMode Localization Module Attention\\n3\\n2\\nHybrid Coupling Module Attention\\n3\\n2\\nHybrid Coupling Module Mamba\\n2\\n2\\nB\"}\n{\"section_content\":\"Experiments\\n4.1\\nDatasets\\nRecently, several works have introduced datasets for text generation and editing tasks. TextDiffuser [5,\\n4] introduced a dataset named MARIO-10M, comprising approximately 10 million images annotated\\nwith bounding boxes and content of text regions. AnyText [28] proposed a benchmark named\\nAnyWord for evaluation. However, training on 10 million images requires significant computing\\nresources. Therefore, we introduce TG2M, a multilingual dataset sourced from publicly available\\nimages including MARIO-10M [5], Wukong [8], TextSeg [31], ArT [6], LSVT [27], MLT [16],\\nReCTS [37]. Although TG2M contains significantly fewer images, it is highly effective for training\\nand achieves superior performance. The dataset will be detailed in the Appendix A.\\n4.2\\nImplementation Details\\nIn our implementation, the diffusion model is initialized from SD1.52, and our code is based on\\ndiffusers3. The text embedding module follows AnyText [28]. We train our model on the TG2M\\ndataset using 8 NVIDIA A40 GPUs with a batch size of 176. Our model converges rapidly and\\nrequires only 5 epochs of training. The learning rate is set to 1e-5. Following previous generation\\nand recognition works [35, 29, 28, 7], we set the maximum length of each text line to 20 characters\\nand the maximum number of lines in each image to 5. During inference, the Fourier balance factors\\n\\u03b1, \\u03b2, and s are set to 1.4, 1.2, and 0.2, respectively.\\nWe evaluate our model on the AnyWord [28] benchmark. We use DuGuangOCR 4 to recognize the\\ntext region and measure performance using sentence accuracy (ACC), Normalized Edit Distance\\n(NED), and Fr\\u00e9chet Inception Distance (FID). During inference, the settings (random seed, control\\nstrength, etc.) are consistent across all experiments.\\n4.3\\nAblation Study\\nOwing to resource constraints, following AnyText [28], we randomly select 200k images (40k English\\nand 160k Chinese) from TG2M as the training set for ablation. The results are shown in Tab. 1.\\n2https:\\/\\/huggingface.co\\/runwayml\\/stable-diffusion-v1-5\\n3https:\\/\\/github.com\\/huggingface\\/diffusers\\n4https:\\/\\/modelscope.cn\\/models\\/iic\\/cv_convnextTiny_ocr-recognition-general_damo\\n7\\nTable 1: Ablation of proposed methods. FEC denotes Fourier enhancement convolution, GP signifies\\nglobal perception in FEC, TS represents the two-stage generation framework, and IFE indicates\\ninference Fourier enhancement.\\nFEC\\nGP\\nTS\\nIFE\\nEnglish\\nChinese\\nACC\\u2191\\nNED\\u2191\\nACC\\u2191\\nNED\\u2191\\n49.51\\n75.99\\n31.50\\n60.22\\n\\u2713\\n50.90 \\u21911.39\\n76.81 \\u21910.82\\n56.98 \\u219125.48\\n77.28 \\u219117.06\\n\\u2713\\n\\u2713\\n52.24 \\u21911.34\\n77.64 \\u21910.83\\n58.60 \\u21911.62\\n78.04 \\u21910.76\\n\\u2713\\n\\u2713\\n\\u2713\\n53.03 \\u21910.79\\n78.14 \\u21910.50\\n60.47 \\u21911.87\\n78.86 \\u21910.82\\n\\u2713\\n\\u2713\\n\\u2713\\n\\u2713\\n60.18 \\u21917.15\\n82.28 \\u21914.14\\n61.42 \\u21910.95\\n80.56 \\u21911.70\\nTable 2: Comparison with state-of-the-art methods. Data denotes the amount of data used in the\\ntraining process. Our baseline is the AnyText-v1.0 [28] model trained on our TG-2M.\\nMethods\\nData\\nEnglish\\nChinese\\nACC\\u2191\\nNED\\u2191\\nFID\\u2193\\nACC\\u2191\\nNED\\u2191\\nFID\\u2193\\nControlNet [36]\\n-\\n58.37\\n80.15\\n45.41\\n36.20\\n62.27\\n41.86\\nGlyphControl [33]\\n10M\\n52.62\\n75.29\\n43.10\\n4.54\\n10.17\\n49.51\\nTextDiffuser [5]\\n10M\\n59.21\\n79.51\\n41.31\\n6.05\\n12.62\\n53.37\\nAnyText-v1.0 [28]\\n3.5M\\n65.88\\n85.68\\n35.87\\n66.34\\n82.64\\n28.46\\nBaseline\\n2.5M\\n64.26 \\u00b1 0.51\\n84.80 \\u00b1 0.10\\n41.65 \\u00b1 2.84\\n65.02 \\u00b1 0.11\\n81.95 \\u00b1 0.12\\n30.04 \\u00b1 0.70\\nTextGen\\n2.5M\\n73.36 \\u00b1 0.15\\n88.98 \\u00b1 0.12\\n40.37 \\u00b1 1.71\\n67.92 \\u00b1 0.28\\n83.94 \\u00b1 0.09\\n28.90 \\u00b1 0.94\\nFrom the table, we observe the following: 1) All proposed methods yield performance gains in both\\nChinese and English text generation. 2) The FEC block enhances edge and texture features through\\nFourier enhancement, with more significant gains in Chinese due to the greater complexity of Chinese\\ncharacters. It is worth noting that our model trained only on 200k images can achieve 61.42% and\\n60.18% sentence accuracy on Chinese and English text generation, which is almost as good as the\\nstate-of-the-art performance on large-scale training sets.\\n4.4\\nComparison Results\\n4.4.1\\nQuantitative Results\\nCompared to other methods, our approach uses less data while outperforming the state-of-the-art,\\nas shown in Table 2. For a fair comparison, all methods are evaluated under the same settings. The\\nperformance of both the baseline and TextGen is assessed using four random seeds, with the final\\nmetrics reported as averages and standard deviations. Our method achieves a 9.1% gain in sentence\\naccuracy for English texts and a 2.9% gain for Chinese texts compared to our baseline trained on\\nTG-2M. Notably, other approaches require large amounts of training data and employ perceptual\\nloss to enhance performance, which is training-inefficient. Our method, in contrast, does not require\\nadditional losses and converges faster, making it easier to train. Besides, we compute the FID on\\nthe AnyWord-FID [28] benchmark. Our FID scores achieve comparable performance but not the\\nbest. The higher FID score does not necessarily imply the lower visual quality of the generated\\nimages. Our generated images demonstrate greater diversity and there is a distribution gap between\\nour training set and AnyWord. This issue is discussed in more detail in Appendix C.\\n4.4.2\\nQualitative Results\\nThe qualitative comparison is shown in Fig.7. Our TextGen produces high-quality images with text in\\nvarious scenarios and excels in generating artistic text with a wide range of visually appealing styles.\\nFor Chinese text, as demonstrated in Fig.8, TextGen generates more realistic and readable results,\\nparticularly in smaller texts. Finally, Fig. 9 illustrates the editing capabilities of our model, which can\\nedit various text styles and contents using the proposed inference paradigm.\\n8\\nAnyText\\nBaseline\\nGT\\nTextDiffuser2\\nTextDiffuser\\nGlyphControl\\nOurs\\nControlNet\\nFigure 7: Qualitative comparison of generation performance in English texts. Our TextGen can\\ngenerate more artistic and realistic texts.\\nOrigin Image\\nEdit1\\nEdit2\\nEdit3\\nAnyText\\nGT\\nOurs\\nControlNet\\nFigure 8: Comparison of generation in Chinese.\\nOrigin Image\\nEdit1\\nEdit2\\nEdit3\\nFigure 9: Visualization of editing performance.\\n5\"}\n{\"section_content\":\"Dataset. Our method is trained and evaluated using CO3Dv2 (Reizenstein et al., 2021). This dataset contains turntable videos spanning 51 categories of household objects. Each frame is labeled with poses determined by COLMAP (Schonberger et al., 2016; Schonberger & Frahm, 2016). Following Zhang et al. (2022), we train on 41 categories and hold out the remaining 10 categories for evaluating generalization.\\nBaselines. We evaluate our method against a handful of learning-based and correspondence-based pose estimation works.\\nCOLMAP (Schonberger et al., 2016; Schonberger & Frahm, 2016). COLMAP is a standard dense correspondence-based SfM pipeline. We use an implementation (Sarlin et al., 2019) which uses SuperPoint features (DeTone et al., 2018) and SuperGlue matching (Sarlin et al., 2020).\\nRelPose (Zhang et al., 2022). RelPose predicts relative rotations between pairs of cameras and defines evaluation procedures to optimize over a learned scoring function and determine joint rotations.\\n$R e l P o s e\\\\mathrel{+}+$ (Lin et al., 2024). RelPose $^{++}$ builds upon the pairwise scoring network of RelPose to incorporate multi-view reasoning via a transformer and also allows predicting camera translations.\\n$R{+}T$ Regression (Lin et al., 2024). To test the importance of modeling uncertainty, Lin et al. (2024) trains a baseline that directly regresses poses. We report the numbers from Lin et al. (2024).\\nPoseDiffusion (Wang et al., 2023). PoseDiffusion reformulates the pose estimation task as directly diffusing camera extrinsics and focal length. Additionally, they introduce a geometry-guided sampling error to enforce epipolar constraints on predicted poses. We evaluate PoseDiffusion with and without the geometry-guided sampling.\"}\n\n... # only display 4 rows in JSON format, more are truncated due to length constraint based on max_tokens (5000)"}
{"role": "assistant", "content": "[Thought]: The retrieved section content provides information about the baselines used in the paper and the performance metrics. We need to extract the specific baselines and the best-performing baseline according to Table 2.\n[Action]:\nGenerateAnswer(answer=[['FORGE', 'RelPose++', 'HLoc', 'SRT'], 'RelPose++'])"}
{"role": "user", "content": "[Observation]: [['FORGE', 'RelPose++', 'HLoc', 'SRT'], 'RelPose++']"}
