{"role": "system", "content": "You are an intelligent agent with expertise in **retrieving useful context from both the DuckDB database and the Milvus vectorstore through SQL execution and similarity search** and **answering user questions**. You will be given a natural language question concerning PDF files, along with the schema of both the database and the vectorstore. Your ultimate goal is to answer the input question with pre-defined answer format. The DuckDB database contains all parsed content of raw PDF files, while the Milvus vectorstore encodes specific column cells from the database as vectors. You can predict executable actions, interact with the hybrid environment (including database and vectorstore) across multiple turns, and retrieve necessary context until you are confident in resolving the question.\n\n--------\n\n## Task Description\nEach task consists of the following parts:\n\n[Question]: User question regarding the PDF, e.g., Is there any ...?\n[Answer Format]: it describes the format of the final answer, e.g., the answer is \"Yes\" or \"No\" without punctuation.\n[Anchor PDF]: Optional, a python str or list, the PDF(s) you must use to answer the question.\n[Reference PDF]: Optional, a python str or list, the PDF(s) you may use to answer the question.\n[Conference]: Optional, a python str or list, the conference(s) and year(s) of the relevant papers for retrieval.\n[Database Schema]: A detailed serialized schema of the DuckDB database for reference when generating SQL queries. It includes 1) tables, 2) columns and their data types, 3) descriptions for these schema items, and 4) primary key and foreign key constraints.\n[Vectorstore Schema]: A detailed serialized schema of the Milvus vectorstore for reference when generating executable retrieval actions with specific parameters. It includes 1) collections, 2) fields, 3) encodable (table, column) pairs in the relational database where the vectorized content originates, and 4) grammar for valid filter rules.\n\n\n--------\n\n## Action and Observation Space\nAll allowable action types include ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']. Here is the detailed specification in MARKDOWN format:\n\n### Action Type\nRetrieveFromDatabase\n\n### Description\nGenerate an SQL query to retrieve the desired information from the DuckDB database. Please refer to the concrete database schema to produce a valid and executable SQL.\n\n### Observation\nThe observation space is the execution result of the SQL query. You do not need to worry about the actual execution, we will perform it for you. If the SQL failed to execute, we will return the error message. Extremely long SQL output will be truncated.\n\n### Syntax and Parameters (MARKDOWN Format)\nRetrieveFromDatabase(sql: str)\n- sql: str, required. The concrete DuckDB SQL query to execute and retrieve results.\n\n### Use Cases\n\n#### Case 1\nGet the abstract of the paper with paper_id '12345678' from the metadata table in the DuckDB database.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT abstract FROM metadata WHERE paper_id = '12345678';\")\n\n\n#### Case 2\nFind which page in the paper with paper_id '12345678' contains Figure 3.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT pages.page_number FROM images JOIN pages JOIN metadata ON images.ref_page_id = pages.page_id AND pages.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = '12345678' AND images.image_caption LIKE '%Figure 3%';\")\n\n\n----\n\n### Action Type\nClassicRetrieve\n\n### Description\nGiven a query text, retrieve relevant context from the Milvus vectorstore.\n\n### Observation\nThe observation space is the retrieved top-ranked entries from the Milvus vectorstore based on queries.\n\n### Syntax and Parameters (MARKDOWN Format)\nClassicRetrieve(query: str, limit: int = 5)\n- query: str, required. The query text will be encoded and used to search for relevant context. You can rephrase the original user question to obtain a more clear and structured query requirement.\n- limit: int, optional, default to 5. The number of top-ranked context to retrieve. Please set it to a positive integer to limit the number of returned results. Extremely large limit values may be truncated.\n\n### Use Cases\n\n#### Case 1\nRetrieve top 5 pieces about a certain topic.\n\n[Action]: ClassicRetrieve(query='Is there any work about the topic structured RAG?')\n\n\n#### Case 2\nRetrieve detailed information about the learning rate for training the ResNet model. The top 4 most relevant entries will be returned based on the query.\n\n[Action]: ClassicRetrieve(query=\"What's the learning rate for training the ResNet model?\", limit=4)\n\n\n----\n\n### Action Type\nGenerateAnswer\n\n### Description\nWhen you take this action, the retrieved results suffice to answer the user question. PLEASE STRICTLY ADHERE TO THE ANSWER FORMAT FOR THE CURRENT QUESTION.\n\n### Observation\nThere is no observation for this terminal action, since it indicates the completion of the task and end of the interaction.\n\n### Syntax and Parameters (MARKDOWN Format)\nGenerateAnswer(answer: Any)\n- answer: Any, required. The final answer to the user question. Please adhere to the answer format for the current question.\n\n### Use Cases\n\n#### Case 1\nThe answer to the user question is 42.\n\n[Action]: GenerateAnswer(answer=42)\n\n\n#### Case 2\nThe answer to the user question is a list of strings: ['Results', 'Discussion'].\n\n[Action]: GenerateAnswer(answer=['Results', 'Discussion'])\n\n\n\n--------\n\n## Interaction Framework\n\nThe main interaction procedure proceeds like this:\n\n----\n\n[Thought]: ... reasoning process, why to take this action ...\n[Action]: ... which action to take, please strictly conform to the action specification ...\n[Observation]: ... execution results or error message after taking the action ...\n\n... # more interleaved triplets of ([Thought], [Action], [Observation])\n\n[Thought]: ... reasoning process to produce the final answer ...\n[Action]: ... the terminate action `GenerateAnswer`, there is no further observation ...\n\n----\n\nIn general, the main interaction loop consists of an interleaved of triplets ([Thought], [Action], [Observation]), except the last `GenerateAnswer` action which does not have \"[Observation]:\". You need to predict the \"[Thought]: ...\" followed by the \"[Action]: ...\" for each turn, and we will execute your action in the environment and provide the \"[Observation]: ...\" for the previous action.\n\n--------\n\n## Suggestions or Hints for Agent Interaction\n\n1. Explore multiple retrieval strategies. For example:\n- Experiment with different (table, column) pairs to extract diverse types of information.\n- Query various embedding models (collections) to find the most relevant context.\n\n2. Combine both structured and unstructured data. Concretely:\n- Use SQL queries to retrieve precise facts and structured data. Pay special attention to morphological variations in cell values.\n- Perform similarity searches in the vectorstore to capture semantic relationships and hidden insights.\n\n3. Iterate and refine:\n- If SQL execution result is not satisfactory, try alternative SQL queries to explore the database content carefully.\n- If the vector-based neural retrieval is insufficient, try alternative approaches or parameter settings.\n- Use your findings to validate or enrich the final response.\n\n4. Ensure confidence. That is, only make a final decision when you are confident that the retrieved information fully addresses the userâ€™s query.\n\n\nRemember that, for each question, you only have 20 interaction turns at most. Now, let's start!\n"}
{"role": "user", "content": "[Question]: For dataset MultiDialog, what's the number of dialogues,the number of turns, total length in hours, number of speakers, and the name of source dataset of dialogue scripts?Please adopt the statistics the most accurate you can find in the paper.\n[Answer Format]: Your answer should be a python list,of which the elements are in the following order: number of dialogues(int), number of turns(int), total length in hours(float), number of speakers(int), and the name of source dataset of dialogue scripts(str), every element of the list is an int or float or string representing the relevant dataset information.\n[Anchor PDF]: '4beb073a-74b4-563a-82a7-da7513acaff0'\n[Database Schema]: The database schema for /home/htc981/workspace/project/HNS-RAG/data/database/ai_research/ai_research.sql is as follows:\n/* database ai_research: This database contains information about AI research papers. Each PDF file is represented or parsed via different views, e.g., pages, sections, figures, tables, and references. We also extract the concrete content inside each concrete element via OCR.\n*/\n/* table metadata: This table stores metadata about each paper, including the number of pages, paper path and paper id.\n*/\nCREATE TABLE IF NOT EXISTS metadata (\n\tpaper_id UUID, -- A unique identifier for this paper.\n\ttitle VARCHAR, -- The title of this paper.\n\tabstract VARCHAR, -- The abstract of this paper.\n\tnum_pages INTEGER, -- The number of pages in this paper.\n\tconference_full VARCHAR, -- The full name of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tconference_abbreviation VARCHAR, -- The abbreviation of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tpub_year INTEGER, -- The year when this paper was published.\n\tvolume VARCHAR, -- The volume of the conference where this paper was published. e.g. findings.\n\tdownload_url VARCHAR, -- The url from which the paper can be downloaded.\n\tbibtex VARCHAR, -- The bibtex of this paper.\n\tauthors VARCHAR[], -- The full names of authors of this paper.\n\tpdf_path VARCHAR, -- The path to the PDF file of this paper.\n\ttldr VARCHAR, -- A brief summary of the paper's main idea or findings generated by LLM based on title and abstract.\n\ttags VARCHAR[], -- Keywords representing the paper's topics, methods, or applications generated by LLM based on title and abstract.,\n\tPRIMARY KEY (paper_id)\n);\n/* table pages: This table stores information of the pages in the papers, including their content, size and their order within the paper. The pagesare extracted using PyMuPDF.\n*/\nCREATE TABLE IF NOT EXISTS pages (\n\tpage_id UUID, -- A unique identifier for each page.\n\tpage_number INTEGER, -- The page number in the current paper, starting from 1.\n\tpage_width INTEGER, -- The pixel width of the current page.\n\tpage_height INTEGER, -- The pixel height of the current page.\n\tpage_content VARCHAR, -- The content of the page.\n\tpage_summary VARCHAR, -- A brief summary of the page content, generated by LLM, focusing on key information and describing the page content.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (page_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table images: This table stores the information about images in each paper. The images are extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS images (\n\timage_id UUID, -- The unique identifier of the image.\n\timage_caption VARCHAR, -- The caption of this image, \"\" if it doesn't have one.\n\timage_summary VARCHAR, -- A brief summary of the image, generated by LLM, focusing on key information and describing the image.\n\tbounding_box INTEGER[4], -- The bounding box of the figure in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height which are used to determine the shape of the rectangle.\n\tordinal INTEGER, -- Each figure is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (image_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table chunks: This table contains the information of each chunk of text (chunk size = 512 tokens with no overlapping) in each page of the paper. A chunk is a sub-text that is extracted from the main text using langchain, such as a sentence or a paragraph.\n*/\nCREATE TABLE IF NOT EXISTS chunks (\n\tchunk_id UUID, -- A unique identifier for each chunk of text.\n\ttext_content VARCHAR, -- The text content of the current chunk.\n\tordinal INTEGER, -- Each chunk is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (chunk_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table tables: This table stores information about tables extracted from pages using MinerU, including content (in html format), bounding box and summary of each table generated by LLM.\n*/\nCREATE TABLE IF NOT EXISTS tables (\n\ttable_id UUID, -- A unique identifier for each table.\n\ttable_caption VARCHAR, -- Caption of the table, showing key information of the table.\n\ttable_content VARCHAR, -- The content of the table in html format.\n\ttable_summary VARCHAR, -- A brief summary of the table content generated by LLM, focusing on key information and describing the table content.\n\tbounding_box INTEGER[4], -- The bounding box of the table in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height.\n\tordinal INTEGER, -- Each table is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this table is located.,\n\tPRIMARY KEY (table_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table sections: This table contains the text content of each section in the paper, e.g. `Introduction`, `Experiment`, `Conclusion`, `Reference`. The sections are extracted using PyMuPDF or MinerU.\n*/\nCREATE TABLE IF NOT EXISTS sections (\n\tsection_id UUID, -- A unique identifier for each section of text.\n\tsection_title VARCHAR, -- The title of the current section.\n\tsection_content VARCHAR, -- The text content of the current section.\n\tsection_summary VARCHAR, -- A brief summary of the section content generated by LLM, focusing on key information and describing the section content.\n\tordinal INTEGER, -- Each section is labeled with one distinct integer number in the paper, which starts from 0.\n\tpage_numbers INTEGER[], -- A list of page numbers where current section is located in the relevant paper.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (section_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table equations: This table stores information about equations extracted from pages using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS equations (\n\tequation_id UUID, -- A unique identifier for each equation.\n\tequation_content VARCHAR, -- Content of the equation in latex format.\n\tordinal INTEGER, -- Each equation is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the paper ID in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the page ID in the `pages` table where this equation is located.,\n\tPRIMARY KEY (equation_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table reference: This table stores information about references extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS reference (\n\treference_id UUID, -- A unique identifier for each reference.\n\treference_content VARCHAR, -- Content of the reference.\n\tordinal INTEGER, -- Each reference is labeled with one distinct integer number according to its order in the paper, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this reference is located.,\n\tPRIMARY KEY (reference_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n[Vectorstore Schema]: The vectorstore schema for ai_research is as follows. You can try collections with different encoding models or modalities:\n[\n    {\n        \"collection_name\": \"text_bm25_en\",\n        \"modality\": \"text\",\n        \"embed_type\": \"bm25\",\n        \"embed_model\": \"en\",\n        \"description\": \"This collection is used to store the sparse embeddings generated by the BM25 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric inner-product (IP).\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"dtype\": \"INT64\",\n                \"is_primary\": true,\n                \"description\": \"The unique id for each encoded text vector in this collection.\"\n            },\n            {\n                \"name\": \"vector\",\n                \"dtype\": \"SPARSE_FLOAT_VECTOR\",\n                \"description\": \"The encoded sparse vector of the text content generated by the BM25 model. Note that, the raw text content can be uniquely identified by the triplet fields below: `table_name`, `column_name`, `primary_key`.\"\n            },\n            {\n                \"name\": \"pdf_id\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The unique id of the PDF file stored in the relational database that the encoded text belongs to. This field can be used to quickly filter the search space.\"\n            },\n            {\n                \"name\": \"page_number\",\n                \"dtype\": \"INT16\",\n                \"description\": \"The page number in the PDF file that the encoded text belongs to (starting from 1). This field can be used to quickly filter the search space. Value -1 means unknown.\"\n            },\n            {\n                \"name\": \"table_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which table in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"column_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which column under `table_name` in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"primary_key\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The primary key value of `table_name` (or which row) in the relational database that the text content belongs to. Note that, the triplet (`table_name`, `column_name`, `primary_key`) can be used to construct a one-to-one mapping between the `text` field in the current vectorstore and the cell entry in the relational database.\"\n            }\n        ]\n    },\n    {\n        \"collection_name\": \"text_sentence_transformers_all_minilm_l6_v2\",\n        \"modality\": \"text\",\n        \"embed_type\": \"sentence_transformers\",\n        \"embed_model\": \"all-MiniLM-L6-v2\",\n        \"description\": \"This collection is used to store the embeddings generated by the all-MiniLM-L6-v2 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric COSINE.\",\n        \"fields\": \"The fields of this collection are similar to the `text_bm25_en` collection.\"\n    }\n]\n\nThe following lists all encodable (table_name, column_name, encode_modality) information from the corresponding DuckDB database, where the encoded vector entries are sourced. Note that, for text modality, we directly encode cell values from the `table_name.column_name`; for image modality, we encode the cropped images for `page_number` in `pdf_id` with bounding boxes from `table_name.column_name`. You can leverage them for filter condition during similarity search:\n[\n    [\n        \"metadata\",\n        \"title\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"abstract\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"bibtex\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"tldr\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_content\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_summary\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_caption\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_summary\",\n        \"text\"\n    ],\n    [\n        \"chunks\",\n        \"text_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_caption\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_summary\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_title\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_content\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_summary\",\n        \"text\"\n    ],\n    [\n        \"equations\",\n        \"equation_content\",\n        \"text\"\n    ],\n    [\n        \"reference\",\n        \"reference_content\",\n        \"text\"\n    ]\n]\n\nHere are the operators that you can use in the filtering condition for the vectorstore:\n{\n    \"operators\": {\n        \"logical\": [\n            {\n                \"symbol\": \"not\",\n                \"example\": \"not expr\",\n                \"description\": \"True if expr is false.\"\n            },\n            {\n                \"symbol\": \"and\",\n                \"example\": \"expr1 and expr2\",\n                \"description\": \"True if both expr1 and expr2 are true.\"\n            },\n            {\n                \"symbol\": \"or\",\n                \"example\": \"expr1 or expr2\",\n                \"description\": \"True if either expr1 or expr2 are true.\"\n            }\n        ],\n        \"binary arithmetic\": [\n            {\n                \"symbol\": \"+\",\n                \"example\": \"a + b\",\n                \"description\": \"Add the two operands.\"\n            },\n            {\n                \"symbol\": \"-\",\n                \"example\": \"a - b\",\n                \"description\": \"Subtract the second operand from the first operand.\"\n            },\n            {\n                \"symbol\": \"*\",\n                \"example\": \"a * b\",\n                \"description\": \"Multiply the two operands.\"\n            },\n            {\n                \"symbol\": \"/\",\n                \"example\": \"a / b\",\n                \"description\": \"Divide the first operand by the second operand.\"\n            },\n            {\n                \"symbol\": \"**\",\n                \"example\": \"a ** b\",\n                \"description\": \"Raise the first operand to the power of the second operand.\"\n            },\n            {\n                \"symbol\": \"%\",\n                \"example\": \"a % b\",\n                \"description\": \"Divide the first operand by the second operand and yield the remainder portion.\"\n            }\n        ],\n        \"relational\": [\n            {\n                \"symbol\": \"<\",\n                \"example\": \"a < b\",\n                \"description\": \"True if a is less than b.\"\n            },\n            {\n                \"symbol\": \">\",\n                \"example\": \"a > b\",\n                \"description\": \"True if a is greater than b.\"\n            },\n            {\n                \"symbol\": \"==\",\n                \"example\": \"a == b\",\n                \"description\": \"True if a is equal to b. Please use **two** equal signs for equality comparison.\"\n            },\n            {\n                \"symbol\": \"!=\",\n                \"example\": \"a != b\",\n                \"description\": \"True if a is not equal to b.\"\n            },\n            {\n                \"symbol\": \"<=\",\n                \"example\": \"a <= b\",\n                \"description\": \"True if a is less than or equal to b.\"\n            },\n            {\n                \"symbol\": \">=\",\n                \"example\": \"a >= b\",\n                \"description\": \"True if a is greater than or equal to b.\"\n            },\n            {\n                \"symbol\": \"in\",\n                \"example\": \"a in [b, c, ...]\",\n                \"description\": \"True if a is equal to any of the values in the list.\"\n            }\n        ],\n        \"array operations\": [\n            {\n                \"symbol\": \"[]\",\n                \"example\": \"bbox[0]\",\n                \"description\": \"This expression gets the first element in array bbox. For example, 'bbox[0] < 50' evaluates to true if the value of bbox[0] is less than 50.\"\n            },\n            {\n                \"symbol\": \"array_contains\",\n                \"example\": \"array_contains(bbox, 100)\",\n                \"description\": \"This expression evaluates to true if array bbox contains element 100.\"\n            },\n            {\n                \"symbol\": \"array_length\",\n                \"example\": \"array_length(int_array) == 4\",\n                \"description\": \"This expression evaluates to true if int_array contains exactly 4 elements.\"\n            }\n        ]\n    },\n    \"use cases\": [\n        {\n            \"example\": \"table_name == 'chunks' and column_name == 'text_content'\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and column_name equal to 'text_content'.\"\n        },\n        {\n            \"example\": \"table_name == 'chunks' and primary_key in ['123', '456', '789']\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and primary_key equal to any of the values in the list ['123', '456', '789'].\"\n        },\n        {\n            \"example\": \"bbox[0] + bbox[2] <= 100 and bbox[1] + bbox[3] <= 300 and pdf_id == '123456' and page_number == 1\",\n            \"description\": \"For image modality, filter results to include only image regions that are entirely within the upper-left quadrant of page 1 in the PDF with ID '123456', assuming the page dimensions are 200 (width) x 600 (height).\"\n        }\n    ]\n}"}
{"role": "assistant", "content": "[Thought]: To find the statistics for the MultiDialog dataset, I will first retrieve the relevant sections or pages from the paper with the given `pdf_id`. I will then use the retrieved content to extract the required information.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT page_number, page_content FROM pages WHERE ref_paper_id = '4beb073a-74b4-563a-82a7-da7513acaff0';\")"}
{"role": "user", "content": "[Observation]:\n{\"page_number\":1,\"page_content\":\"Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 16334\\u201316348\\nAugust 11-16, 2024 \\u00a92024 Association for Computational Linguistics\\nLet\\u2019s Go Real Talk:\\nSpoken Dialogue Model for Face-to-Face Conversation\\nSe Jin Park\\u2217\\nChae Won Kim\\u2217\\nHyeongseop Rha\\nMinsu Kim\\nJoanna Hong\\nJeong Hun Yeo\\nYong Man Ro\\u2020\\nIntegrated Vision and Language Lab, KAIST\\n{jinny960812, chaewonkim, ryool_1832, sedne246, ymro}@kaist.ac.kr\\nms.k@ieee.org\\njoanna2587@gmail.com\\nAbstract\\nIn this paper, we introduce a novel Face-to-\\nFace spoken dialogue model.\\nIt processes\\naudio-visual speech from user input and\\ngenerates audio-visual speech as the response,\\nmarking the initial step towards creating an\\navatar chatbot system without relying on inter-\\nmediate text. To this end, we newly introduce\\nMultiDialog, the first large-scale multimodal\\n(i.e.,\\naudio and visual) spoken dialogue\\ncorpus containing 340 hours of approximately\\n9,000 dialogues, recorded based on the open\\ndomain dialogue dataset, TopicalChat. The\\nMultiDialog contains parallel audio-visual\\nrecordings of conversation partners acting\\naccording to the given script with emotion\\nannotations, which we expect to open up\\nresearch opportunities in multimodal synthesis.\\nOur Face-to-Face spoken dialogue model\\nincorporates a textually pretrained large lan-\\nguage model and adapts it into the audio-visual\\nspoken dialogue domain by incorporating\\nspeech-text joint pretraining. Through exten-\\nsive experiments, we validate the effectiveness\\nof our model in facilitating a face-to-face\\nconversation.\\nDemo and data are available\\nat\\nhttps:\\/\\/multidialog.github.io\\nand\\nhttps:\\/\\/huggingface.co\\/datasets\\/\\nIVLLab\\/MultiDialog, respectively.\\n1\\nIntroduction\\nSpoken Dialogue System (SDS), often referred to\\nas a conversational agent, engages in natural speech\\nconversations with humans by recognizing speech\\nfrom user input and providing contextually appro-\\npriate and accurate responses with speech. With\\n\\u2217Equal contribution. \\u2020Corresponding author. This work\\nwas supported by the National Research Foundation of Ko-\\nrea (NRF) grant funded by the Korea government (MSIT)\\n(No. NRF-2022R1A2C2005529) and Institute of Information\\n& communications Technology Planning & Evaluation (IITP)\\ngrant funded by the Korea government (MSIT) (No.2022-0-\\n00124, Development of Artificial Intelligence Technology for\\nSelf-Improving Competency-Aware Learning Capabilities).\\nspoken language as the primary interface, it has nu-\\nmerous applications for human-computer interac-\\ntions such as customer service and voice assistants.\\nHowever, when people communicate face-to-\\nface, we utilize not only audio but also visual in-\\nformation of the conversing partner to process spo-\\nken words and non-verbal cues (i.e., facial expres-\\nsions, gestures, and emotions) (Petridis et al., 2018;\\nHong et al., 2023). This multimodal information\\nenhances understanding of the speech content and\\nthe speaker\\u2019s intent. Furthermore, having a visual\\ncounterpart to audio can simulate a real face-to-\\nface conversation experience, making the user feel\\nmore connected and engaged.\\nIn this paper, we explore an audio-visual spo-\\nken dialogue system to facilitate direct face-to-face\\nconversation for the first time. Central to the devel-\\nopment of dialogue systems is the large amount of\\nhigh-quality dialogue data. Current dialogue sys-\\ntems are predominantly text-based, driven by the\\nabundance of text dialogue datasets (Lowe et al.,\\n2015; Li et al., 2017; Zhang et al., 2018; Rashkin\\net al., 2018; Budzianowski et al., 2018; Zhou et al.,\\n2018; Reddy et al., 2019; Lambert et al.; Ding et al.,\\n2023; K\\u00f6pf et al., 2023). Recently, several audio\\ndialogue datasets have been released (Lee et al.,\\n2023; Si et al., 2023; Nguyen et al., 2023a) which\\naugment existing text dialogue data (Li et al., 2017;\\nBudzianowski et al., 2018) with speech. However,\\nthose with visual components remain limited in\\nscale, comprising less than 15 hours in total (Busso\\net al., 2008; Poria et al., 2018). Addressing this data\\ngap, we introduce MultiDialog, the first large-scale\\naudio-visual spoken dialogue corpus. It consists of\\n340 hours of audio-visual recordings of approxi-\\nmately 9,000 dialogues, derived from open-domain\\ntext dialogue dataset, TopicalChat (Gopalakrish-\\nnan et al., 2023) which is an extensive multi-turn\\ndialogue corpus collected from real conversations\\ncovering 9 broad topics. The proposed MultiDialog\\nconsists of emotion annotations for each utterance\\n16334\\n\"}\n{\"page_number\":2,\"page_content\":\"Dataset\\n# Dialogues\\n# Turns\\nLength (hrs)\\nAudio\\nText\\nVideo\\nEmotion\\nIEMOCAP (Busso et al., 2008)\\n151\\n10,039\\n12\\n\\u2713\\n\\u2713\\n\\u2713\\n\\u2713\\nDSTC2 (Henderson et al., 2014)\\n1,612\\n23,354\\n32\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2717\\nMELD (Poria et al., 2018)\\n1,433\\n13,000\\n13.7\\n\\u2713\\n\\u2717\\n\\u2713\\n\\u2713\\nDailyTalk (Lee et al., 2023)\\n2,514\\n23,774\\n21.7\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2717\\nExpresso (Nguyen et al., 2023a)\\n391\\n2,400\\n47\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2713\\nSpokenWOZ (Si et al., 2023)\\n5,700\\n203,074\\n249\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2717\\nMultiDialog\\n8,733\\n187,859\\n340\\n\\u2713\\n\\u2713\\n\\u2713\\n\\u2713\\nTable 1: Comparison of MultiDialog dataset with publicly available multimodal dialogue datasets.\\nand simultaneous recordings of both the listener\\nand the speaker, presenting opportunities for di-\\nverse research; from face-to-face dialogue system\\nto talking face synthesis (Park et al., 2022; Zhang\\net al., 2023b), listener\\u2019s face synthesis (Song et al.,\\n2023; Zhou et al., 2023), and emotion-conditioned\\nface synthesis (Goyal et al., 2023).\\nBased on the MultiDialog dataset, we propose\\nthe first audio-visual spoken dialogue model that\\ncan directly process audio-visual speech as user\\ninput and generate audio-visual speech as the out-\\nput response. Motivated by the recent success of\\nthe direct spoken dialogue model using discretized\\nspeech tokens (Nguyen et al., 2023b; Zhang et al.,\\n2023a), we introduce audio-visual (AV) speech to-\\nkens extracted by quantizing audio-visual speech\\nfeatures from a self-supervised model (Shi et al.,\\n2021). Utilizing the AV speech tokens as pseudo\\ntexts, we integrate AV speech into a pretrained\\nlarge-language model (LLM) (Zhang et al., 2022)\\nthrough joint speech-text pretraining. The response\\nis also returned in AV speech tokens, which are\\nsynthesized into a talking face video as the output\\nfor direct interaction with the system.\\nOur contributions are in three folds: (1) We intro-\\nduce the first direct Face-to-Face dialogue model\\nwhich processes multimodal speech from user in-\\nput and generates multimodal speech as the output\\nresponse, facilitating a face-to-face conversation\\nsystem. (2) To build a face-to-face dialogue sys-\\ntem, we propose the first large-scale multimodal\\n(i.e., audio, visual, and text) dialogue corpus, Mul-\\ntiDialog consisting of 340 hours of approximately\\n9,000 audio-visual conversation streams. (3) We\\ndemonstrate that joint speech-text pretraining lever-\\naging a pre-trained large language model improves\\nupon direct initialization in retaining knowledge of\\nthe original large language model.\\n2\\nRelated Work\\n2.1\\nSpoken Dialogue Dataset\\nIn recent years, the development of speech dia-\\nlogue datasets has played a pivotal role in under-\\nstanding human behavior and building spoken dia-\\nlogue systems that emulate real-life conversations.\\nEarly speech datasets focus on analyzing human\\nbehavior such as emotion and intent in speech, es-\\ntablishing the foundation for spoken dialogue sys-\\ntems. IEMOCAP (Busso et al., 2008) and MELD\\n(Poria et al., 2018), comprising audio and video\\nrecordings of dialogues, are designed to study emo-\\ntional dynamics in conversations. In addition to\\nunderstanding emotions, DSTC2 (Henderson et al.,\\n2014) presents telephone-based speech dialogues\\nfor dialogue state tracking to predict user\\u2019s goals.\\nBuilding upon datasets that study human behavior\\nin speech, recent spoken dialogue datasets were\\nbuilt to model realistic dialogue systems. Expresso\\n(Nguyen et al., 2023a) introduces speech dialogues\\nspanning 26 expressive styles for natural speech\\nsynthesis. DailyTalk (Lee et al., 2023) and Spoken-\\nWOZ (Si et al., 2023) datasets introduce speech-\\ntext conversations for spoken dialogues. While ex-\\nisting works have contributed to advancing spoken\\nconversation systems, dialogue datasets are limited\\nin scale and solely consist of audio and text, thereby\\nconstraining the development of audio-visual spo-\\nken dialogue systems incorporating visual cues. To\\naddress these limitations, we expand the spoken\\ndialogue in scale and to the visual modality, and\\nintroduce MultiDialog, a large-scale multimodal\\nspoken dialogue dataset. A summary of existing\\nmultimodal dialogue datasets and MultiDialog is\\nshown in Table 1.\\n2.2\\nSpoken Dialogue Models\\nAudio Language Model, driven by transformer-\\nbased architecture, has made remarkable strides in\\nspeech processing. By treating continuous speech\\nas a discrete set of representations, speech can\\n16335\\n\"}\n{\"page_number\":3,\"page_content\":\"MultiDialog\\nTrain\\nValid Freq\\nValid Rare\\nTest Freq\\nTest Rare\\nTotal\\n# dialogues\\n7,011\\n448\\n443\\n450\\n381\\n8,733\\n# utterance\\n151,645\\n8,516\\n9,556\\n9,811\\n8,331\\n187,859\\navg # utterance\\/dialogue\\n21.63\\n19.01\\n21.57\\n21.80\\n21.87\\n21.51\\navg length\\/utterance (s)\\n6.50\\n6.23\\n6.40\\n6.99\\n6.49\\n6.51\\navg length\\/dialogue (min)\\n2.34\\n1.97\\n2.28\\n2.54\\n2.36\\n2.33\\ntotal length (hr)\\n273.93\\n14.74\\n17.00\\n19.04\\n15.01\\n339.71\\nTable 2: Datailed statistics of MultiDialog\\nbe effectively modeled as text, allowing the ap-\\nplication of Natural Language Processing (NLP)\\ntechniques. While it has made notable progress\\nin speech synthesis (Lakhotia et al., 2021; Borsos\\net al., 2023; Wang et al., 2023a; Hassid et al., 2023;\\nNachmani et al., 2023), speech translation (Bar-\\nrault et al., 2023; Dong et al., 2023; Rubenstein\\net al., 2023), and speech recognition (Wang et al.,\\n2023b), spoken dialogue system is a relatively un-\\nexplored field of research due to the scarcity of\\nspoken dialogue datasets. Several works made an\\neffort to tackle data issues by leveraging the power\\nof large language models (LLMs). SpeechGPT\\n(Zhang et al., 2023a) first converts speech into dis-\\ncrete speech tokens, and then designs a three-stage\\ntraining pipeline on paired speech data, speech in-\\nstruction data, and chain-of-modality instruction\\ndata. AudioGPT (Huang et al., 2023) instructs\\nLLMs to generate commands for controlling exter-\\nnal tools before inputting them into the LLMs. d-\\nGSLM (Nguyen et al., 2023b) models two-channel\\nconversations to produce natural turn-taking con-\\nversations.\\nThere are Multimodal Large Language Models\\n(MM-LLM) (Wu et al., 2023; Gong et al., 2023)\\ncapable of processing both visual input and output.\\nHowever, they are visual grounding dialogue sys-\\ntems that use visual information as supplementary\\nfor tasks such as image captioning and image edit-\\ning. In contrast, we aim to build an audio-visual\\nspoken dialogue system (i.e., facial movement re-\\nlated to the speech) to enhance the understanding\\nof speech content and enrich the communication\\nexperience, emulating a real face-to-face conversa-\\ntion.\\n3\\nMultiDialog Dataset\\n3.1\\nPreparation\\nTo obtain audio-visual recordings of dialogues, we\\ngathered 12 fluent English speakers, with vary-\\ning gender, age, and nationality.\\nThe partici-\\npants, aged 20 to 30, came from six different\\ncountries, with six female and six male actors,\\nas shown in Appendix A.2. We derived dialogue\\nscripts from the open-domain dialogue dataset, Top-\\nicalChat (Gopalakrishnan et al., 2023) which is a\\nrich knowledge-grounded dataset collected from\\nreal human-human conversations. It spans eight\\nbroad topics including fashion, politics, books,\\nsports, general entertainment, music, science &\\ntechnology, and movies. It is annotated for eight\\nemotions: Disgusted, Angry, Fearful, Happy, Sad,\\nSurprised, Neutral, and Curious to dive deeper. The\\nconversation partners don\\u2019t have explicitly defined\\nroles as \\u2018speaker\\u2019 or \\u2018listener\\u2019 so they interact nat-\\nurally similar to how people engage in real-world\\nconversations. Due to the topical variety, emotion\\nannotation, and representation of natural human\\nconversations, we chose TopicalChat as the foun-\\ndation for constructing the multimodal dialogue\\ndataset.\\n3.2\\nRecording\\nData was recorded in a professional recording stu-\\ndio with a green screen and minimal background\\nnoise, shown in Appendix A.4. During a recording\\nsession, two conversation partners sat side-by-side\\nand were recorded with a separate camera and a\\nmicrophone. The camera position was adjusted\\naccording to the individual\\u2019s height to capture the\\nupper body, starting from the shoulders. The par-\\nticipants were asked to act according to a given\\nscript conveying the desired emotion annotation\\nfor each utterance. We specifically provided de-\\ntailed instructions for visual and audio cues based\\non the Facial Action Coding System (Ekman and\\nFriesen, 1978) and tone (Gangamohan et al., 2016)\\nfor each emotion as follows:\\n\\u2022 Neutral: normal resting face, emotionless,\\nspeak still with natural information.\\n\\u2022 Happy: lip corner puller, cheek raiser, lips\\nparts, speak cheerfully in a higher tone.\\n\\u2022 Sad: drooping upper eyelids, slight pulling\\ndown of lips corners, speak in a sad, lower\\ntone.\\n16336\\n\"}\n{\"page_number\":4,\"page_content\":\"\\u2022 Fearful: eyebrows raised and pulled together,\\neye pulled open, speak in a soft and low tone.\\n\\u2022 Surprise: eyebrows raised, eyes wide open,\\nmouth open wider, speak excitedly with high\\ntone.\\n\\u2022 Disgusted: eyebrows lowered and pulled to-\\ngether, nose wrinkled, cheek raised, upper lip\\nraised, speak in a normal tone with disgusted\\nintonation.\\n\\u2022 Anger: eyebrows lowered and pulled together,\\neyes glare, speak powerfully with high tone.\\nFor recordings, we combined the emotion labels\\n\\u2018Neutral\\u2019 and \\u2018Curious to dive deeper\\u2019 into a single\\nlabel \\u2018Neutral\\u2019 due to the lack of visually appar-\\nent difference between the two. In addition to the\\ninstructions, we displayed sample images on the\\nscreen so that the actors could mimic the facial ex-\\npressions corresponding to the emotion. Moreover,\\nwhen the turn passes to another participant, they\\nnaturally react while listening. Participants were\\ninstructed to press a button to proceed to the next\\nutterance, which recorded the start and end times\\nof each turn for post-processing. The audio streams\\nwere recorded in a mono WAV format at 48kHz\\nand the video streams in full HD at 30fps.\\n3.3\\nPost-Processing\\nTo refine the data, we had an annotator go through\\nthe audio-visual recordings to check if there were\\nany misalignments between the audio and visual\\nstreams. We asked the annotator to manually adjust\\nthe misalignments by sliding the start time. Addi-\\ntionally, we filtered out recordings that were miss-\\ning either audio or visual streams. Then, we seg-\\nmented the recordings into conversations and turns\\nbased on the recorded timesteps of each turn. As a\\nresult, the post-processed MultiDialog dataset con-\\nsists of approximately 340 hours of audio-visual\\nvideos of 9,000 dialogues between 6 pairs of con-\\nversation partners. The final statistics of our dataset\\nare shown in Table 2. Furthermore, we release a\\ngold emotion dialogue subset selected based on\\nrigorous annotation evaluation. Please refer to the\\nAppendix A.3.1 for more details.\\n4\\nAudio-Visual Spoken Dialogue System\\nBased on the proposed MultiDialog dataset, we\\nintroduce an audio-visual spoken dialogue system\\nthat directly understands the audio-visual of the\\nuser\\u2019s face video and generates appropriate re-\\nsponses with audio-visual face video. It consists of\\nthree main parts: 1) Encoding audio-visual speech\\ninto discrete representations, namely audio-visual\\n(AV) speech tokens. 2) Conducting multimodal\\nspoken dialogue language modeling using the AV\\nspeech tokens as pseudo texts. 3) Projecting the\\noutput AV speech tokens into the audio and visual\\nspace for direct face-to-face dialogue.\\n4.1\\nAudio-Visual Speech Encoding\\nBy integrating both audio and visual modalities,\\nwe can improve the dialogue system\\u2019s understand-\\ning of the speech content. This is because speech\\nnot only comprises auditory signals but also visual\\ncues from the movements of the speaker\\u2019s mouth.\\nThis visual information complements auditory sig-\\nnals, particularly in noisy environments, resulting\\nin more robust performance (Afouras et al., 2018).\\nTo this end, we adopt a unified approach to\\nmodel both the audio and visual of talking face\\ninput into audio-visual speech tokens. Inspired by\\nthe recent success of utilizing discrete speech to-\\nkens extracted from self-supervised speech models\\n(Schneider et al., 2019; Baevski et al., 2020; Hsu\\net al., 2021; Chung et al., 2021; Babu et al., 2021)\\nin speech processing (Lakhotia et al., 2021; Lee\\net al., 2021; Maiti et al., 2023; Kim et al., 2023), we\\ntokenize the audio and visual streams into audio-\\nvisual speech tokens (a.k.a. AV speech tokens).\\nSpecifically, we employ one of the multimodal\\nspeech models, AV-HuBERT (Shi et al., 2021), a\\nstate-of-the-art self-supervised framework for un-\\nderstanding speech by both seeing and hearing. It\\nis trained on raw audio-visual face videos to predict\\ndiscrete clusters from speech (Hassid et al., 2023).\\nThe audio-visual speech features are extracted and\\nquantized into discrete tokens as in (Lakhotia et al.,\\n2021; Popuri et al., 2022; Kim et al., 2024). By\\ncombining the visual cues and the auditory infor-\\nmation, the audio-visual speech tokens extract both\\nlinguistic and phonetic information. Then, we treat\\nthe AV speech tokens as pseudo text to train our\\nAudio-Visual Spoken Dialogue LM.\\n4.2\\nAudio-Visual Spoken Dialogue Language\\nModeling\\nAs shown in Fig. 1, our audio-visual spoken dia-\\nlogue language model is trained with the AV speech\\ntokens on our MultiDialog dataset. Previous work\\n(Hassid et al., 2023) showed that initializing a\\nspeech language model with a textually pretrained\\nlanguage model (LLM) leads to better performance\\nand faster convergence. Accordingly, we use a pre-\\n16337\\n\"}\n\n... # only display 4 rows in JSON format, more are truncated due to length constraint based on max_tokens (5000)"}
{"role": "assistant", "content": "[Thought]: From the retrieved pages, I can see that the relevant statistics for the MultiDialog dataset are provided in Table 1 and Table 2. I will extract the required information from these tables.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT page_number, page_content FROM pages WHERE ref_paper_id = '4beb073a-74b4-563a-82a7-da7513acaff0' AND page_number IN (1, 2, 3);\")"}
{"role": "user", "content": "[Observation]:\n{\"page_number\":1,\"page_content\":\"Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 16334\\u201316348\\nAugust 11-16, 2024 \\u00a92024 Association for Computational Linguistics\\nLet\\u2019s Go Real Talk:\\nSpoken Dialogue Model for Face-to-Face Conversation\\nSe Jin Park\\u2217\\nChae Won Kim\\u2217\\nHyeongseop Rha\\nMinsu Kim\\nJoanna Hong\\nJeong Hun Yeo\\nYong Man Ro\\u2020\\nIntegrated Vision and Language Lab, KAIST\\n{jinny960812, chaewonkim, ryool_1832, sedne246, ymro}@kaist.ac.kr\\nms.k@ieee.org\\njoanna2587@gmail.com\\nAbstract\\nIn this paper, we introduce a novel Face-to-\\nFace spoken dialogue model.\\nIt processes\\naudio-visual speech from user input and\\ngenerates audio-visual speech as the response,\\nmarking the initial step towards creating an\\navatar chatbot system without relying on inter-\\nmediate text. To this end, we newly introduce\\nMultiDialog, the first large-scale multimodal\\n(i.e.,\\naudio and visual) spoken dialogue\\ncorpus containing 340 hours of approximately\\n9,000 dialogues, recorded based on the open\\ndomain dialogue dataset, TopicalChat. The\\nMultiDialog contains parallel audio-visual\\nrecordings of conversation partners acting\\naccording to the given script with emotion\\nannotations, which we expect to open up\\nresearch opportunities in multimodal synthesis.\\nOur Face-to-Face spoken dialogue model\\nincorporates a textually pretrained large lan-\\nguage model and adapts it into the audio-visual\\nspoken dialogue domain by incorporating\\nspeech-text joint pretraining. Through exten-\\nsive experiments, we validate the effectiveness\\nof our model in facilitating a face-to-face\\nconversation.\\nDemo and data are available\\nat\\nhttps:\\/\\/multidialog.github.io\\nand\\nhttps:\\/\\/huggingface.co\\/datasets\\/\\nIVLLab\\/MultiDialog, respectively.\\n1\\nIntroduction\\nSpoken Dialogue System (SDS), often referred to\\nas a conversational agent, engages in natural speech\\nconversations with humans by recognizing speech\\nfrom user input and providing contextually appro-\\npriate and accurate responses with speech. With\\n\\u2217Equal contribution. \\u2020Corresponding author. This work\\nwas supported by the National Research Foundation of Ko-\\nrea (NRF) grant funded by the Korea government (MSIT)\\n(No. NRF-2022R1A2C2005529) and Institute of Information\\n& communications Technology Planning & Evaluation (IITP)\\ngrant funded by the Korea government (MSIT) (No.2022-0-\\n00124, Development of Artificial Intelligence Technology for\\nSelf-Improving Competency-Aware Learning Capabilities).\\nspoken language as the primary interface, it has nu-\\nmerous applications for human-computer interac-\\ntions such as customer service and voice assistants.\\nHowever, when people communicate face-to-\\nface, we utilize not only audio but also visual in-\\nformation of the conversing partner to process spo-\\nken words and non-verbal cues (i.e., facial expres-\\nsions, gestures, and emotions) (Petridis et al., 2018;\\nHong et al., 2023). This multimodal information\\nenhances understanding of the speech content and\\nthe speaker\\u2019s intent. Furthermore, having a visual\\ncounterpart to audio can simulate a real face-to-\\nface conversation experience, making the user feel\\nmore connected and engaged.\\nIn this paper, we explore an audio-visual spo-\\nken dialogue system to facilitate direct face-to-face\\nconversation for the first time. Central to the devel-\\nopment of dialogue systems is the large amount of\\nhigh-quality dialogue data. Current dialogue sys-\\ntems are predominantly text-based, driven by the\\nabundance of text dialogue datasets (Lowe et al.,\\n2015; Li et al., 2017; Zhang et al., 2018; Rashkin\\net al., 2018; Budzianowski et al., 2018; Zhou et al.,\\n2018; Reddy et al., 2019; Lambert et al.; Ding et al.,\\n2023; K\\u00f6pf et al., 2023). Recently, several audio\\ndialogue datasets have been released (Lee et al.,\\n2023; Si et al., 2023; Nguyen et al., 2023a) which\\naugment existing text dialogue data (Li et al., 2017;\\nBudzianowski et al., 2018) with speech. However,\\nthose with visual components remain limited in\\nscale, comprising less than 15 hours in total (Busso\\net al., 2008; Poria et al., 2018). Addressing this data\\ngap, we introduce MultiDialog, the first large-scale\\naudio-visual spoken dialogue corpus. It consists of\\n340 hours of audio-visual recordings of approxi-\\nmately 9,000 dialogues, derived from open-domain\\ntext dialogue dataset, TopicalChat (Gopalakrish-\\nnan et al., 2023) which is an extensive multi-turn\\ndialogue corpus collected from real conversations\\ncovering 9 broad topics. The proposed MultiDialog\\nconsists of emotion annotations for each utterance\\n16334\\n\"}\n{\"page_number\":2,\"page_content\":\"Dataset\\n# Dialogues\\n# Turns\\nLength (hrs)\\nAudio\\nText\\nVideo\\nEmotion\\nIEMOCAP (Busso et al., 2008)\\n151\\n10,039\\n12\\n\\u2713\\n\\u2713\\n\\u2713\\n\\u2713\\nDSTC2 (Henderson et al., 2014)\\n1,612\\n23,354\\n32\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2717\\nMELD (Poria et al., 2018)\\n1,433\\n13,000\\n13.7\\n\\u2713\\n\\u2717\\n\\u2713\\n\\u2713\\nDailyTalk (Lee et al., 2023)\\n2,514\\n23,774\\n21.7\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2717\\nExpresso (Nguyen et al., 2023a)\\n391\\n2,400\\n47\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2713\\nSpokenWOZ (Si et al., 2023)\\n5,700\\n203,074\\n249\\n\\u2713\\n\\u2713\\n\\u2717\\n\\u2717\\nMultiDialog\\n8,733\\n187,859\\n340\\n\\u2713\\n\\u2713\\n\\u2713\\n\\u2713\\nTable 1: Comparison of MultiDialog dataset with publicly available multimodal dialogue datasets.\\nand simultaneous recordings of both the listener\\nand the speaker, presenting opportunities for di-\\nverse research; from face-to-face dialogue system\\nto talking face synthesis (Park et al., 2022; Zhang\\net al., 2023b), listener\\u2019s face synthesis (Song et al.,\\n2023; Zhou et al., 2023), and emotion-conditioned\\nface synthesis (Goyal et al., 2023).\\nBased on the MultiDialog dataset, we propose\\nthe first audio-visual spoken dialogue model that\\ncan directly process audio-visual speech as user\\ninput and generate audio-visual speech as the out-\\nput response. Motivated by the recent success of\\nthe direct spoken dialogue model using discretized\\nspeech tokens (Nguyen et al., 2023b; Zhang et al.,\\n2023a), we introduce audio-visual (AV) speech to-\\nkens extracted by quantizing audio-visual speech\\nfeatures from a self-supervised model (Shi et al.,\\n2021). Utilizing the AV speech tokens as pseudo\\ntexts, we integrate AV speech into a pretrained\\nlarge-language model (LLM) (Zhang et al., 2022)\\nthrough joint speech-text pretraining. The response\\nis also returned in AV speech tokens, which are\\nsynthesized into a talking face video as the output\\nfor direct interaction with the system.\\nOur contributions are in three folds: (1) We intro-\\nduce the first direct Face-to-Face dialogue model\\nwhich processes multimodal speech from user in-\\nput and generates multimodal speech as the output\\nresponse, facilitating a face-to-face conversation\\nsystem. (2) To build a face-to-face dialogue sys-\\ntem, we propose the first large-scale multimodal\\n(i.e., audio, visual, and text) dialogue corpus, Mul-\\ntiDialog consisting of 340 hours of approximately\\n9,000 audio-visual conversation streams. (3) We\\ndemonstrate that joint speech-text pretraining lever-\\naging a pre-trained large language model improves\\nupon direct initialization in retaining knowledge of\\nthe original large language model.\\n2\\nRelated Work\\n2.1\\nSpoken Dialogue Dataset\\nIn recent years, the development of speech dia-\\nlogue datasets has played a pivotal role in under-\\nstanding human behavior and building spoken dia-\\nlogue systems that emulate real-life conversations.\\nEarly speech datasets focus on analyzing human\\nbehavior such as emotion and intent in speech, es-\\ntablishing the foundation for spoken dialogue sys-\\ntems. IEMOCAP (Busso et al., 2008) and MELD\\n(Poria et al., 2018), comprising audio and video\\nrecordings of dialogues, are designed to study emo-\\ntional dynamics in conversations. In addition to\\nunderstanding emotions, DSTC2 (Henderson et al.,\\n2014) presents telephone-based speech dialogues\\nfor dialogue state tracking to predict user\\u2019s goals.\\nBuilding upon datasets that study human behavior\\nin speech, recent spoken dialogue datasets were\\nbuilt to model realistic dialogue systems. Expresso\\n(Nguyen et al., 2023a) introduces speech dialogues\\nspanning 26 expressive styles for natural speech\\nsynthesis. DailyTalk (Lee et al., 2023) and Spoken-\\nWOZ (Si et al., 2023) datasets introduce speech-\\ntext conversations for spoken dialogues. While ex-\\nisting works have contributed to advancing spoken\\nconversation systems, dialogue datasets are limited\\nin scale and solely consist of audio and text, thereby\\nconstraining the development of audio-visual spo-\\nken dialogue systems incorporating visual cues. To\\naddress these limitations, we expand the spoken\\ndialogue in scale and to the visual modality, and\\nintroduce MultiDialog, a large-scale multimodal\\nspoken dialogue dataset. A summary of existing\\nmultimodal dialogue datasets and MultiDialog is\\nshown in Table 1.\\n2.2\\nSpoken Dialogue Models\\nAudio Language Model, driven by transformer-\\nbased architecture, has made remarkable strides in\\nspeech processing. By treating continuous speech\\nas a discrete set of representations, speech can\\n16335\\n\"}\n{\"page_number\":3,\"page_content\":\"MultiDialog\\nTrain\\nValid Freq\\nValid Rare\\nTest Freq\\nTest Rare\\nTotal\\n# dialogues\\n7,011\\n448\\n443\\n450\\n381\\n8,733\\n# utterance\\n151,645\\n8,516\\n9,556\\n9,811\\n8,331\\n187,859\\navg # utterance\\/dialogue\\n21.63\\n19.01\\n21.57\\n21.80\\n21.87\\n21.51\\navg length\\/utterance (s)\\n6.50\\n6.23\\n6.40\\n6.99\\n6.49\\n6.51\\navg length\\/dialogue (min)\\n2.34\\n1.97\\n2.28\\n2.54\\n2.36\\n2.33\\ntotal length (hr)\\n273.93\\n14.74\\n17.00\\n19.04\\n15.01\\n339.71\\nTable 2: Datailed statistics of MultiDialog\\nbe effectively modeled as text, allowing the ap-\\nplication of Natural Language Processing (NLP)\\ntechniques. While it has made notable progress\\nin speech synthesis (Lakhotia et al., 2021; Borsos\\net al., 2023; Wang et al., 2023a; Hassid et al., 2023;\\nNachmani et al., 2023), speech translation (Bar-\\nrault et al., 2023; Dong et al., 2023; Rubenstein\\net al., 2023), and speech recognition (Wang et al.,\\n2023b), spoken dialogue system is a relatively un-\\nexplored field of research due to the scarcity of\\nspoken dialogue datasets. Several works made an\\neffort to tackle data issues by leveraging the power\\nof large language models (LLMs). SpeechGPT\\n(Zhang et al., 2023a) first converts speech into dis-\\ncrete speech tokens, and then designs a three-stage\\ntraining pipeline on paired speech data, speech in-\\nstruction data, and chain-of-modality instruction\\ndata. AudioGPT (Huang et al., 2023) instructs\\nLLMs to generate commands for controlling exter-\\nnal tools before inputting them into the LLMs. d-\\nGSLM (Nguyen et al., 2023b) models two-channel\\nconversations to produce natural turn-taking con-\\nversations.\\nThere are Multimodal Large Language Models\\n(MM-LLM) (Wu et al., 2023; Gong et al., 2023)\\ncapable of processing both visual input and output.\\nHowever, they are visual grounding dialogue sys-\\ntems that use visual information as supplementary\\nfor tasks such as image captioning and image edit-\\ning. In contrast, we aim to build an audio-visual\\nspoken dialogue system (i.e., facial movement re-\\nlated to the speech) to enhance the understanding\\nof speech content and enrich the communication\\nexperience, emulating a real face-to-face conversa-\\ntion.\\n3\\nMultiDialog Dataset\\n3.1\\nPreparation\\nTo obtain audio-visual recordings of dialogues, we\\ngathered 12 fluent English speakers, with vary-\\ning gender, age, and nationality.\\nThe partici-\\npants, aged 20 to 30, came from six different\\ncountries, with six female and six male actors,\\nas shown in Appendix A.2. We derived dialogue\\nscripts from the open-domain dialogue dataset, Top-\\nicalChat (Gopalakrishnan et al., 2023) which is a\\nrich knowledge-grounded dataset collected from\\nreal human-human conversations. It spans eight\\nbroad topics including fashion, politics, books,\\nsports, general entertainment, music, science &\\ntechnology, and movies. It is annotated for eight\\nemotions: Disgusted, Angry, Fearful, Happy, Sad,\\nSurprised, Neutral, and Curious to dive deeper. The\\nconversation partners don\\u2019t have explicitly defined\\nroles as \\u2018speaker\\u2019 or \\u2018listener\\u2019 so they interact nat-\\nurally similar to how people engage in real-world\\nconversations. Due to the topical variety, emotion\\nannotation, and representation of natural human\\nconversations, we chose TopicalChat as the foun-\\ndation for constructing the multimodal dialogue\\ndataset.\\n3.2\\nRecording\\nData was recorded in a professional recording stu-\\ndio with a green screen and minimal background\\nnoise, shown in Appendix A.4. During a recording\\nsession, two conversation partners sat side-by-side\\nand were recorded with a separate camera and a\\nmicrophone. The camera position was adjusted\\naccording to the individual\\u2019s height to capture the\\nupper body, starting from the shoulders. The par-\\nticipants were asked to act according to a given\\nscript conveying the desired emotion annotation\\nfor each utterance. We specifically provided de-\\ntailed instructions for visual and audio cues based\\non the Facial Action Coding System (Ekman and\\nFriesen, 1978) and tone (Gangamohan et al., 2016)\\nfor each emotion as follows:\\n\\u2022 Neutral: normal resting face, emotionless,\\nspeak still with natural information.\\n\\u2022 Happy: lip corner puller, cheek raiser, lips\\nparts, speak cheerfully in a higher tone.\\n\\u2022 Sad: drooping upper eyelids, slight pulling\\ndown of lips corners, speak in a sad, lower\\ntone.\\n16336\\n\"}\n\nIn total, 3 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: From the retrieved pages, I can extract the required statistics for the MultiDialog dataset. Specifically, from Table 1 and Table 2, I can find the number of dialogues, the number of turns, the total length in hours, the number of speakers, and the name of the source dataset.\n[Action]:\nGenerateAnswer(answer=[8733, 187859, 340.0, 12, 'TopicalChat'])"}
{"role": "user", "content": "[Observation]: [8733, 187859, 340.0, 12, 'TopicalChat']"}
