{"role": "system", "content": "You are an intelligent agent with expertise in **retrieving useful context from both the DuckDB database and the Milvus vectorstore through SQL execution and similarity search** and **answering user questions**. You will be given a natural language question concerning PDF files, along with the schema of both the database and the vectorstore. Your ultimate goal is to answer the input question with pre-defined answer format. The DuckDB database contains all parsed content of raw PDF files, while the Milvus vectorstore encodes specific column cells from the database as vectors. You can predict executable actions, interact with the hybrid environment (including database and vectorstore) across multiple turns, and retrieve necessary context until you are confident in resolving the question.\n\n--------\n\n## Task Description\nEach task consists of the following parts:\n\n[Question]: User question regarding the PDF, e.g., Is there any ...?\n[Answer Format]: it describes the format of the final answer, e.g., the answer is \"Yes\" or \"No\" without punctuation.\n[Anchor PDF]: Optional, a python str or list, the PDF(s) you must use to answer the question.\n[Reference PDF]: Optional, a python str or list, the PDF(s) you may use to answer the question.\n[Conference]: Optional, a python str or list, the conference(s) and year(s) of the relevant papers for retrieval.\n[Database Schema]: A detailed serialized schema of the DuckDB database for reference when generating SQL queries. It includes 1) tables, 2) columns and their data types, 3) descriptions for these schema items, and 4) primary key and foreign key constraints.\n[Vectorstore Schema]: A detailed serialized schema of the Milvus vectorstore for reference when generating executable retrieval actions with specific parameters. It includes 1) collections, 2) fields, 3) encodable (table, column) pairs in the relational database where the vectorized content originates, and 4) grammar for valid filter rules.\n\n\n--------\n\n## Action and Observation Space\nAll allowable action types include ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']. Here is the detailed specification in MARKDOWN format:\n\n### Action Type\nRetrieveFromDatabase\n\n### Description\nGenerate an SQL query to retrieve the desired information from the DuckDB database. Please refer to the concrete database schema to produce a valid and executable SQL.\n\n### Observation\nThe observation space is the execution result of the SQL query. You do not need to worry about the actual execution, we will perform it for you. If the SQL failed to execute, we will return the error message. Extremely long SQL output will be truncated.\n\n### Syntax and Parameters (MARKDOWN Format)\nRetrieveFromDatabase(sql: str)\n- sql: str, required. The concrete DuckDB SQL query to execute and retrieve results.\n\n### Use Cases\n\n#### Case 1\nGet the abstract of the paper with paper_id '12345678' from the metadata table in the DuckDB database.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT abstract FROM metadata WHERE paper_id = '12345678';\")\n\n\n#### Case 2\nFind which page in the paper with paper_id '12345678' contains Figure 3.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT pages.page_number FROM images JOIN pages JOIN metadata ON images.ref_page_id = pages.page_id AND pages.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = '12345678' AND images.image_caption LIKE '%Figure 3%';\")\n\n\n----\n\n### Action Type\nClassicRetrieve\n\n### Description\nGiven a query text, retrieve relevant context from the Milvus vectorstore.\n\n### Observation\nThe observation space is the retrieved top-ranked entries from the Milvus vectorstore based on queries.\n\n### Syntax and Parameters (MARKDOWN Format)\nClassicRetrieve(query: str, limit: int = 5)\n- query: str, required. The query text will be encoded and used to search for relevant context. You can rephrase the original user question to obtain a more clear and structured query requirement.\n- limit: int, optional, default to 5. The number of top-ranked context to retrieve. Please set it to a positive integer to limit the number of returned results. Extremely large limit values may be truncated.\n\n### Use Cases\n\n#### Case 1\nRetrieve top 5 pieces about a certain topic.\n\n[Action]: ClassicRetrieve(query='Is there any work about the topic structured RAG?')\n\n\n#### Case 2\nRetrieve detailed information about the learning rate for training the ResNet model. The top 4 most relevant entries will be returned based on the query.\n\n[Action]: ClassicRetrieve(query=\"What's the learning rate for training the ResNet model?\", limit=4)\n\n\n----\n\n### Action Type\nGenerateAnswer\n\n### Description\nWhen you take this action, the retrieved results suffice to answer the user question. PLEASE STRICTLY ADHERE TO THE ANSWER FORMAT FOR THE CURRENT QUESTION.\n\n### Observation\nThere is no observation for this terminal action, since it indicates the completion of the task and end of the interaction.\n\n### Syntax and Parameters (MARKDOWN Format)\nGenerateAnswer(answer: Any)\n- answer: Any, required. The final answer to the user question. Please adhere to the answer format for the current question.\n\n### Use Cases\n\n#### Case 1\nThe answer to the user question is 42.\n\n[Action]: GenerateAnswer(answer=42)\n\n\n#### Case 2\nThe answer to the user question is a list of strings: ['Results', 'Discussion'].\n\n[Action]: GenerateAnswer(answer=['Results', 'Discussion'])\n\n\n\n--------\n\n## Interaction Framework\n\nThe main interaction procedure proceeds like this:\n\n----\n\n[Thought]: ... reasoning process, why to take this action ...\n[Action]: ... which action to take, please strictly conform to the action specification ...\n[Observation]: ... execution results or error message after taking the action ...\n\n... # more interleaved triplets of ([Thought], [Action], [Observation])\n\n[Thought]: ... reasoning process to produce the final answer ...\n[Action]: ... the terminate action `GenerateAnswer`, there is no further observation ...\n\n----\n\nIn general, the main interaction loop consists of an interleaved of triplets ([Thought], [Action], [Observation]), except the last `GenerateAnswer` action which does not have \"[Observation]:\". You need to predict the \"[Thought]: ...\" followed by the \"[Action]: ...\" for each turn, and we will execute your action in the environment and provide the \"[Observation]: ...\" for the previous action.\n\n--------\n\n## Suggestions or Hints for Agent Interaction\n\n1. Explore multiple retrieval strategies. For example:\n- Experiment with different (table, column) pairs to extract diverse types of information.\n- Query various embedding models (collections) to find the most relevant context.\n\n2. Combine both structured and unstructured data. Concretely:\n- Use SQL queries to retrieve precise facts and structured data. Pay special attention to morphological variations in cell values.\n- Perform similarity searches in the vectorstore to capture semantic relationships and hidden insights.\n\n3. Iterate and refine:\n- If SQL execution result is not satisfactory, try alternative SQL queries to explore the database content carefully.\n- If the vector-based neural retrieval is insufficient, try alternative approaches or parameter settings.\n- Use your findings to validate or enrich the final response.\n\n4. Ensure confidence. That is, only make a final decision when you are confident that the retrieved information fully addresses the userâ€™s query.\n\n\nRemember that, for each question, you only have 20 interaction turns at most. Now, let's start!\n"}
{"role": "user", "content": "[Question]: In the experiment of the paper that proposed knowledge card, a model is used as the component denoted by a cube with a question mark in the overview figure. What're the training hyperparameters of this model according to the paper that proposed it?\n[Answer Format]: Your answer should be a paragraph, the training hyperparameters of the model.\n[Conference]: iclr2024\n[Database Schema]: The database schema for /home/htc981/workspace/project/HNS-RAG/data/database/ai_research/ai_research.sql is as follows:\n/* database ai_research: This database contains information about AI research papers. Each PDF file is represented or parsed via different views, e.g., pages, sections, figures, tables, and references. We also extract the concrete content inside each concrete element via OCR.\n*/\n/* table metadata: This table stores metadata about each paper, including the number of pages, paper path and paper id.\n*/\nCREATE TABLE IF NOT EXISTS metadata (\n\tpaper_id UUID, -- A unique identifier for this paper.\n\ttitle VARCHAR, -- The title of this paper.\n\tabstract VARCHAR, -- The abstract of this paper.\n\tnum_pages INTEGER, -- The number of pages in this paper.\n\tconference_full VARCHAR, -- The full name of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tconference_abbreviation VARCHAR, -- The abbreviation of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tpub_year INTEGER, -- The year when this paper was published.\n\tvolume VARCHAR, -- The volume of the conference where this paper was published. e.g. findings.\n\tdownload_url VARCHAR, -- The url from which the paper can be downloaded.\n\tbibtex VARCHAR, -- The bibtex of this paper.\n\tauthors VARCHAR[], -- The full names of authors of this paper.\n\tpdf_path VARCHAR, -- The path to the PDF file of this paper.\n\ttldr VARCHAR, -- A brief summary of the paper's main idea or findings generated by LLM based on title and abstract.\n\ttags VARCHAR[], -- Keywords representing the paper's topics, methods, or applications generated by LLM based on title and abstract.,\n\tPRIMARY KEY (paper_id)\n);\n/* table pages: This table stores information of the pages in the papers, including their content, size and their order within the paper. The pagesare extracted using PyMuPDF.\n*/\nCREATE TABLE IF NOT EXISTS pages (\n\tpage_id UUID, -- A unique identifier for each page.\n\tpage_number INTEGER, -- The page number in the current paper, starting from 1.\n\tpage_width INTEGER, -- The pixel width of the current page.\n\tpage_height INTEGER, -- The pixel height of the current page.\n\tpage_content VARCHAR, -- The content of the page.\n\tpage_summary VARCHAR, -- A brief summary of the page content, generated by LLM, focusing on key information and describing the page content.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (page_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table images: This table stores the information about images in each paper. The images are extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS images (\n\timage_id UUID, -- The unique identifier of the image.\n\timage_caption VARCHAR, -- The caption of this image, \"\" if it doesn't have one.\n\timage_summary VARCHAR, -- A brief summary of the image, generated by LLM, focusing on key information and describing the image.\n\tbounding_box INTEGER[4], -- The bounding box of the figure in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height which are used to determine the shape of the rectangle.\n\tordinal INTEGER, -- Each figure is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (image_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table chunks: This table contains the information of each chunk of text (chunk size = 512 tokens with no overlapping) in each page of the paper. A chunk is a sub-text that is extracted from the main text using langchain, such as a sentence or a paragraph.\n*/\nCREATE TABLE IF NOT EXISTS chunks (\n\tchunk_id UUID, -- A unique identifier for each chunk of text.\n\ttext_content VARCHAR, -- The text content of the current chunk.\n\tordinal INTEGER, -- Each chunk is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (chunk_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table tables: This table stores information about tables extracted from pages using MinerU, including content (in html format), bounding box and summary of each table generated by LLM.\n*/\nCREATE TABLE IF NOT EXISTS tables (\n\ttable_id UUID, -- A unique identifier for each table.\n\ttable_caption VARCHAR, -- Caption of the table, showing key information of the table.\n\ttable_content VARCHAR, -- The content of the table in html format.\n\ttable_summary VARCHAR, -- A brief summary of the table content generated by LLM, focusing on key information and describing the table content.\n\tbounding_box INTEGER[4], -- The bounding box of the table in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height.\n\tordinal INTEGER, -- Each table is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this table is located.,\n\tPRIMARY KEY (table_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table sections: This table contains the text content of each section in the paper, e.g. `Introduction`, `Experiment`, `Conclusion`, `Reference`. The sections are extracted using PyMuPDF or MinerU.\n*/\nCREATE TABLE IF NOT EXISTS sections (\n\tsection_id UUID, -- A unique identifier for each section of text.\n\tsection_title VARCHAR, -- The title of the current section.\n\tsection_content VARCHAR, -- The text content of the current section.\n\tsection_summary VARCHAR, -- A brief summary of the section content generated by LLM, focusing on key information and describing the section content.\n\tordinal INTEGER, -- Each section is labeled with one distinct integer number in the paper, which starts from 0.\n\tpage_numbers INTEGER[], -- A list of page numbers where current section is located in the relevant paper.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (section_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table equations: This table stores information about equations extracted from pages using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS equations (\n\tequation_id UUID, -- A unique identifier for each equation.\n\tequation_content VARCHAR, -- Content of the equation in latex format.\n\tordinal INTEGER, -- Each equation is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the paper ID in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the page ID in the `pages` table where this equation is located.,\n\tPRIMARY KEY (equation_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table reference: This table stores information about references extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS reference (\n\treference_id UUID, -- A unique identifier for each reference.\n\treference_content VARCHAR, -- Content of the reference.\n\tordinal INTEGER, -- Each reference is labeled with one distinct integer number according to its order in the paper, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this reference is located.,\n\tPRIMARY KEY (reference_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n[Vectorstore Schema]: The vectorstore schema for ai_research is as follows. You can try collections with different encoding models or modalities:\n[\n    {\n        \"collection_name\": \"text_bm25_en\",\n        \"modality\": \"text\",\n        \"embed_type\": \"bm25\",\n        \"embed_model\": \"en\",\n        \"description\": \"This collection is used to store the sparse embeddings generated by the BM25 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric inner-product (IP).\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"dtype\": \"INT64\",\n                \"is_primary\": true,\n                \"description\": \"The unique id for each encoded text vector in this collection.\"\n            },\n            {\n                \"name\": \"vector\",\n                \"dtype\": \"SPARSE_FLOAT_VECTOR\",\n                \"description\": \"The encoded sparse vector of the text content generated by the BM25 model. Note that, the raw text content can be uniquely identified by the triplet fields below: `table_name`, `column_name`, `primary_key`.\"\n            },\n            {\n                \"name\": \"pdf_id\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The unique id of the PDF file stored in the relational database that the encoded text belongs to. This field can be used to quickly filter the search space.\"\n            },\n            {\n                \"name\": \"page_number\",\n                \"dtype\": \"INT16\",\n                \"description\": \"The page number in the PDF file that the encoded text belongs to (starting from 1). This field can be used to quickly filter the search space. Value -1 means unknown.\"\n            },\n            {\n                \"name\": \"table_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which table in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"column_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which column under `table_name` in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"primary_key\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The primary key value of `table_name` (or which row) in the relational database that the text content belongs to. Note that, the triplet (`table_name`, `column_name`, `primary_key`) can be used to construct a one-to-one mapping between the `text` field in the current vectorstore and the cell entry in the relational database.\"\n            }\n        ]\n    },\n    {\n        \"collection_name\": \"text_sentence_transformers_all_minilm_l6_v2\",\n        \"modality\": \"text\",\n        \"embed_type\": \"sentence_transformers\",\n        \"embed_model\": \"all-MiniLM-L6-v2\",\n        \"description\": \"This collection is used to store the embeddings generated by the all-MiniLM-L6-v2 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric COSINE.\",\n        \"fields\": \"The fields of this collection are similar to the `text_bm25_en` collection.\"\n    }\n]\n\nThe following lists all encodable (table_name, column_name, encode_modality) information from the corresponding DuckDB database, where the encoded vector entries are sourced. Note that, for text modality, we directly encode cell values from the `table_name.column_name`; for image modality, we encode the cropped images for `page_number` in `pdf_id` with bounding boxes from `table_name.column_name`. You can leverage them for filter condition during similarity search:\n[\n    [\n        \"metadata\",\n        \"title\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"abstract\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"bibtex\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"tldr\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_content\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_summary\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_caption\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_summary\",\n        \"text\"\n    ],\n    [\n        \"chunks\",\n        \"text_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_caption\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_summary\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_title\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_content\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_summary\",\n        \"text\"\n    ],\n    [\n        \"equations\",\n        \"equation_content\",\n        \"text\"\n    ],\n    [\n        \"reference\",\n        \"reference_content\",\n        \"text\"\n    ]\n]\n\nHere are the operators that you can use in the filtering condition for the vectorstore:\n{\n    \"operators\": {\n        \"logical\": [\n            {\n                \"symbol\": \"not\",\n                \"example\": \"not expr\",\n                \"description\": \"True if expr is false.\"\n            },\n            {\n                \"symbol\": \"and\",\n                \"example\": \"expr1 and expr2\",\n                \"description\": \"True if both expr1 and expr2 are true.\"\n            },\n            {\n                \"symbol\": \"or\",\n                \"example\": \"expr1 or expr2\",\n                \"description\": \"True if either expr1 or expr2 are true.\"\n            }\n        ],\n        \"binary arithmetic\": [\n            {\n                \"symbol\": \"+\",\n                \"example\": \"a + b\",\n                \"description\": \"Add the two operands.\"\n            },\n            {\n                \"symbol\": \"-\",\n                \"example\": \"a - b\",\n                \"description\": \"Subtract the second operand from the first operand.\"\n            },\n            {\n                \"symbol\": \"*\",\n                \"example\": \"a * b\",\n                \"description\": \"Multiply the two operands.\"\n            },\n            {\n                \"symbol\": \"/\",\n                \"example\": \"a / b\",\n                \"description\": \"Divide the first operand by the second operand.\"\n            },\n            {\n                \"symbol\": \"**\",\n                \"example\": \"a ** b\",\n                \"description\": \"Raise the first operand to the power of the second operand.\"\n            },\n            {\n                \"symbol\": \"%\",\n                \"example\": \"a % b\",\n                \"description\": \"Divide the first operand by the second operand and yield the remainder portion.\"\n            }\n        ],\n        \"relational\": [\n            {\n                \"symbol\": \"<\",\n                \"example\": \"a < b\",\n                \"description\": \"True if a is less than b.\"\n            },\n            {\n                \"symbol\": \">\",\n                \"example\": \"a > b\",\n                \"description\": \"True if a is greater than b.\"\n            },\n            {\n                \"symbol\": \"==\",\n                \"example\": \"a == b\",\n                \"description\": \"True if a is equal to b. Please use **two** equal signs for equality comparison.\"\n            },\n            {\n                \"symbol\": \"!=\",\n                \"example\": \"a != b\",\n                \"description\": \"True if a is not equal to b.\"\n            },\n            {\n                \"symbol\": \"<=\",\n                \"example\": \"a <= b\",\n                \"description\": \"True if a is less than or equal to b.\"\n            },\n            {\n                \"symbol\": \">=\",\n                \"example\": \"a >= b\",\n                \"description\": \"True if a is greater than or equal to b.\"\n            },\n            {\n                \"symbol\": \"in\",\n                \"example\": \"a in [b, c, ...]\",\n                \"description\": \"True if a is equal to any of the values in the list.\"\n            }\n        ],\n        \"array operations\": [\n            {\n                \"symbol\": \"[]\",\n                \"example\": \"bbox[0]\",\n                \"description\": \"This expression gets the first element in array bbox. For example, 'bbox[0] < 50' evaluates to true if the value of bbox[0] is less than 50.\"\n            },\n            {\n                \"symbol\": \"array_contains\",\n                \"example\": \"array_contains(bbox, 100)\",\n                \"description\": \"This expression evaluates to true if array bbox contains element 100.\"\n            },\n            {\n                \"symbol\": \"array_length\",\n                \"example\": \"array_length(int_array) == 4\",\n                \"description\": \"This expression evaluates to true if int_array contains exactly 4 elements.\"\n            }\n        ]\n    },\n    \"use cases\": [\n        {\n            \"example\": \"table_name == 'chunks' and column_name == 'text_content'\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and column_name equal to 'text_content'.\"\n        },\n        {\n            \"example\": \"table_name == 'chunks' and primary_key in ['123', '456', '789']\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and primary_key equal to any of the values in the list ['123', '456', '789'].\"\n        },\n        {\n            \"example\": \"bbox[0] + bbox[2] <= 100 and bbox[1] + bbox[3] <= 300 and pdf_id == '123456' and page_number == 1\",\n            \"description\": \"For image modality, filter results to include only image regions that are entirely within the upper-left quadrant of page 1 in the PDF with ID '123456', assuming the page dimensions are 200 (width) x 600 (height).\"\n        }\n    ]\n}"}
{"role": "assistant", "content": "[Thought]: To answer the question, I need to find the paper that proposed knowledge card and then retrieve the training hyperparameters of the model used in the experiment. I will start by finding the paper in the metadata table that was published in ICLR 2024 and has the term \"knowledge card\" in the title or abstract.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT paper_id, title, abstract FROM metadata WHERE conference_abbreviation = 'ICLR' AND pub_year = 2024 AND (title LIKE '%knowledge card%' OR abstract LIKE '%knowledge card%');\")"}
{"role": "user", "content": "[Observation]:\n{\"paper_id\":\"3f2204a4-b105-5e6e-96be-f86c6d94e519\",\"title\":\"Knowledge Card: Filling LLMs' Knowledge Gaps with Plug-in Specialized Language Models\",\"abstract\":\"By design, large language models (LLMs) are static general-purpose models, expensive to retrain or update frequently. As they are increasingly adopted for knowledge-intensive tasks, it becomes evident that these design choices lead to failures to generate factual, relevant, and up-to-date knowledge. To this end, we propose Knowledge Card, a modular framework to plug in new factual and relevant knowledge into general-purpose LLMs. We first introduce knowledge cards---specialized language models trained on corpora from specific domains and sources. Knowledge cards serve as parametric repositories that are selected at inference time to generate background knowledge for the base LLM. We then propose three content selectors to dynamically select and retain information in documents generated by knowledge cards, specifically controlling for relevance, brevity, and factuality of outputs. Finally, we propose two complementary integration approaches to augment the base LLM with the (relevant, factual) knowledge curated from the specialized LMs. Through extensive experiments, we demonstrate that Knowledge Card achieves state-of-the-art performance on six benchmark datasets. Ultimately, Knowledge Card framework enables dynamic synthesis and updates of knowledge from diverse domains. Its modularity will ensure that relevant knowledge can be continuously updated through the collective efforts of the research community.\"}\n\nIn total, 1 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: I have found the paper that proposed the Knowledge Card. Next, I need to find the section or chunk that discusses the training hyperparameters of the model used in the experiment. I will use the paper_id to retrieve the relevant sections or chunks.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_title, section_content FROM sections WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND (section_title LIKE '%Experiment%' OR section_title LIKE '%Training%');\")"}
{"role": "user", "content": "[Observation]:\n{\"section_title\":\"Experiment Settings\",\"section_content\":\"EXPERIMENT SETTINGS\\nImplementation\\nFor knowledge cards, we use OPT-1.3B (Zhang et al., 2022) as the starting point\\nand separately train 25 specialized LMs on a wide range of knowledge sources and domains, including\\ncorpora in the Pile (Gao et al., 2020), branch-train-merge (Li et al., 2022), knowledge graphs (Speer\\net al., 2017; West et al., 2022; Vrande\\u02c7\\nci\\u00b4\\nc & Kr\\u00a8\\notzsch, 2014; Pellissier Tanon et al., 2020; Feng et al.,\\n2021; Zhang et al., 2021), news and social media (Liu et al., 2022c; Feng et al., 2023b), and more.\\n(Appendix E) We use MPNet (Song et al., 2020) as the encoder in the relevance selector, Pegasus\\n(Zhang et al., 2020) as the summarization model in the pruning selector, the WikiSearch API as the\\nretrieval system in the factuality selector, and FactKB (Feng et al., 2023a) and VitaminC (Schuster\\net al., 2021) as the summarization and fact-checking factuality scoring functions. We use Codex\\n(CODE-DAVINCI-002) (Chen et al., 2021) as the default, general-purpose, black-box LLM.\\n5\\nPublished as a conference paper at ICLR 2024\\nType\\nModel\\nHuman.\\nSocial\\nSTEM\\nOther\\nAll\\nVanilla LM\\nCODEX\\n74.2\\n76.9\\n57.8\\n70.1\\n68.3\\nPALM\\n77.0\\n81.0\\n55.6\\n69.6\\n69.3\\nFLAN-PALM\\n-\\n-\\n-\\n-\\n72.2\\nRetrieval\\nATLAS\\n46.1\\n54.6\\n38.8\\n52.8\\n47.9\\nREPLUG\\n76.0\\n79.7\\n58.8\\n72.1\\n71.4\\nREPLUG LSR\\n76.5\\n79.9\\n58.9\\n73.2\\n71.8\\nGenerate\\nGKP\\n73.3\\n74.5\\n59.5\\n71.4\\n70.0\\nRECITATION\\n76.9\\n78.1\\n59.0\\n74.0\\n71.9\\nKNOWLEDGE CARD\\nBOTTOM-UP\\n77.2\\n76.7\\n57.9\\n72.2\\n70.7\\nTOP-DOWN AUTO\\n77.7\\n78.9\\n59.2\\n73.0\\n72.0\\nTOP-DOWN EXP\\n78.6\\n80.9\\n59.6\\n74.3\\n72.8\\nTable 1: Model performance on the MMLU Bench-\\nmark. KNOWLEDGE CARD improves Codex by at\\nleast 3.5% while top-down outperforms all baselines.\\nType\\nModel\\nTwo-Way\\nFour-Way\\nBAcc\\nMaF\\nBAcc\\nMaF\\nVanilla LM\\nCODEX\\n65.6\\n51.0\\n52.8\\n44.0\\nRetrieval\\nREPLUG\\n78.8\\n67.8\\n55.8\\n53.0\\nREPLUG LSR\\n78.8\\n68.5\\n57.5\\n54.4\\nGenerate\\nGKP\\n73.5\\n60.3\\n61.1\\n46.3\\nRECITATION\\n65.0\\n47.7\\n64.2\\n48.6\\nGRTR\\n66.1\\n49.1\\n51.6\\n36.9\\nKNOWLEDGE CARD\\nBOTTOM-UP\\n89.8\\n87.3\\n70.6\\n67.3\\nTOP-DOWN AUTO\\n86.4\\n78.7\\n63.0\\n60.2\\nTOP-DOWN EXP\\n91.3\\n86.0\\n69.4\\n65.5\\nTable 2: Performance on misinformation de-\\ntection. BAcc and MaF are balanced accu-\\nracy and macro F1. bottom-up performs best\\ndue to multi-domain knowledge integration.\\nType\\nModel\\nOpen-Book\\nMultiple-Choice\\nEM\\nF1\\n2-way\\n4-way\\nVanilla LM\\nCODEX\\n55.1\\n57.9\\n90.9\\n60.8\\nRetrieval\\nREPLUG\\n44.8\\n-\\n85.7\\n62.8\\nREPLUG LSR\\n37.2\\n-\\n86.9\\n65.3\\nSI ET AL.\\n52.1\\n54.5\\n84.7\\n61.4\\nGenerate\\nGKP\\n45.0\\n46.9\\n89.1\\n53.5\\nRECITATION\\n44.4\\n46.4\\n89.3\\n52.3\\nGRTR\\n55.6\\n58.4\\n77.4\\n59.0\\nKNOWLEDGE CARD\\nBOTTOM-UP\\n83.6\\n85.6\\n81.6\\n64.5\\nTOP-DOWN AUTO\\n87.5\\n89.3\\n89.5\\n63.0\\nTOP-DOWN EXP\\n75.3\\n75.7\\n91.9\\n67.6\\nTable 3: Performance on MidtermQA. KNOWL-\\nEDGE CARD successfully updates the knowledge\\nof Codex by adding a single knowledge card.\\nTasks and Datasets\\n1) For general-purpose\\nQA, we adopt MMLU (Hendrycks et al., 2020),\\na multiple-choice QA dataset covering 57 tasks\\nin humanities, STEM, social sciences, and oth-\\ners. Following previous works (Si et al., 2022;\\nShi et al., 2023), we adopt a 5-shot in-context\\nlearning setting. 2) To evaluate multi-domain\\nknowledge synthesis, we adopt misinformation\\ndetection, since news articles often encompass\\nfacts and opinions at the intersection of differ-\\nent domains and perspectives. We leverage the\\nwidely adopted LUN misinformation detection\\ndataset (Rashkin et al., 2017) with both 2-way\\nand 4-way classification settings. All models are evaluated based on 16-shot in-context learning. 3)\\nTo evaluate temporal knowledge update, we curate MIDTERMQA, a QA benchmark focusing on the\\n2022 U.S. midterm elections since the knowledge cutoff of black-box LLMs is often 2021 or earlier.\\nMIDTERMQA presents three evaluation datasets and settings: open-book, 2-way, and 4-way multiple\\nchoice. 5-shot in-context learning is adopted to evaluate KNOWLEDGE CARD and baselines. We did\\nnot consider existing temporal QA datasets (Jang et al., 2021; Dhingra et al., 2022; Kasai et al., 2022)\\nsince they do not focus on any specific event or knowledge domain.\\nBaselines\\nWe compare KNOWLEDGE CARD with a wide range of baseline methods in three\\ncategories. 1) vanilla black-box LLMs: Codex (Chen et al., 2021), PaLM (Chowdhery et al., 2022),\\nand Flan-PaLM (Chung et al., 2022); 2) generated knowledge prompting approaches: GKP (Liu et al.,\\n2022a), recitation (Sun et al., 2022), GRTR (Yu et al., 2022) (Note that we apply these methods to\\nthe same LLM Codex (Chen et al., 2021) for a fair comparison); 3) retrieval-augmented language\\nmodels: Atlas (Izacard et al., 2022), Si et al. (2022), RePlug, and RePlug LSR (Shi et al., 2023).\\n4\"}\n\n... # only display 1 rows in JSON format, more are truncated due to length constraint based on max_tokens (5000)"}
{"role": "assistant", "content": "[Thought]: The section content provides information about the experiment settings, including the model used and some of the hyperparameters. However, it does not explicitly list all the training hyperparameters. I will use the vectorstore to retrieve more detailed information about the training hyperparameters of the model used in the experiment.\n[Action]:\nClassicRetrieve(query='What are the training hyperparameters of the model used in the experiment of the paper that proposed knowledge card?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.6971,\"pdf_id\":\"0ffff880-79ff-5055-a81a-28512d4ace5f\",\"page_number\":22,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"56c7fa7b-f6f2-5bee-a1bb-a905b577b56e\",\"text\":\"Justification: Hyperparameters and training details are explicitly reported with the descrip-\\ntion of the models.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6942,\"pdf_id\":\"f45c531b-9b18-5b82-b193-d0fee3f2a492\",\"page_number\":21,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"fd3fcd68-b99f-5a63-af9c-b3adb0b8d406\",\"text\":\"Justification: We provide the general training information and evaluation settings in the\\nmain text. The full implementation details and training hyperparameters are presented in the\\nsupplementary materials.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\"}\n{\"score\":0.6938,\"pdf_id\":\"97643d4a-e5aa-5e21-a974-94fcb4f275db\",\"page_number\":26,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7e7d3cd5-91e8-5af1-b375-c19d124fd705\",\"text\":\"Justification: The hyperparameters for training are discussed in the main paper in \\u00a7 4 as well\\nas in the appendix.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6936,\"pdf_id\":\"eddc6820-df29-57ed-bfaf-4e822f418173\",\"page_number\":17,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"e672376f-2949-53f3-81f1-cdbca826d082\",\"text\":\"Justification: The paper discusses all the training details and hyperparameters.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6874,\"pdf_id\":\"228420b3-69b7-5d7a-82fd-0d3c3bfcef8e\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4df98263-61aa-527e-9bc6-2bd363cf42c3\",\"text\":\"14We present the details about hyperparameters used for training the proposed baseline models in Appendix B.\\n6\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved chunks indicate that the training hyperparameters are discussed in the appendix of the paper. I will retrieve the appendix content to find the specific hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_title, section_content FROM sections WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND section_title LIKE '%Appendix%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which suggests that the appendix might not be stored as a section. I will try to retrieve the content from the chunks table instead.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND text_content LIKE '%Appendix%';\")"}
{"role": "user", "content": "[Observation]:\n{\"text_content\":\"when external knowledge is not always necessary. In this way, the top-down approach enables LLMs\\nto take charge in identifying their inherent knowledge limitations and seeking help from external\\nknowledge cards proactively. We provide prompt examples in Tables 10 and 11 in the Appendix.\\n3\\nEXPERIMENT SETTINGS\\nImplementation\\nFor knowledge cards, we use OPT-1.3B (Zhang et al., 2022) as the starting point\\nand separately train 25 specialized LMs on a wide range of knowledge sources and domains, including\"}\n{\"text_content\":\"corpora in the Pile (Gao et al., 2020), branch-train-merge (Li et al., 2022), knowledge graphs (Speer\\net al., 2017; West et al., 2022; Vrande\\u02c7\\nci\\u00b4\\nc & Kr\\u00a8\\notzsch, 2014; Pellissier Tanon et al., 2020; Feng et al.,\\n2021; Zhang et al., 2021), news and social media (Liu et al., 2022c; Feng et al., 2023b), and more.\\n(Appendix E) We use MPNet (Song et al., 2020) as the encoder in the relevance selector, Pegasus\\n(Zhang et al., 2020) as the summarization model in the pruning selector, the WikiSearch API as the\"}\n{\"text_content\":\"strates that KNOWLEDGE CARD outperforms REPLUG on both settings of misinformation detection,\\nsuggesting that knowledge cards present a better knowledge repository. Note that KNOWLEDGE\\nCARD is also compatible with multiple knowledge formats (e.g. retrieval and search engine) while\\nthey could be complementary (Appendix A).\\nKnowledge Stream Analysis\\nIn bottom-up, three hyperparameters (\\u00a72.3) govern the \\u201cknowledge\\nstream\\u201d from knowledge cards to the general-purpose LLMs. Specifically, n1 controls how many\\n7\"}\n{\"text_content\":\"computational resources. In addition, Appendix A discussed KNOWLEDGE CARD\\u2019s compatibility\\nwith diverse knowledge sources, including retrieval, knowledge graphs, and search engines, while\\nthese knowledge repositories have their respective pros and cons. We leave it to future work on\\nintegrating multiple types of external knowledge stores to extend KNOWLEDGE CARD.\\nThe factuality selector is biased towards information-rich domains and existing knowledge.\"}\n{\"text_content\":\"corpora and receive low factuality scores. We quantitatively evaluate this bias in Appendix D.\\nAlthough top-k factuality sampling enables flexibility to some extent, it remains an important problem\\nto design factuality evaluation measures that are generalizable and adaptable to varying and emerging\\ndomains.\\nPrompting LLMs to seek help through yes\\/no questions is not perfect.\\nInspired by the findings\\nthat LLMs do not need external knowledge for every query (Zhao et al., 2023) and language models\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved chunks indicate that the appendix is mentioned, but the specific hyperparameters are not listed. I will perform a more detailed search in the chunks table to find the specific training hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND text_content LIKE '%hyperparameters%';\")"}
{"role": "user", "content": "[Observation]:\n{\"text_content\":\"hyperparameters n1, n2, and n3 enable fine-grained control over the knowledge synthesis process.\\nTop-Down Approach\\nIn bottom-up, we assume that every query would benefit from external\\nknowledge generated by knowledge cards. However, this could introduce unnecessary information in\\nthe LLM\\u2019s prompt context (Zhao et al., 2023). Following Kadavath et al. (2022), who showed that\\nLLMs possess preliminary abilities to identify their inherent knowledge limitations, we propose the\"}\n{\"text_content\":\"strates that KNOWLEDGE CARD outperforms REPLUG on both settings of misinformation detection,\\nsuggesting that knowledge cards present a better knowledge repository. Note that KNOWLEDGE\\nCARD is also compatible with multiple knowledge formats (e.g. retrieval and search engine) while\\nthey could be complementary (Appendix A).\\nKnowledge Stream Analysis\\nIn bottom-up, three hyperparameters (\\u00a72.3) govern the \\u201cknowledge\\nstream\\u201d from knowledge cards to the general-purpose LLMs. Specifically, n1 controls how many\\n7\"}\n{\"text_content\":\"Published as a conference paper at ICLR 2024\\n1\\n2\\n3\\n4\\n5\\nn1 (n2 = 5, n3 = 3)\\n0.85\\n0.90\\n3\\n5\\n8\\n10\\n12\\nn2 (n1 = 3, n3 = 3)\\n0.85\\n0.90\\n1\\n2\\n3\\n4\\n5\\nn3 (n1 = 3, n2 = 5)\\n0.85\\n0.90\\nACC\\nMacro F1\\nFigure 4: Investigating the impact of n1, n2, and n3, which\\ngovern the knowledge stream from modular knowledge cards\\nto general-purpose LLMs. These hyperparameters enable fine-\\ngrained control over the knowledge synthesis process.\\ndavinci\\nw\\/ bottom-up w\\/ autocard\\nw\\/ expcard\\n70\\n75\\n80\\n85\\n+10.0\\n+12.0\\n+9.6\\nturbo\"}\n\nIn total, 3 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved chunks mention hyperparameters but do not provide the specific training hyperparameters for the model used in the experiment. I will perform a more detailed search in the chunks table to find the specific training hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND text_content LIKE '%training hyperparameters%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which suggests that the specific training hyperparameters might be mentioned in a different context. I will perform a more general search in the chunks table to find the specific training hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND text_content LIKE '%training%';\")"}
{"role": "user", "content": "[Observation]:\n{\"text_content\":\"fewer parameters than the general-purpose LLM. Our findings demonstrate the potential of filling in\\nthe knowledge gaps of general-purpose LLMs by integrating modular and collaborative knowledge\\nfrom small, independently trained, and specialized LMs. We envision KNOWLEDGE CARD as an\\ninitiative to encourage LM developers to collaborate in expanding the knowledge of large language\\nmodels while reducing the carbon footprint from retraining gigantic LMs from scratch.\\n2\\nMETHODOLOGY\"}\n{\"text_content\":\"LMs acquire knowledge through training on gargantuan textual\\ncorpora (Petroni et al., 2019; Dhingra et al., 2022; He et al., 2021). Generated knowledge prompting\\n(Liu et al., 2022a) is one of the early approaches to tap into the parametric knowledge of LLMs by\\nprompting them to generate background information and re-using it for QA. Related works also\\npropose to use LM parametric knowledge for retrieval (Tay et al., 2022), answer commonsense\"}\n{\"text_content\":\"2023), model fusion (Don-Yehiya et al., 2022; Borzunov et al., 2022), continual learning (Jang et al.,\\n2021; Qin et al., 2022; Ke et al., 2022; Qin et al., 2023), and other collaborative approaches (K\\u00a8\\nopf\\net al., 2023; Sha, 2023; Luo et al., 2023) have also shed light on the possibility of distributed LM\\ntraining. However, existing modular LMs mostly operate in the white-box setting, i.e. assuming\\naccess to the model parameters, token probabilities, and more. Since the most prominent LLMs\"}\n{\"text_content\":\"notwithstanding any copyright annotation therein.\\nREFERENCES\\nSharegpt. https:\\/\\/sharegpt.com\\/, 2023. Accessed: 2023-09-27.\\nOshin Agarwal, Heming Ge, Siamak Shakeri, and Rami Al-Rfou. Knowledge graph based synthetic\\ncorpus generation for knowledge-enhanced language model pre-training. In Proceedings of the\\n2021 Conference of the North American Chapter of the Association for Computational Linguistics:\\nHuman Language Technologies, pp. 3554\\u20133565, 2021.\"}\n{\"text_content\":\"Robinson. One billion word benchmark for measuring progress in statistical language modeling.\\narXiv preprint arXiv:1312.3005, 2013.\\nMark Chen, Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Ponde de Oliveira Pinto, Jared\\nKaplan, Harri Edwards, Yuri Burda, Nicholas Joseph, Greg Brockman, et al. Evaluating large\\nlanguage models trained on code. arXiv preprint arXiv:2107.03374, 2021.\\nWenhu Chen, Yu Su, Xifeng Yan, and William Yang Wang. Kgpt: Knowledge-grounded pre-training\"}\n{\"text_content\":\"Shangbin Feng, Chan Young Park, Yuhan Liu, and Yulia Tsvetkov. From pretraining data to language\\nmodels to downstream tasks: Tracking the trails of political biases leading to unfair NLP models. In\\nProceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume\\n1: Long Papers), pp. 11737\\u201311762, July 2023b.\\nShangbin Feng, Zhaoxuan Tan, Wenqian Zhang, Zhenyu Lei, and Yulia Tsvetkov. KALM: Knowledge-\"}\n{\"text_content\":\"arXiv:2303.14177, 2023.\\nKelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, and Mingwei Chang. Retrieval augmented\\nlanguage model pre-training. In International conference on machine learning, pp. 3929\\u20133938.\\nPMLR, 2020.\\nPeter Hase, Mona Diab, Asli Celikyilmaz, Xian Li, Zornitsa Kozareva, Veselin Stoyanov, Mohit\\nBansal, and Srinivasan Iyer. Do language models have beliefs? methods for detecting, updating,\\nand visualizing model beliefs. arXiv preprint arXiv:2111.13654, 2021.\\n11\"}\n{\"text_content\":\"Published as a conference paper at ICLR 2024\\nZixuan Ke, Yijia Shao, Haowei Lin, Tatsuya Konishi, Gyuhak Kim, and Bing Liu. Continual\\npre-training of language models. In The Eleventh International Conference on Learning Represen-\\ntations, 2022.\\nUrvashi Khandelwal, Omer Levy, Dan Jurafsky, Luke Zettlemoyer, and Mike Lewis. Generalization\\nthrough memorization: Nearest neighbor language models. In International Conference on\\nLearning Representations, 2019.\"}\n{\"text_content\":\"Luong, and Orhan Firat. Beyond distillation: Task-level mixture-of-experts for efficient inference.\\nIn Findings of the Association for Computational Linguistics: EMNLP 2021, pp. 3577\\u20133599, 2021.\\nMike Lewis, Shruti Bhosale, Tim Dettmers, Naman Goyal, and Luke Zettlemoyer. Base layers:\\nSimplifying training of large, sparse models. In International Conference on Machine Learning,\\npp. 6265\\u20136274. PMLR, 2021.\\nPatrick Lewis, Ethan Perez, Aleksandra Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal,\"}\n{\"text_content\":\"Heinrich K\\u00a8\\nuttler, Mike Lewis, Wen-tau Yih, Tim Rockt\\u00a8\\naschel, et al. Retrieval-augmented genera-\\ntion for knowledge-intensive nlp tasks. Advances in Neural Information Processing Systems, 33:\\n9459\\u20139474, 2020.\\nMargaret Li, Suchin Gururangan, Tim Dettmers, Mike Lewis, Tim Althoff, Noah A Smith, and Luke\\nZettlemoyer. Branch-train-merge: Embarrassingly parallel training of expert language models. In\\nFirst Workshop on Interpolation Regularizers and Beyond at NeurIPS 2022, 2022.\"}\n\n... # only display 10 rows in JSON format, more are truncated due to length constraint based on max_rows (10)"}
{"role": "assistant", "content": "[Thought]: The retrieved chunks do not provide the specific training hyperparameters for the model used in the experiment. I will perform a similarity search in the vectorstore to find the relevant context.\n[Action]:\nClassicRetrieve(query='What are the training hyperparameters of the model used in the experiment of the paper that proposed knowledge card?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.6971,\"pdf_id\":\"0ffff880-79ff-5055-a81a-28512d4ace5f\",\"page_number\":22,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"56c7fa7b-f6f2-5bee-a1bb-a905b577b56e\",\"text\":\"Justification: Hyperparameters and training details are explicitly reported with the descrip-\\ntion of the models.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6942,\"pdf_id\":\"f45c531b-9b18-5b82-b193-d0fee3f2a492\",\"page_number\":21,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"fd3fcd68-b99f-5a63-af9c-b3adb0b8d406\",\"text\":\"Justification: We provide the general training information and evaluation settings in the\\nmain text. The full implementation details and training hyperparameters are presented in the\\nsupplementary materials.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\"}\n{\"score\":0.6938,\"pdf_id\":\"97643d4a-e5aa-5e21-a974-94fcb4f275db\",\"page_number\":26,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7e7d3cd5-91e8-5af1-b375-c19d124fd705\",\"text\":\"Justification: The hyperparameters for training are discussed in the main paper in \\u00a7 4 as well\\nas in the appendix.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6936,\"pdf_id\":\"eddc6820-df29-57ed-bfaf-4e822f418173\",\"page_number\":17,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"e672376f-2949-53f3-81f1-cdbca826d082\",\"text\":\"Justification: The paper discusses all the training details and hyperparameters.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6874,\"pdf_id\":\"228420b3-69b7-5d7a-82fd-0d3c3bfcef8e\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4df98263-61aa-527e-9bc6-2bd363cf42c3\",\"text\":\"14We present the details about hyperparameters used for training the proposed baseline models in Appendix B.\\n6\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context from the vectorstore indicates that the training hyperparameters are discussed in the appendix of the paper. I will retrieve the specific content from the appendix to find the hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND page_number IN (SELECT page_number FROM chunks WHERE text_content LIKE '%Appendix%');\")"}
{"role": "user", "content": "[Observation]:\n[Error]: Runtime error during SQL execution and output formatting: Binder Error: Referenced column \"page_number\" not found in FROM clause!\nCandidate bindings: \"chunks.ref_page_id\", \"chunks.ref_paper_id\", \"chunks.text_content\""}
{"role": "assistant", "content": "[Thought]: The SQL query failed because the `page_number` column is not included in the `chunks` table. I will modify the query to join the `pages` table to get the page number and then filter the results.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT c.text_content FROM chunks c JOIN pages p ON c.ref_page_id = p.page_id WHERE c.ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND p.page_number IN (SELECT page_number FROM pages WHERE page_content LIKE '%Appendix%');\")"}
{"role": "user", "content": "[Observation]:\n{\"text_content\":\"Published as a conference paper at ICLR 2024\\nKNOWLEDGE CARD: FILLING LLMS\\u2019 KNOWLEDGE GAPS\\nWITH PLUG-IN SPECIALIZED LANGUAGE MODELS\\nShangbin Feng1\\nWeijia Shi1\\nYuyang Bai2\\nVidhisha Balachandran3\\nTianxing He1\\nYulia Tsvetkov1\\n1University of Washington\\n2Xi\\u2019an Jiaotong University\\n3Carnegie Mellon University\\nshangbin@cs.washington.edu\\nABSTRACT\\nBy design, large language models (LLMs) are static general-purpose models,\\nexpensive to retrain or update frequently. As they are increasingly adopted for\"}\n{\"text_content\":\"knowledge-intensive tasks, it becomes evident that these design choices lead to\\nfailures to generate factual, relevant, and up-to-date knowledge. To this end, we\\npropose KNOWLEDGE CARD, a modular framework to plug in new factual and\\nrelevant knowledge into general-purpose LLMs. We first introduce knowledge\\ncards\\u2014specialized language models trained on corpora from specific domains\\nand sources. Knowledge cards serve as parametric repositories that are selected\"}\n{\"text_content\":\"at inference time to generate background knowledge for the base LLM. We then\\npropose three content selectors to dynamically select and retain information in\\ndocuments generated by knowledge cards, specifically controlling for relevance,\\nbrevity, and factuality of outputs. Finally, we propose two complementary integra-\\ntion approaches to augment the base LLM with the (relevant, factual) knowledge\\ncurated from the specialized LMs. Through extensive experiments, we demonstrate\"}\n{\"text_content\":\"that KNOWLEDGE CARD achieves state-of-the-art performance on six benchmark\\ndatasets. Ultimately, KNOWLEDGE CARD framework enables dynamic synthesis\\nand updates of knowledge from diverse domains. Its modularity will ensure that\\nrelevant knowledge can be continuously updated through the collective efforts of\\nthe research community. 1\\n1\\nINTRODUCTION\\nLarge language models (LLMs) have demonstrated an impressive ability to encode world knowledge\"}\n{\"text_content\":\"in model parameters (Petroni et al., 2019; Roberts et al., 2020). However, they still face various\\nchallenges in knowledge-intensive tasks and contexts: they suffer from hallucination (Kry\\u00b4\\nsci\\u00b4\\nnski et al.,\\n2020; Pagnoni et al., 2021; Ji et al., 2023), struggle to encode long-tail facts (Kandpal et al., 2023;\\nMallen et al., 2023), and could not be easily updated with new and emerging knowledge (De Cao\\net al., 2021; Hase et al., 2021). Existing works propose addressing these limitations through retrieval\"}\n{\"text_content\":\"augmentation or generated knowledge prompting. Retrieval-augmented LMs (Guu et al., 2020;\\nBorgeaud et al., 2022; Shi et al., 2023) employ retrieval systems to fetch relevant documents from a\\ngeneral and fixed retrieval corpus (e.g., Wikipedia or the Pile (Gao et al., 2020)), leveraging external\\nknowledge from non-parametric sources to aid LLM generation. Generated knowledge prompting\\napproaches (Shin et al., 2020; Liu et al., 2022a; Sun et al., 2022) prompt LLMs to incorporate and\"}\n{\"text_content\":\"generate contextual documents to encourage knowledge-aware generation.\\nWhile the two lines of work have achieved some success, these existing systems struggle to reflect\\ntwo key properties of knowledge. Knowledge is modular (Stuckenschmidt et al., 2009): it is an\\n\\u201carchipelago\\u201d rather than a single \\u201ccontinent\\u201d, encapsulating information that exists in diversified\\nforms, domains, sources, perspectives, and more. The lack of knowledge modularity has made gener-\"}\n{\"text_content\":\"alization to new domains and targeted updates of knowledge stored in LMs difficult. Knowledge is\\ncollaborative (Cayzer, 2004): LLMs should be able to represent and incorporate diverse and evolving\\nknowledge, from multi-faceted sources and perspectives, while enabling collaborative contribution\\nfrom various stakeholders. Community-driven knowledge could aggregate new knowledge from\\ndomain experts and enable the development of specialized LLMs, tailored to specific industries or\"}\n{\"text_content\":\"applications. That being said, existing approaches and systems did not employ modular or collab-\\norative knowledge sources that enable the plug-and-play updates and contributions from various\\nstakeholders. While approaches such as retrieval augmentation could be extended for modularity,\\n1Resources are available at https:\\/\\/github.com\\/BunsenFeng\\/Knowledge Card.\\n1\"}\n{\"text_content\":\"Published as a conference paper at ICLR 2024\\nthey are hardly compatible with the current landscape of model sharing (Wolf et al., 2019) and do not\\nfacilitate community-driven efforts to fill in LLMs\\u2019 knowledge gaps.\\nTo this end, we propose KNOWLEDGE CARD, a novel framework to empower general-purpose\\nLLMs with modular and collaboratively-sourced knowledge through the integration of smaller, but\\nspecialized language models. As an increasing amount of powerful LLMs are released behind API\"}\n\n... # only display 10 rows in JSON format, more are truncated due to length constraint based on max_rows (10)"}
{"role": "assistant", "content": "[Thought]: The retrieved content from the appendix does not provide the specific training hyperparameters. I will perform another similarity search in the vectorstore, focusing on the appendix to find the hyperparameters.\n[Action]:\nClassicRetrieve(query='What are the training hyperparameters of the model used in the experiment of the paper that proposed knowledge card in the appendix?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.7389,\"pdf_id\":\"d8aae47b-1db0-5149-960e-4cd2990c89f9\",\"page_number\":23,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7cd51019-d5af-5f8b-9595-3822306f3429\",\"text\":\"Justification: We include all the training details for the models in Appendix A.13. We also\\nprovide the pseudo-code for the proposed technique in Appendix A.2 along with all the\\nhyper parameter details (see Appendix A.13). Further, we also provide the code in the\\nsupplementary material.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 If the paper includes experiments, a No answer to this question will not be perceived\"}\n{\"score\":0.7235,\"pdf_id\":\"228420b3-69b7-5d7a-82fd-0d3c3bfcef8e\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4df98263-61aa-527e-9bc6-2bd363cf42c3\",\"text\":\"14We present the details about hyperparameters used for training the proposed baseline models in Appendix B.\\n6\"}\n{\"score\":0.6948,\"pdf_id\":\"0ffff880-79ff-5055-a81a-28512d4ace5f\",\"page_number\":22,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"56c7fa7b-f6f2-5bee-a1bb-a905b577b56e\",\"text\":\"Justification: Hyperparameters and training details are explicitly reported with the descrip-\\ntion of the models.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6926,\"pdf_id\":\"45fc445c-fcd3-511d-9512-7485c1527745\",\"page_number\":27,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"b5b32da1-8f37-5c4c-a957-8c4afca703d6\",\"text\":\"Justification: We have a section titled Training Details in the appendix that covers precisely\\nthe hyperparameters, and type of optimizer and other crucial training details.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\"}\n{\"score\":0.6913,\"pdf_id\":\"f45c531b-9b18-5b82-b193-d0fee3f2a492\",\"page_number\":21,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"fd3fcd68-b99f-5a63-af9c-b3adb0b8d406\",\"text\":\"Justification: We provide the general training information and evaluation settings in the\\nmain text. The full implementation details and training hyperparameters are presented in the\\nsupplementary materials.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context from the vectorstore indicates that the training hyperparameters are detailed in Appendix B of the paper. I will retrieve the specific content from Appendix B to find the hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND text_content LIKE '%Appendix B%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which means there might not be a chunk with \"Appendix B\" in the text content. I will perform a broader search to find the content of Appendix B.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND page_number IN (SELECT page_number FROM pages WHERE page_content LIKE '%Appendix B%');\")"}
{"role": "user", "content": "[Observation]:\n[Error]: Runtime error during SQL execution and output formatting: Binder Error: Referenced column \"page_number\" not found in FROM clause!\nCandidate bindings: \"chunks.ref_page_id\", \"chunks.ref_paper_id\", \"chunks.text_content\""}
{"role": "assistant", "content": "[Thought]: The SQL query failed again because the `page_number` column is not included in the `chunks` table. I will modify the query to join the `pages` table to get the page number and then filter the results.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT c.text_content FROM chunks c JOIN pages p ON c.ref_page_id = p.page_id WHERE c.ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND p.page_content LIKE '%Appendix B%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query still did not return any results. I will try a different approach by performing a similarity search in the vectorstore, specifically targeting the content of Appendix B to find the hyperparameters.\n[Action]:\nClassicRetrieve(query='What are the training hyperparameters of the model used in the experiment of the paper that proposed knowledge card in Appendix B?', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.7328,\"pdf_id\":\"d8aae47b-1db0-5149-960e-4cd2990c89f9\",\"page_number\":23,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7cd51019-d5af-5f8b-9595-3822306f3429\",\"text\":\"Justification: We include all the training details for the models in Appendix A.13. We also\\nprovide the pseudo-code for the proposed technique in Appendix A.2 along with all the\\nhyper parameter details (see Appendix A.13). Further, we also provide the code in the\\nsupplementary material.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 If the paper includes experiments, a No answer to this question will not be perceived\"}\n{\"score\":0.7166,\"pdf_id\":\"228420b3-69b7-5d7a-82fd-0d3c3bfcef8e\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4df98263-61aa-527e-9bc6-2bd363cf42c3\",\"text\":\"14We present the details about hyperparameters used for training the proposed baseline models in Appendix B.\\n6\"}\n{\"score\":0.6945,\"pdf_id\":\"f45c531b-9b18-5b82-b193-d0fee3f2a492\",\"page_number\":21,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"fd3fcd68-b99f-5a63-af9c-b3adb0b8d406\",\"text\":\"Justification: We provide the general training information and evaluation settings in the\\nmain text. The full implementation details and training hyperparameters are presented in the\\nsupplementary materials.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\"}\n{\"score\":0.6917,\"pdf_id\":\"45fc445c-fcd3-511d-9512-7485c1527745\",\"page_number\":27,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"b5b32da1-8f37-5c4c-a957-8c4afca703d6\",\"text\":\"Justification: We have a section titled Training Details in the appendix that covers precisely\\nthe hyperparameters, and type of optimizer and other crucial training details.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\"}\n{\"score\":0.6901,\"pdf_id\":\"0ffff880-79ff-5055-a81a-28512d4ace5f\",\"page_number\":22,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"56c7fa7b-f6f2-5bee-a1bb-a905b577b56e\",\"text\":\"Justification: Hyperparameters and training details are explicitly reported with the descrip-\\ntion of the models.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context from the vectorstore indicates that the training hyperparameters are detailed in Appendix B. I will perform a more targeted similarity search to find the specific hyperparameters.\n[Action]:\nClassicRetrieve(query='What are the training hyperparameters of the model used in the experiment of the paper that proposed knowledge card in Appendix B?', limit=10)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.7328,\"pdf_id\":\"d8aae47b-1db0-5149-960e-4cd2990c89f9\",\"page_number\":23,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7cd51019-d5af-5f8b-9595-3822306f3429\",\"text\":\"Justification: We include all the training details for the models in Appendix A.13. We also\\nprovide the pseudo-code for the proposed technique in Appendix A.2 along with all the\\nhyper parameter details (see Appendix A.13). Further, we also provide the code in the\\nsupplementary material.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 If the paper includes experiments, a No answer to this question will not be perceived\"}\n{\"score\":0.7166,\"pdf_id\":\"228420b3-69b7-5d7a-82fd-0d3c3bfcef8e\",\"page_number\":6,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"4df98263-61aa-527e-9bc6-2bd363cf42c3\",\"text\":\"14We present the details about hyperparameters used for training the proposed baseline models in Appendix B.\\n6\"}\n{\"score\":0.6945,\"pdf_id\":\"f45c531b-9b18-5b82-b193-d0fee3f2a492\",\"page_number\":21,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"fd3fcd68-b99f-5a63-af9c-b3adb0b8d406\",\"text\":\"Justification: We provide the general training information and evaluation settings in the\\nmain text. The full implementation details and training hyperparameters are presented in the\\nsupplementary materials.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\"}\n{\"score\":0.6917,\"pdf_id\":\"45fc445c-fcd3-511d-9512-7485c1527745\",\"page_number\":27,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"b5b32da1-8f37-5c4c-a957-8c4afca703d6\",\"text\":\"Justification: We have a section titled Training Details in the appendix that covers precisely\\nthe hyperparameters, and type of optimizer and other crucial training details.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\"}\n{\"score\":0.6901,\"pdf_id\":\"0ffff880-79ff-5055-a81a-28512d4ace5f\",\"page_number\":22,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"56c7fa7b-f6f2-5bee-a1bb-a905b577b56e\",\"text\":\"Justification: Hyperparameters and training details are explicitly reported with the descrip-\\ntion of the models.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6891,\"pdf_id\":\"44e89743-0e82-526e-9c57-4c1c087f8d7d\",\"page_number\":41,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"1cda4d13-4dff-5f14-965c-09246a7aa85b\",\"text\":\"Justification: We describe the training details in Appendix D.1. Additionally, the data splits\\nand the optimal hyperparameter configuration for each of the experiments can be found in\\nthe provided code.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\"}\n{\"score\":0.6871,\"pdf_id\":\"fc52ab2e-c2d3-5a9f-b8e1-d5c7a80d40be\",\"page_number\":18,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"383dfe69-bd75-5788-8942-b65d3fd5640a\",\"text\":\"Justification: Training details are described in the Implementation Details (section 5.3) and\\nhyperparameters are provided in the Appendix.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\"}\n{\"score\":0.6845,\"pdf_id\":\"97643d4a-e5aa-5e21-a974-94fcb4f275db\",\"page_number\":26,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"7e7d3cd5-91e8-5af1-b375-c19d124fd705\",\"text\":\"Justification: The hyperparameters for training are discussed in the main paper in \\u00a7 4 as well\\nas in the appendix.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6831,\"pdf_id\":\"eddc6820-df29-57ed-bfaf-4e822f418173\",\"page_number\":17,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"e672376f-2949-53f3-81f1-cdbca826d082\",\"text\":\"Justification: The paper discusses all the training details and hyperparameters.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n{\"score\":0.6822,\"pdf_id\":\"5ae6f825-b808-5b54-b854-eff9c8443136\",\"page_number\":23,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"a97922b2-dc9e-59d4-9664-5cdd55964f2b\",\"text\":\"Justification: The training details and hyperparameters setting are listed in Appendix A.\\nGuidelines:\\n\\u2022 The answer NA means that the paper does not include experiments.\\n\\u2022 The experimental setting should be presented in the core of the paper to a level of detail\\nthat is necessary to appreciate the results and make sense of them.\\n\\u2022 The full details can be provided either with the code, in appendix, or as supplemental\\nmaterial.\\n7. Experiment Statistical Significance\"}\n\nIn total, 10 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved context from the vectorstore indicates that the training hyperparameters are detailed in Appendix B of the paper. I will now retrieve the specific content from Appendix B to find the hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND text_content LIKE '%Appendix B%' AND text_content LIKE '%hyperparameters%';\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The SQL query did not return any results, which means there might not be a chunk with both \"Appendix B\" and \"hyperparameters\" in the text content. I will perform a broader search to find the content of Appendix B and then filter for hyperparameters.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT text_content FROM chunks WHERE ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND page_number IN (SELECT page_number FROM pages WHERE page_content LIKE '%Appendix B%');\")"}
{"role": "user", "content": "[Observation]:\n[Error]: Runtime error during SQL execution and output formatting: Binder Error: Referenced column \"page_number\" not found in FROM clause!\nCandidate bindings: \"chunks.ref_page_id\", \"chunks.ref_paper_id\", \"chunks.text_content\""}
{"role": "assistant", "content": "[Thought]: The SQL query failed because the `page_number` column is not included in the `chunks` table. I will join the `pages` table to get the page number and then filter the results.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT c.text_content FROM chunks c JOIN pages p ON c.ref_page_id = p.page_id WHERE c.ref_paper_id = '3f2204a4-b105-5e6e-96be-f86c6d94e519' AND p.page_number IN (SELECT page_number FROM pages WHERE page_content LIKE '%Appendix B%');\")"}
{"role": "user", "content": "[Observation]:\n{\"text_content\":\"Published as a conference paper at ICLR 2024\\nKNOWLEDGE CARD: FILLING LLMS\\u2019 KNOWLEDGE GAPS\\nWITH PLUG-IN SPECIALIZED LANGUAGE MODELS\\nShangbin Feng1\\nWeijia Shi1\\nYuyang Bai2\\nVidhisha Balachandran3\\nTianxing He1\\nYulia Tsvetkov1\\n1University of Washington\\n2Xi\\u2019an Jiaotong University\\n3Carnegie Mellon University\\nshangbin@cs.washington.edu\\nABSTRACT\\nBy design, large language models (LLMs) are static general-purpose models,\\nexpensive to retrain or update frequently. As they are increasingly adopted for\"}\n{\"text_content\":\"knowledge-intensive tasks, it becomes evident that these design choices lead to\\nfailures to generate factual, relevant, and up-to-date knowledge. To this end, we\\npropose KNOWLEDGE CARD, a modular framework to plug in new factual and\\nrelevant knowledge into general-purpose LLMs. We first introduce knowledge\\ncards\\u2014specialized language models trained on corpora from specific domains\\nand sources. Knowledge cards serve as parametric repositories that are selected\"}\n{\"text_content\":\"at inference time to generate background knowledge for the base LLM. We then\\npropose three content selectors to dynamically select and retain information in\\ndocuments generated by knowledge cards, specifically controlling for relevance,\\nbrevity, and factuality of outputs. Finally, we propose two complementary integra-\\ntion approaches to augment the base LLM with the (relevant, factual) knowledge\\ncurated from the specialized LMs. Through extensive experiments, we demonstrate\"}\n{\"text_content\":\"that KNOWLEDGE CARD achieves state-of-the-art performance on six benchmark\\ndatasets. Ultimately, KNOWLEDGE CARD framework enables dynamic synthesis\\nand updates of knowledge from diverse domains. Its modularity will ensure that\\nrelevant knowledge can be continuously updated through the collective efforts of\\nthe research community. 1\\n1\\nINTRODUCTION\\nLarge language models (LLMs) have demonstrated an impressive ability to encode world knowledge\"}\n{\"text_content\":\"in model parameters (Petroni et al., 2019; Roberts et al., 2020). However, they still face various\\nchallenges in knowledge-intensive tasks and contexts: they suffer from hallucination (Kry\\u00b4\\nsci\\u00b4\\nnski et al.,\\n2020; Pagnoni et al., 2021; Ji et al., 2023), struggle to encode long-tail facts (Kandpal et al., 2023;\\nMallen et al., 2023), and could not be easily updated with new and emerging knowledge (De Cao\\net al., 2021; Hase et al., 2021). Existing works propose addressing these limitations through retrieval\"}\n{\"text_content\":\"augmentation or generated knowledge prompting. Retrieval-augmented LMs (Guu et al., 2020;\\nBorgeaud et al., 2022; Shi et al., 2023) employ retrieval systems to fetch relevant documents from a\\ngeneral and fixed retrieval corpus (e.g., Wikipedia or the Pile (Gao et al., 2020)), leveraging external\\nknowledge from non-parametric sources to aid LLM generation. Generated knowledge prompting\\napproaches (Shin et al., 2020; Liu et al., 2022a; Sun et al., 2022) prompt LLMs to incorporate and\"}\n{\"text_content\":\"generate contextual documents to encourage knowledge-aware generation.\\nWhile the two lines of work have achieved some success, these existing systems struggle to reflect\\ntwo key properties of knowledge. Knowledge is modular (Stuckenschmidt et al., 2009): it is an\\n\\u201carchipelago\\u201d rather than a single \\u201ccontinent\\u201d, encapsulating information that exists in diversified\\nforms, domains, sources, perspectives, and more. The lack of knowledge modularity has made gener-\"}\n{\"text_content\":\"alization to new domains and targeted updates of knowledge stored in LMs difficult. Knowledge is\\ncollaborative (Cayzer, 2004): LLMs should be able to represent and incorporate diverse and evolving\\nknowledge, from multi-faceted sources and perspectives, while enabling collaborative contribution\\nfrom various stakeholders. Community-driven knowledge could aggregate new knowledge from\\ndomain experts and enable the development of specialized LLMs, tailored to specific industries or\"}\n{\"text_content\":\"applications. That being said, existing approaches and systems did not employ modular or collab-\\norative knowledge sources that enable the plug-and-play updates and contributions from various\\nstakeholders. While approaches such as retrieval augmentation could be extended for modularity,\\n1Resources are available at https:\\/\\/github.com\\/BunsenFeng\\/Knowledge Card.\\n1\"}\n{\"text_content\":\"Published as a conference paper at ICLR 2024\\nthey are hardly compatible with the current landscape of model sharing (Wolf et al., 2019) and do not\\nfacilitate community-driven efforts to fill in LLMs\\u2019 knowledge gaps.\\nTo this end, we propose KNOWLEDGE CARD, a novel framework to empower general-purpose\\nLLMs with modular and collaboratively-sourced knowledge through the integration of smaller, but\\nspecialized language models. As an increasing amount of powerful LLMs are released behind API\"}\n\n... # only display 10 rows in JSON format, more are truncated due to length constraint based on max_rows (10)"}
