{"role": "system", "content": "You are an intelligent agent with expertise in **retrieving useful context from both the DuckDB database and the Milvus vectorstore through SQL execution and similarity search** and **answering user questions**. You will be given a natural language question concerning PDF files, along with the schema of both the database and the vectorstore. Your ultimate goal is to answer the input question with pre-defined answer format. The DuckDB database contains all parsed content of raw PDF files, while the Milvus vectorstore encodes specific column cells from the database as vectors. You can predict executable actions, interact with the hybrid environment (including database and vectorstore) across multiple turns, and retrieve necessary context until you are confident in resolving the question.\n\n--------\n\n## Task Description\nEach task consists of the following parts:\n\n[Question]: User question regarding the PDF, e.g., Is there any ...?\n[Answer Format]: it describes the format of the final answer, e.g., the answer is \"Yes\" or \"No\" without punctuation.\n[Anchor PDF]: Optional, a python str or list, the PDF(s) you must use to answer the question.\n[Reference PDF]: Optional, a python str or list, the PDF(s) you may use to answer the question.\n[Conference]: Optional, a python str or list, the conference(s) and year(s) of the relevant papers for retrieval.\n[Database Schema]: A detailed serialized schema of the DuckDB database for reference when generating SQL queries. It includes 1) tables, 2) columns and their data types, 3) descriptions for these schema items, and 4) primary key and foreign key constraints.\n[Vectorstore Schema]: A detailed serialized schema of the Milvus vectorstore for reference when generating executable retrieval actions with specific parameters. It includes 1) collections, 2) fields, 3) encodable (table, column) pairs in the relational database where the vectorized content originates, and 4) grammar for valid filter rules.\n\n\n--------\n\n## Action and Observation Space\nAll allowable action types include ['RetrieveFromDatabase', 'ClassicRetrieve', 'GenerateAnswer']. Here is the detailed specification in MARKDOWN format:\n\n### Action Type\nRetrieveFromDatabase\n\n### Description\nGenerate an SQL query to retrieve the desired information from the DuckDB database. Please refer to the concrete database schema to produce a valid and executable SQL.\n\n### Observation\nThe observation space is the execution result of the SQL query. You do not need to worry about the actual execution, we will perform it for you. If the SQL failed to execute, we will return the error message. Extremely long SQL output will be truncated.\n\n### Syntax and Parameters (MARKDOWN Format)\nRetrieveFromDatabase(sql: str)\n- sql: str, required. The concrete DuckDB SQL query to execute and retrieve results.\n\n### Use Cases\n\n#### Case 1\nGet the abstract of the paper with paper_id '12345678' from the metadata table in the DuckDB database.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT abstract FROM metadata WHERE paper_id = '12345678';\")\n\n\n#### Case 2\nFind which page in the paper with paper_id '12345678' contains Figure 3.\n\n[Action]: RetrieveFromDatabase(sql=\"SELECT pages.page_number FROM images JOIN pages JOIN metadata ON images.ref_page_id = pages.page_id AND pages.ref_paper_id = metadata.paper_id WHERE metadata.paper_id = '12345678' AND images.image_caption LIKE '%Figure 3%';\")\n\n\n----\n\n### Action Type\nClassicRetrieve\n\n### Description\nGiven a query text, retrieve relevant context from the Milvus vectorstore.\n\n### Observation\nThe observation space is the retrieved top-ranked entries from the Milvus vectorstore based on queries.\n\n### Syntax and Parameters (MARKDOWN Format)\nClassicRetrieve(query: str, limit: int = 5)\n- query: str, required. The query text will be encoded and used to search for relevant context. You can rephrase the original user question to obtain a more clear and structured query requirement.\n- limit: int, optional, default to 5. The number of top-ranked context to retrieve. Please set it to a positive integer to limit the number of returned results. Extremely large limit values may be truncated.\n\n### Use Cases\n\n#### Case 1\nRetrieve top 5 pieces about a certain topic.\n\n[Action]: ClassicRetrieve(query='Is there any work about the topic structured RAG?')\n\n\n#### Case 2\nRetrieve detailed information about the learning rate for training the ResNet model. The top 4 most relevant entries will be returned based on the query.\n\n[Action]: ClassicRetrieve(query=\"What's the learning rate for training the ResNet model?\", limit=4)\n\n\n----\n\n### Action Type\nGenerateAnswer\n\n### Description\nWhen you take this action, the retrieved results suffice to answer the user question. PLEASE STRICTLY ADHERE TO THE ANSWER FORMAT FOR THE CURRENT QUESTION.\n\n### Observation\nThere is no observation for this terminal action, since it indicates the completion of the task and end of the interaction.\n\n### Syntax and Parameters (MARKDOWN Format)\nGenerateAnswer(answer: Any)\n- answer: Any, required. The final answer to the user question. Please adhere to the answer format for the current question.\n\n### Use Cases\n\n#### Case 1\nThe answer to the user question is 42.\n\n[Action]: GenerateAnswer(answer=42)\n\n\n#### Case 2\nThe answer to the user question is a list of strings: ['Results', 'Discussion'].\n\n[Action]: GenerateAnswer(answer=['Results', 'Discussion'])\n\n\n\n--------\n\n## Interaction Framework\n\nThe main interaction procedure proceeds like this:\n\n----\n\n[Thought]: ... reasoning process, why to take this action ...\n[Action]: ... which action to take, please strictly conform to the action specification ...\n[Observation]: ... execution results or error message after taking the action ...\n\n... # more interleaved triplets of ([Thought], [Action], [Observation])\n\n[Thought]: ... reasoning process to produce the final answer ...\n[Action]: ... the terminate action `GenerateAnswer`, there is no further observation ...\n\n----\n\nIn general, the main interaction loop consists of an interleaved of triplets ([Thought], [Action], [Observation]), except the last `GenerateAnswer` action which does not have \"[Observation]:\". You need to predict the \"[Thought]: ...\" followed by the \"[Action]: ...\" for each turn, and we will execute your action in the environment and provide the \"[Observation]: ...\" for the previous action.\n\n--------\n\n## Suggestions or Hints for Agent Interaction\n\n1. Explore multiple retrieval strategies. For example:\n- Experiment with different (table, column) pairs to extract diverse types of information.\n- Query various embedding models (collections) to find the most relevant context.\n\n2. Combine both structured and unstructured data. Concretely:\n- Use SQL queries to retrieve precise facts and structured data. Pay special attention to morphological variations in cell values.\n- Perform similarity searches in the vectorstore to capture semantic relationships and hidden insights.\n\n3. Iterate and refine:\n- If SQL execution result is not satisfactory, try alternative SQL queries to explore the database content carefully.\n- If the vector-based neural retrieval is insufficient, try alternative approaches or parameter settings.\n- Use your findings to validate or enrich the final response.\n\n4. Ensure confidence. That is, only make a final decision when you are confident that the retrieved information fully addresses the userâ€™s query.\n\n\nRemember that, for each question, you only have 20 interaction turns at most. Now, let's start!\n"}
{"role": "user", "content": "[Question]: Which evaluation metric demonstrates the greatest improvement in the finetuned model proposed in this paper compared to GPT baseline?\n[Answer Format]: Your answer should be a Python string, which is the name of the evaluation metric DIRECTLY FROM THE PDF.\n[Anchor PDF]: '481d851e-214b-5d6b-af6c-880a1be8f3b9'\n[Database Schema]: The database schema for /home/htc981/workspace/project/HNS-RAG/data/database/ai_research/ai_research.sql is as follows:\n/* database ai_research: This database contains information about AI research papers. Each PDF file is represented or parsed via different views, e.g., pages, sections, figures, tables, and references. We also extract the concrete content inside each concrete element via OCR.\n*/\n/* table metadata: This table stores metadata about each paper, including the number of pages, paper path and paper id.\n*/\nCREATE TABLE IF NOT EXISTS metadata (\n\tpaper_id UUID, -- A unique identifier for this paper.\n\ttitle VARCHAR, -- The title of this paper.\n\tabstract VARCHAR, -- The abstract of this paper.\n\tnum_pages INTEGER, -- The number of pages in this paper.\n\tconference_full VARCHAR, -- The full name of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tconference_abbreviation VARCHAR, -- The abbreviation of the conference where this paper was published. `uncategorized` if the paper has not been published yet.\n\tpub_year INTEGER, -- The year when this paper was published.\n\tvolume VARCHAR, -- The volume of the conference where this paper was published. e.g. findings.\n\tdownload_url VARCHAR, -- The url from which the paper can be downloaded.\n\tbibtex VARCHAR, -- The bibtex of this paper.\n\tauthors VARCHAR[], -- The full names of authors of this paper.\n\tpdf_path VARCHAR, -- The path to the PDF file of this paper.\n\ttldr VARCHAR, -- A brief summary of the paper's main idea or findings generated by LLM based on title and abstract.\n\ttags VARCHAR[], -- Keywords representing the paper's topics, methods, or applications generated by LLM based on title and abstract.,\n\tPRIMARY KEY (paper_id)\n);\n/* table pages: This table stores information of the pages in the papers, including their content, size and their order within the paper. The pagesare extracted using PyMuPDF.\n*/\nCREATE TABLE IF NOT EXISTS pages (\n\tpage_id UUID, -- A unique identifier for each page.\n\tpage_number INTEGER, -- The page number in the current paper, starting from 1.\n\tpage_width INTEGER, -- The pixel width of the current page.\n\tpage_height INTEGER, -- The pixel height of the current page.\n\tpage_content VARCHAR, -- The content of the page.\n\tpage_summary VARCHAR, -- A brief summary of the page content, generated by LLM, focusing on key information and describing the page content.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (page_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table images: This table stores the information about images in each paper. The images are extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS images (\n\timage_id UUID, -- The unique identifier of the image.\n\timage_caption VARCHAR, -- The caption of this image, \"\" if it doesn't have one.\n\timage_summary VARCHAR, -- A brief summary of the image, generated by LLM, focusing on key information and describing the image.\n\tbounding_box INTEGER[4], -- The bounding box of the figure in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height which are used to determine the shape of the rectangle.\n\tordinal INTEGER, -- Each figure is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (image_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table chunks: This table contains the information of each chunk of text (chunk size = 512 tokens with no overlapping) in each page of the paper. A chunk is a sub-text that is extracted from the main text using langchain, such as a sentence or a paragraph.\n*/\nCREATE TABLE IF NOT EXISTS chunks (\n\tchunk_id UUID, -- A unique identifier for each chunk of text.\n\ttext_content VARCHAR, -- The text content of the current chunk.\n\tordinal INTEGER, -- Each chunk is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table.,\n\tPRIMARY KEY (chunk_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table tables: This table stores information about tables extracted from pages using MinerU, including content (in html format), bounding box and summary of each table generated by LLM.\n*/\nCREATE TABLE IF NOT EXISTS tables (\n\ttable_id UUID, -- A unique identifier for each table.\n\ttable_caption VARCHAR, -- Caption of the table, showing key information of the table.\n\ttable_content VARCHAR, -- The content of the table in html format.\n\ttable_summary VARCHAR, -- A brief summary of the table content generated by LLM, focusing on key information and describing the table content.\n\tbounding_box INTEGER[4], -- The bounding box of the table in the format [x0, y0, w, h], where (x0, y0) represents the coordinates of the top-left corner and (w, h) represents the width and height.\n\tordinal INTEGER, -- Each table is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this table is located.,\n\tPRIMARY KEY (table_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table sections: This table contains the text content of each section in the paper, e.g. `Introduction`, `Experiment`, `Conclusion`, `Reference`. The sections are extracted using PyMuPDF or MinerU.\n*/\nCREATE TABLE IF NOT EXISTS sections (\n\tsection_id UUID, -- A unique identifier for each section of text.\n\tsection_title VARCHAR, -- The title of the current section.\n\tsection_content VARCHAR, -- The text content of the current section.\n\tsection_summary VARCHAR, -- A brief summary of the section content generated by LLM, focusing on key information and describing the section content.\n\tordinal INTEGER, -- Each section is labeled with one distinct integer number in the paper, which starts from 0.\n\tpage_numbers INTEGER[], -- A list of page numbers where current section is located in the relevant paper.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.,\n\tPRIMARY KEY (section_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id)\n);\n/* table equations: This table stores information about equations extracted from pages using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS equations (\n\tequation_id UUID, -- A unique identifier for each equation.\n\tequation_content VARCHAR, -- Content of the equation in latex format.\n\tordinal INTEGER, -- Each equation is labeled with one distinct integer number in the current page, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the paper ID in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the page ID in the `pages` table where this equation is located.,\n\tPRIMARY KEY (equation_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n/* table reference: This table stores information about references extracted using MinerU.\n*/\nCREATE TABLE IF NOT EXISTS reference (\n\treference_id UUID, -- A unique identifier for each reference.\n\treference_content VARCHAR, -- Content of the reference.\n\tordinal INTEGER, -- Each reference is labeled with one distinct integer number according to its order in the paper, which starts from 0.\n\tref_paper_id UUID, -- A foreign key linking to the `paper_id` in the `metadata` table.\n\tref_page_id UUID, -- A foreign key linking to the `page_id` in the `pages` table where this reference is located.,\n\tPRIMARY KEY (reference_id),\n\tFOREIGN KEY (ref_paper_id) REFERENCES metadata(paper_id),\n\tFOREIGN KEY (ref_page_id) REFERENCES pages(page_id)\n);\n[Vectorstore Schema]: The vectorstore schema for ai_research is as follows. You can try collections with different encoding models or modalities:\n[\n    {\n        \"collection_name\": \"text_bm25_en\",\n        \"modality\": \"text\",\n        \"embed_type\": \"bm25\",\n        \"embed_model\": \"en\",\n        \"description\": \"This collection is used to store the sparse embeddings generated by the BM25 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric inner-product (IP).\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"dtype\": \"INT64\",\n                \"is_primary\": true,\n                \"description\": \"The unique id for each encoded text vector in this collection.\"\n            },\n            {\n                \"name\": \"vector\",\n                \"dtype\": \"SPARSE_FLOAT_VECTOR\",\n                \"description\": \"The encoded sparse vector of the text content generated by the BM25 model. Note that, the raw text content can be uniquely identified by the triplet fields below: `table_name`, `column_name`, `primary_key`.\"\n            },\n            {\n                \"name\": \"pdf_id\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The unique id of the PDF file stored in the relational database that the encoded text belongs to. This field can be used to quickly filter the search space.\"\n            },\n            {\n                \"name\": \"page_number\",\n                \"dtype\": \"INT16\",\n                \"description\": \"The page number in the PDF file that the encoded text belongs to (starting from 1). This field can be used to quickly filter the search space. Value -1 means unknown.\"\n            },\n            {\n                \"name\": \"table_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which table in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"column_name\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"Which column under `table_name` in the relational database is the text content from.\"\n            },\n            {\n                \"name\": \"primary_key\",\n                \"dtype\": \"VARCHAR\",\n                \"description\": \"The primary key value of `table_name` (or which row) in the relational database that the text content belongs to. Note that, the triplet (`table_name`, `column_name`, `primary_key`) can be used to construct a one-to-one mapping between the `text` field in the current vectorstore and the cell entry in the relational database.\"\n            }\n        ]\n    },\n    {\n        \"collection_name\": \"text_sentence_transformers_all_minilm_l6_v2\",\n        \"modality\": \"text\",\n        \"embed_type\": \"sentence_transformers\",\n        \"embed_model\": \"all-MiniLM-L6-v2\",\n        \"description\": \"This collection is used to store the embeddings generated by the all-MiniLM-L6-v2 model for all encodable text content in another relational database. The similary search is based on field `vector` with metric COSINE.\",\n        \"fields\": \"The fields of this collection are similar to the `text_bm25_en` collection.\"\n    }\n]\n\nThe following lists all encodable (table_name, column_name, encode_modality) information from the corresponding DuckDB database, where the encoded vector entries are sourced. Note that, for text modality, we directly encode cell values from the `table_name.column_name`; for image modality, we encode the cropped images for `page_number` in `pdf_id` with bounding boxes from `table_name.column_name`. You can leverage them for filter condition during similarity search:\n[\n    [\n        \"metadata\",\n        \"title\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"abstract\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"bibtex\",\n        \"text\"\n    ],\n    [\n        \"metadata\",\n        \"tldr\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_content\",\n        \"text\"\n    ],\n    [\n        \"pages\",\n        \"page_summary\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_caption\",\n        \"text\"\n    ],\n    [\n        \"images\",\n        \"image_summary\",\n        \"text\"\n    ],\n    [\n        \"chunks\",\n        \"text_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_caption\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_content\",\n        \"text\"\n    ],\n    [\n        \"tables\",\n        \"table_summary\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_title\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_content\",\n        \"text\"\n    ],\n    [\n        \"sections\",\n        \"section_summary\",\n        \"text\"\n    ],\n    [\n        \"equations\",\n        \"equation_content\",\n        \"text\"\n    ],\n    [\n        \"reference\",\n        \"reference_content\",\n        \"text\"\n    ]\n]\n\nHere are the operators that you can use in the filtering condition for the vectorstore:\n{\n    \"operators\": {\n        \"logical\": [\n            {\n                \"symbol\": \"not\",\n                \"example\": \"not expr\",\n                \"description\": \"True if expr is false.\"\n            },\n            {\n                \"symbol\": \"and\",\n                \"example\": \"expr1 and expr2\",\n                \"description\": \"True if both expr1 and expr2 are true.\"\n            },\n            {\n                \"symbol\": \"or\",\n                \"example\": \"expr1 or expr2\",\n                \"description\": \"True if either expr1 or expr2 are true.\"\n            }\n        ],\n        \"binary arithmetic\": [\n            {\n                \"symbol\": \"+\",\n                \"example\": \"a + b\",\n                \"description\": \"Add the two operands.\"\n            },\n            {\n                \"symbol\": \"-\",\n                \"example\": \"a - b\",\n                \"description\": \"Subtract the second operand from the first operand.\"\n            },\n            {\n                \"symbol\": \"*\",\n                \"example\": \"a * b\",\n                \"description\": \"Multiply the two operands.\"\n            },\n            {\n                \"symbol\": \"/\",\n                \"example\": \"a / b\",\n                \"description\": \"Divide the first operand by the second operand.\"\n            },\n            {\n                \"symbol\": \"**\",\n                \"example\": \"a ** b\",\n                \"description\": \"Raise the first operand to the power of the second operand.\"\n            },\n            {\n                \"symbol\": \"%\",\n                \"example\": \"a % b\",\n                \"description\": \"Divide the first operand by the second operand and yield the remainder portion.\"\n            }\n        ],\n        \"relational\": [\n            {\n                \"symbol\": \"<\",\n                \"example\": \"a < b\",\n                \"description\": \"True if a is less than b.\"\n            },\n            {\n                \"symbol\": \">\",\n                \"example\": \"a > b\",\n                \"description\": \"True if a is greater than b.\"\n            },\n            {\n                \"symbol\": \"==\",\n                \"example\": \"a == b\",\n                \"description\": \"True if a is equal to b. Please use **two** equal signs for equality comparison.\"\n            },\n            {\n                \"symbol\": \"!=\",\n                \"example\": \"a != b\",\n                \"description\": \"True if a is not equal to b.\"\n            },\n            {\n                \"symbol\": \"<=\",\n                \"example\": \"a <= b\",\n                \"description\": \"True if a is less than or equal to b.\"\n            },\n            {\n                \"symbol\": \">=\",\n                \"example\": \"a >= b\",\n                \"description\": \"True if a is greater than or equal to b.\"\n            },\n            {\n                \"symbol\": \"in\",\n                \"example\": \"a in [b, c, ...]\",\n                \"description\": \"True if a is equal to any of the values in the list.\"\n            }\n        ],\n        \"array operations\": [\n            {\n                \"symbol\": \"[]\",\n                \"example\": \"bbox[0]\",\n                \"description\": \"This expression gets the first element in array bbox. For example, 'bbox[0] < 50' evaluates to true if the value of bbox[0] is less than 50.\"\n            },\n            {\n                \"symbol\": \"array_contains\",\n                \"example\": \"array_contains(bbox, 100)\",\n                \"description\": \"This expression evaluates to true if array bbox contains element 100.\"\n            },\n            {\n                \"symbol\": \"array_length\",\n                \"example\": \"array_length(int_array) == 4\",\n                \"description\": \"This expression evaluates to true if int_array contains exactly 4 elements.\"\n            }\n        ]\n    },\n    \"use cases\": [\n        {\n            \"example\": \"table_name == 'chunks' and column_name == 'text_content'\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and column_name equal to 'text_content'.\"\n        },\n        {\n            \"example\": \"table_name == 'chunks' and primary_key in ['123', '456', '789']\",\n            \"description\": \"Filter the results with table_name equal to 'chunks' and primary_key equal to any of the values in the list ['123', '456', '789'].\"\n        },\n        {\n            \"example\": \"bbox[0] + bbox[2] <= 100 and bbox[1] + bbox[3] <= 300 and pdf_id == '123456' and page_number == 1\",\n            \"description\": \"For image modality, filter results to include only image regions that are entirely within the upper-left quadrant of page 1 in the PDF with ID '123456', assuming the page dimensions are 200 (width) x 600 (height).\"\n        }\n    ]\n}"}
{"role": "assistant", "content": "[Thought]: To find the evaluation metric that demonstrates the greatest improvement in the finetuned model compared to the GPT baseline, I need to search the sections of the paper for content that discusses evaluation metrics and performance comparisons. I will start by retrieving the relevant sections from the `sections` table for the specified paper.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_title, section_content FROM sections WHERE ref_paper_id = '481d851e-214b-5d6b-af6c-880a1be8f3b9';\")"}
{"role": "user", "content": "[Observation]:\n{\"section_title\":\"BIPED: Pedagogically Informed Tutoring System for ESL Education\",\"section_content\":\"Soonwoo Kwon1\\u2020 Sojung $\\\\mathbf{Kim}^{2\\\\dagger}$ Minju Park3 Seunghyun Lee3 Kyuseok Kim3 Twelve Labs1 KAIST2 Riiid AI Research3 ian@twelvelabs.io1, sojung_kim@kaist.ac.kr2, {minju.park,seunghyun.lee}@riiid. ${\\\\mathsf{c o}}^{3}$ , kimkyu80@gmail.com3\"}\n{\"section_title\":\"Abstract\",\"section_content\":\"Large Language Models (LLMs) have a great potential to serve as readily available and costeffcient Conversational Intelligent Tutoring Systems (CITS) for teaching L2 learners of English. Existing CITS, however, are designed to teach only simple concepts or lack the pedagogical depth necessary to address diverse learning strategies. To develop a more pedagogically informed CITS capable of teaching complex concepts, we construct a BIlingual PEDagogicallyinformed Tutoring Dataset (BIPED) of oneon-one, human-to-human English tutoring interactions. Through post-hoc analysis of the tutoring interactions, we come up with a lexicon of dialogue acts (34 tutor acts and 9 student acts), which we use to further annotate the collected dataset. Based on a two-step framework of frst predicting the appropriate tutor act then generating the corresponding response, we implemented two CITS models using GPT-4 and SOLAR-KO, respectively. We experimentally demonstrate that the implemented models not only replicate the style of human teachers but also employ diverse and contextually appropriate pedagogical strategies.\"}\n{\"section_title\":\"1 Introduction\",\"section_content\":\"As Large Language Models (LLMs) such as GPT (Achiam et al., 2023) revolutionize the feld of natural language generation, both researchers and practitioners have put an increasing amount of effort into developing Conversational Intelligent Tutoring Systems (CITS) that leverage the generative capabilities of LLM\\u2019s (Tack and Piech, 2022; Abdelghani et al., 2022; Park et al., 2024; Lee et al., 2023). Specifcally, LLMs have the potential to teach English as a Second\\/Foreign Language (ESL\\/EFL), for they may serve as readilyavailable tutors that can emulate native-speaking contexts (Park et al., 2024; Lee et al., 2023).\\nHowever, most CITS proposed in literature for teaching ESL are restricted in scope and lack pedagogical depth. For example, works based on CIMA dataset (Stasaski et al., 2020) consider toy concepts of colored shapes and prepositions. Possibly due to limited scope, CIMA only considers a fve tutor act classes (\\u201chint\\u201d, \\u201cquestion\\u201d, \\u201ccorrection\\u201d, \\u201cconfrmation\\u201d, and \\u201cother\\u201d). Similarly, the TSCC dataset (Caines et al., 2022) only considers abstract tutor act classes such as \\u201cscaffolding\\u201d, and does not consider a more granular set of teaching strategies (e.g., inferential clues, teaching synonyms or antonyms, etc.). Consequently, models trained on CIMA (Stasaski et al., 2020) and TSCC (Caines et al., 2022) are limited to employing simplistic instructional strategies (Macina et al., 2023b).\\nThe goal of our work is to develop CITS that can teach ESL by applying pedagogically meaningful teaching strategies adaptively to student\\u2019s needs. To do so, we designed a tutoring session that focuses on comprehending a real news article, covering vocabulary, grammar, and relevant cultural contexts. Based on this, we construct a BIlingual PEDagogically-informed Tutoring Dataset (BIPED). For BIPED, we collected a bilingual, oneon-one human-to-human tutoring dataset. Thereafter, we analyzed the dataset post-hoc from a pedagogical viewpoint and developed a categorization of dialogue acts, which comprises 34 tutor acts and 9 student acts. Finally, we annotated the data using the defned dialogue act categories.\\nAs for the development of CITS, we employ the framework (Macina et al., 2023b; Wang et al., 2023a) whereby the LLM frst chooses the suitable tutor act, then generates the corresponding utterance. We believe this approach enables the model to generate a more focused response that does not deviate from the chosen tutor intent. We consider two implementations of such CITS, one based on GPT-4 prompting, and another based on fne-tuning SOLAR-KO 10.7B (L. Junbum, 2024), which is a public model trained on a Korean corpus. For GPT-4, our dataset is used as examples for in-context learning. For fne-tuning, we explored a multi-task learning approach, where the model is instruction-tuned to carry out tutor act prediction and response generation, as well as other tasks for context grounding.\\n\\nIn our experiments, we show through various metrics that the implemented models are capable of mimicking human teacher\\u2019s utterance style, as well as their pedagogical strategies. Specifcally, we show that our models choose appropriate and diverse tutor acts, and generate human-like utterances, as measured by sentence similarity metrics.\\nThe contributions of our paper are as follows:   \\n\\u2022 We provide BIPED, a dataset curated from bilingual human-to-human tutoring dialogues that come annotated with specifc tutoring acts. Importantly, the lesson topic is complex enough to require sophisticated pedagogical methods.   \\n\\u2022 We implement two CITS based on BIPED. In particular, we explore both in-context learning and fne-tuning approaches. It is the pioneering work in utilizing instruction tuning techniques in the development of CITS.   \\n\\u2022 We provide experimental results demonstrating the implemented models\\u2019 ability to mimic human tutors.\"}\n{\"section_title\":\"2 Related Work\",\"section_content\":\"\"}\n{\"section_title\":\"2.1 Conversational Intelligent Tutoring Systems (CITS)\",\"section_content\":\"Some of conversational tutoring systems make effective use of GPT through the implementation of prompt engineering (Park et al., 2024; Tack and Piech, 2022; Abdelghani et al., 2022). Moreover, there exist studies that tailor open-source LLMs to fulfll distinct objectives (Qian et al., 2023; Huang et al., 2022), and the generation of dialogue in conjunction with act classifcation is also gaining ground (Wang et al., 2023a). However, despite these advancements in CITS using LLMs, a perceivable lack in the pedagogical approach is observed (Macina et al., 2023b; Kasneci et al., 2023). These systems fall short of human tutors in emulating tutor\\u2019s speech, comprehending students, and assisting them in an appropriate way (Tack and Piech, 2022). In order to ensure that tutoring systems can effectively mimic the qualities of an actual tutor, the need for the integration of pedagogical attributes into the design of these systems is under\"}\n{\"section_title\":\"2.2 Tutoring Dialogue Dataset\",\"section_content\":\"In the feld of general natural language processing, the procedure of identifying the dialogue act serves as the preliminary phase in modeling intricate discourse structures (Stolcke et al., 2000; Budzianowski et al., 2018; Saha et al., 2020). Similarly, within the realm of education, related works also focus on dialogue acts within the tutoring dialogues (Caines et al., 2022; Tan et al., 2023; Lin et al., 2023; Samei et al., 2015). In contrast to other areas, tutoring dialogue acts possess distinct characteristics in that they include the instructional intentions of tutors, with the objective of elevating the effectiveness of the tutoring process. There exist extensive studies dedicated to the classifcation of teaching strategies within the educational feld (Brown and Lee, 2015; Brown, 2014; Walsh, 2006, 2013). While numerous studies of CITS draw from this established body of knowledge, they often encounter constraints. Due to the complexity of incorporating an expansive range of pedagogical methods within CITS, numerous studies often narrow the scope to a limited set of teaching strategies (Alic et al., 2022; Demszky and Hill, 2022), or alternatively, focus solely on teaching simple knowledge concepts which require a more confned set of instructional strategies (Stasaski et al., 2020). To address this limitation, our work endeavors to integrate a diverse array of teaching methodologies, devised in collaboration with domain experts.\\nThere is a considerable variation across existing tutoring dialogue datasets in terms of its specifc composition. There are tutoring dialogues assembled from interactions between learners and automated systems (Huang et al., 2022; Macina et al., 2023a). Meanwhile, Stasaski et al., 2020 have generated dialogues wherein experts simulate both the tutor and student roles. Nonetheless, to authentically encapsulate the dynamic interactions between the tutor and the student, it becomes imperative to establish a real teaching context. Moreover, focusing on ESL, there exists a signifcant defcit in the availability of bilingual data. In the context of language learning, pedagogical strategies that simultaneously consider both languages \\u2013 for instance, code-switching \\u2013 play a pivotal role (Brown, 2014). Thus, the shortage of bilingual data is restricting the effcacy and scope with respect to language instruction (Nguyen et al., 2022).\\nHighlighting that our dataset, BIPED, is primarily focused on human-to-human tutoring dialogues including annotations, we provide an overview of descriptive statistics with a comparison to existing datasets in comparable settings in Table 1.\"}\n{\"section_title\":\"3 Dataset: BIPED\",\"section_content\":\"This section describes our dataset, BIPED, detailing its design, collection, annotation process, and essential statistics.\"}\n{\"section_title\":\"3.1 Data Design\",\"section_content\":\"We aim to construct a comprehensive tutoring dataset that contains the entire dialogues from tutoring sessions, with the corresponding dialogue acts and encompassing contents labeled on each utterance. Additionally, we categorized the correctness of student responses to inquiries posed by the tutor. To provide a clearer understanding of the structure of our dataset, a sample of the dataset is displayed in Figure 1.\"}\n{\"section_title\":\"3.2 Data Collection\",\"section_content\":\"For the data collection through one-to-one tutoring sessions, we recruited four experienced ESL tutors and 60 students with a willingness to pursue English studies. Every student was partnered with a single tutor, and over the course of three days, they had three successive 30-minute one-to-one tutoring sessions. Prior to the frst session, tutors were given an additional 10-minute to comprehend the student\\u2019s individual status, including their particular objectives for studying English, their methods of studying English, and also their personal interests. The learning contents, developed by subject matter experts in ESL teaching, consisted of an English article along with activities focused on vocabulary and reading comprehension. Based on the student\\u2019s pretest results and the ongoing assessment of their progress throughout the class, including the preceded 10-minute talk, the tutors were required to adapt their teaching style to each unique learner, selectively determining the learning materials to cover. The tutoring sessions were held in an audioonly setting, and the transcriptions of these sessions were obtained with the assistance of Whisper (Radford et al., 2023).\\n\\nThe dataset contains 112 tutoring sessions\\\\*, as outlined in Table 1. On average, each session consisted of roughly 105.7 turns. Analysis reveals that the utterances made by tutors in a single turn contained an average of 31.7 words, while the student\\u2019s utterances were more concise, averaging 8.2 words per utterance.\\nIn order to confrm the educational signifcance of the tutoring sessions, students were required to take a pre-test and post-test surrounding these sessions. Drawing upon the computation of the normalized learning gain, the average result was fount to be 0.089, demonstrating the tutoring sessions\\u2019 effectiveness in enhancing the students\\u2019 English profciency. A detailed explanation about the pre\\/post-test design and the evaluation of learning gain from these tests is described in Appendix A and Appendix B, respectively. Additionally, a feedback survey was deployed to understand their perspectives and feelings towards the courses. Overall, the feedback suggested a general contentment with the educational experience provided. For instance, for the questions \\u201cTo what extent did you fnd the class satisfactory?\\u201d, \\u201cHow suitable for you was the teaching method employed by the tutor during the class?\\u201d, \\u201cWas the class conducted with consideration for your linguistic background and cultural understanding?\\u201d, the respondents indicated high approval with average scores of 4.65, 4.60, and 4.68 out of a possible 5, respectively. These results support the pedagogical excellence of our dataset.\"}\n{\"section_title\":\"3.3 Dialogue Act Design\",\"section_content\":\"To accurately encapsulate the diverse intentions of both tutors and students within our dataset, we defned 34 tutor acts and 9 student acts in collaboration with experienced ESL instructors. Our taxonomy was grounded in prior research (Caines et al., 2022; Stasaski et al., 2020), studies related to teaching methods (Brown, 2014; Brown and Lee, 2015), and underwent further refnements after observing multiple pilot classes. As the tutor acts play a crucial role in infuencing the effcacy of a tutoring session, we have accorded signifcant importance to the process of categorizing tutor acts. Tutor acts have been classifed into fve primary categories:\\n\\u2022 General: general utterances including greeting, farewell, small talk, short reply, etc.\\n\\u2022 Operational: utterances designed to facilitate the smooth operation of the class. \\u2022 Assessment: utterances intended to evaluate the student\\u2019s learning progress. \\u2022 Teaching: utterances dedicated to teach a certain knowledge to the student. \\u2022 Engagement: utterances tailored to encourage student participation and involvement.\\nThe respective categories encompass 1,3,4,22, and 4 distinct tutor acts. Prior research has primarily concentrated on broader behaviors, and current language models have shown profciency in their application to such contexts. Given the limitations observed within current taxonomies in terms of capturing the diversity of teaching methods, our study endeavors to provide a more detailed examination of the \\\"Teaching\\\" category, while drawing upon preliminary studies in reference to the remaining categories. The detailed process for developing the tutor act taxonomy is described in Appendix C.\\nConcurrently, in a more simplifed manner, student acts are divided into four distinct categories: General, Operational, Question, and Answer. These particular categories encompass 1, 3, 2, and 3 unique student acts respectively. The complete list of both tutor and student acts, along with corresponding examples is exhibited in the Appendix D and E.\"}\n\n... # only display 10 rows in JSON format, more are truncated due to length constraint based on max_rows (10)"}
{"role": "assistant", "content": "[Thought]: The retrieved sections do not directly mention the evaluation metrics or the performance comparison between the finetuned model and the GPT baseline. I will perform a similarity search in the vectorstore to find the most relevant context that discusses these metrics and comparisons.\n[Action]:\nClassicRetrieve(query='evaluation metrics improvement finetuned model GPT baseline', limit=5)"}
{"role": "user", "content": "[Observation]:\n{\"score\":0.7799,\"pdf_id\":\"6dd2bd84-b487-5b3a-bc6c-f2dce6b44a3a\",\"page_number\":7,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"b8e90634-7852-5140-8dd4-def12f642ae3\",\"text\":\"Baselines. We compare our models to two sets of baselines. We first use proprietary GPT-4, GPT-\\n3.5, and Claude-V1 as strong baselines, and then include strong cutting-edge open-sourced aligned\\nLLMs, Vicuna (Chiang et al., 2023), WizardLM (Xu et al., 2023a), Baize (Xu et al., 2023b), Open-\\nChat (Wang et al., 2023a), and Alpaca (Taori et al., 2023). Details are left to Appx. \\u00a7F.\\n7\"}\n{\"score\":0.7433,\"pdf_id\":\"5424ae9c-ed27-5102-9eeb-f789d9e957d6\",\"page_number\":5,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"62205221-1ba6-5741-bb6f-6531b913471d\",\"text\":\"GPT-3 1.3B\\n19.7\\n25.7\\n76.6\\nGPT-3 6.7B\\n21.8\\n28.0\\n77.9\\nGPT-3 175B\\n29.9\\n38.0\\n78.6\\nInstructGPT 0.35B\\n20.4\\n25.2\\n80.9\\nInstructGPT 1.3B\\n24.8\\n34.2\\n72.4\\nInstructGPT 6.7B\\n34.3\\n41.7\\n82.1\\nInstructGPT 175B\\n48.4\\n63.1\\n76.6\\nTextDavinci002\\n66.1\\n80.6\\n82.0\\nTable 2: The LMentry scores of each of our baseline\\nmodels, along with their accuracy and robustness score.\\n66%\\u2191\\n49%\\u2191\\n36%\\u2191\\n9%\\u2191\\n33%\\u2191\\n27%\\u2191\\n24%\\u2191\\nFigure 2: Instruction finetuning provides an efficient\\nalternative to scaling up. The accuracy improvement\"}\n{\"score\":0.7336,\"pdf_id\":\"195c0cc4-00ed-576c-8eb4-1dbe492f0751\",\"page_number\":7,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"ede8746e-2883-5b37-bab1-34639ff6c783\",\"text\":\"verifying it. We give a more detailed overview of our evaluating procedure in Appendix A.3. Unless\\notherwise mentioned, we report the less precise accuracy in our experiments.\\nMain Results\\nWe show our combined results across all attributes and models in Fig. 4. Con-\\nsistent with most benchmarks in the literature, we observe higher performance in proprietary\\nmodels, with GPT4-V clearly outperforming all other models with a 77.6% accuracy. Remark-\\n7\"}\n{\"score\":0.7313,\"pdf_id\":\"2ad21c29-30d8-51cb-ae60-693d1eb0876d\",\"page_number\":3,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"adc59ff5-7c7e-5bbb-99f1-30b69d071fb3\",\"text\":\"As we were not able to beat our baseline model\\nusing these APIs, we tried fine-tuning an older\\nGPT series model in an attempt to improve the\\nmetrics. Fine-tuning is currently not available for\\neither ChatGPT or GPT-4. Only the original GPT-3\\nbase models that do not have any instruction follow-\\ning training and are smaller than ChatGPT can be\\nfine-tuned. We selected the largest one \\u2013 DaVinci.\\nDoing this allowed us to beat our own baseline\\nmodel and to get the best results among all our\"}\n{\"score\":0.7302,\"pdf_id\":\"3c9054c6-28d4-510a-a424-b589f6f53a5d\",\"page_number\":15,\"table_name\":\"chunks\",\"column_name\":\"text_content\",\"primary_key\":\"35d8a4e5-d549-5fc0-a802-7b7d9452bd70\",\"text\":\"Fine-tuned GPT (Rounded)\\n0.99\\n1.05\\n1.42\\n0.98\\n0.94\\nTable 2: A comparison of model performance across different subsets of the dataset, as outlined in the column\\nheaders. The Mean Squared Error (MSE) for each model is presented, with the lowest values highlighted. The\\nfine-tuned GPT 4o model, using assertiveness scores rounded to one decimal place, achieves the best overall\\nperformance with an average MSE of approximately 1.078. This result indicates that the model is the most\"}\n\nIn total, 5 rows are displayed in JSON format."}
{"role": "assistant", "content": "[Thought]: The retrieved chunks from the vectorstore do not directly mention the evaluation metrics or the performance comparison for the specific paper with ID '481d851e-214b-5d6b-af6c-880a1be8f3b9'. I need to refine the search to focus on the specific paper and the relevant sections.\n[Action]:\nClassicRetrieve(query='evaluation metrics improvement finetuned model GPT baseline', limit=5, filter=\"pdf_id == '481d851e-214b-5d6b-af6c-880a1be8f3b9'\")"}
{"role": "user", "content": "[Observation]: [Error]: Failed to parse the parameters for action ClassicRetrieve from the response. ClassicRetrieve.__init__() got an unexpected keyword argument 'filter'."}
{"role": "assistant", "content": "[Thought]: It seems there was an error with the filter parameter in the `ClassicRetrieve` action. I will try a different approach by directly querying the `sections` table for the specific paper and looking for sections that discuss evaluation metrics and performance comparisons.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_title, section_content FROM sections WHERE ref_paper_id = '481d851e-214b-5d6b-af6c-880a1be8f3b9' AND section_title IN ('4 Experiments', '5 Results', '6 Discussion');\")"}
{"role": "user", "content": "[Observation]: [Warning]: The SQL execution result is empty, please check the SQL first."}
{"role": "assistant", "content": "[Thought]: The sections '4 Experiments', '5 Results', and '6 Discussion' do not exist in the paper. I will try a broader search to find any section that might contain information about evaluation metrics and performance comparisons.\n[Action]:\nRetrieveFromDatabase(sql=\"SELECT section_title, section_content FROM sections WHERE ref_paper_id = '481d851e-214b-5d6b-af6c-880a1be8f3b9' AND (section_content LIKE '%evaluation%' OR section_content LIKE '%metric%' OR section_content LIKE '%performance%' OR section_content LIKE '%improvement%' OR section_content LIKE '%baseline%');\")"}
{"role": "user", "content": "[Observation]:\n{\"section_title\":\"3.2 Data Collection\",\"section_content\":\"For the data collection through one-to-one tutoring sessions, we recruited four experienced ESL tutors and 60 students with a willingness to pursue English studies. Every student was partnered with a single tutor, and over the course of three days, they had three successive 30-minute one-to-one tutoring sessions. Prior to the frst session, tutors were given an additional 10-minute to comprehend the student\\u2019s individual status, including their particular objectives for studying English, their methods of studying English, and also their personal interests. The learning contents, developed by subject matter experts in ESL teaching, consisted of an English article along with activities focused on vocabulary and reading comprehension. Based on the student\\u2019s pretest results and the ongoing assessment of their progress throughout the class, including the preceded 10-minute talk, the tutors were required to adapt their teaching style to each unique learner, selectively determining the learning materials to cover. The tutoring sessions were held in an audioonly setting, and the transcriptions of these sessions were obtained with the assistance of Whisper (Radford et al., 2023).\\n\\nThe dataset contains 112 tutoring sessions\\\\*, as outlined in Table 1. On average, each session consisted of roughly 105.7 turns. Analysis reveals that the utterances made by tutors in a single turn contained an average of 31.7 words, while the student\\u2019s utterances were more concise, averaging 8.2 words per utterance.\\nIn order to confrm the educational signifcance of the tutoring sessions, students were required to take a pre-test and post-test surrounding these sessions. Drawing upon the computation of the normalized learning gain, the average result was fount to be 0.089, demonstrating the tutoring sessions\\u2019 effectiveness in enhancing the students\\u2019 English profciency. A detailed explanation about the pre\\/post-test design and the evaluation of learning gain from these tests is described in Appendix A and Appendix B, respectively. Additionally, a feedback survey was deployed to understand their perspectives and feelings towards the courses. Overall, the feedback suggested a general contentment with the educational experience provided. For instance, for the questions \\u201cTo what extent did you fnd the class satisfactory?\\u201d, \\u201cHow suitable for you was the teaching method employed by the tutor during the class?\\u201d, \\u201cWas the class conducted with consideration for your linguistic background and cultural understanding?\\u201d, the respondents indicated high approval with average scores of 4.65, 4.60, and 4.68 out of a possible 5, respectively. These results support the pedagogical excellence of our dataset.\"}\n{\"section_title\":\"6.2 Evaluation metric\",\"section_content\":\"We conducted evaluations of the models based on our framework, focusing on two main aspects. Firstly, we evaluated the accuracy and invariability of tutor act predictions. For accuracy, we assessed the rate at which the model\\u2019s predicted tutor act aligned with the actual act selected by the tutor in the test set. For invariability, we noted the frequency of each selected tutor act and calculated the mean absolute difference from a target count of 10.\\nSecondly, we assessed the generated utterances. To measure the similarity between the generated and target tutor utterances, we utilized the sacrebleu implementation of BLEU(sBLEU) (Post, 2018) and BERT Score (Zhang\\\\* et al., 2020) using bert-base-multilingual-cased checkpoint. We note that the fne-tuned model sequentially predicted tutor acts and generated utterances based on these predictions. Additionally, we measured the coherence between generated utterances and previous ones in the given dialogue context using embedding similarity, specifcally relying on OpenAI\\u2019s text embedding(text-embedding-3-large).\"}\n{\"section_title\":\"6.5 Example of Interactive Evaluation\",\"section_content\":\"Our results primarily focus on static evaluation, where we predict the next tutor act and generate a corresponding response in one step for the test scenarios. However, a complete evaluation of the tutoring system, developed using our proposed models, necessitates interactive assessment with human students. This aspect of evaluation will be subjected to further study. Regardless, we offer a sneak peak into how an interaction plays out between a human and two tutoring models, namely GPT-4 (1-shot) and our fne-tuned model.\\nThe dialogue examples are included in Appendix H. Generally, when interacting with our tutoring systems, GPT-4 (1-shot) tends to produce lengthier responses, focusing mainly on transferring knowledge to students. Conversely, our fne-tuned model generates concise responses and actively promotes student participation. An interesting observation is that when a student insists that an incorrect answer is correct, GPT-4 maintains its answer, yet appears to accept the student\\u2019s assertion (t.teach.emphasis). In contrast, our fne-tuned model re-emphasizes the correct answer (t.teach.repair), thereby highlighting the student\\u2019s error.\"}\n{\"section_title\":\"8 Limitations\",\"section_content\":\"Despite the encouraging results, our study has some limitations. First, our project lacks an interactive evaluation, left as future research direction. A formal evaluation of complete tutoring systems through human study would provide useful insights into their effcacy. Second, we were unable to utilize larger parameter models like LLaMa 70b (Touvron et al., 2023), which could potentially improve the teaching capabilities of CITS. This restriction is worth considering for future studies, particularly with advancing computational resources and technologies. Finally, the use of diverse instruction tuning tasks for multi-task modeling, using existing datasets and data augmentation, is not covered in this study. We believe this aspect carries opportunities for more nuanced model development and will be explored in subsequent work.\"}\n{\"section_title\":\"1 Introduction\",\"section_content\":\"As Large Language Models (LLMs) such as GPT (Achiam et al., 2023) revolutionize the feld of natural language generation, both researchers and practitioners have put an increasing amount of effort into developing Conversational Intelligent Tutoring Systems (CITS) that leverage the generative capabilities of LLM\\u2019s (Tack and Piech, 2022; Abdelghani et al., 2022; Park et al., 2024; Lee et al., 2023). Specifcally, LLMs have the potential to teach English as a Second\\/Foreign Language (ESL\\/EFL), for they may serve as readilyavailable tutors that can emulate native-speaking contexts (Park et al., 2024; Lee et al., 2023).\\nHowever, most CITS proposed in literature for teaching ESL are restricted in scope and lack pedagogical depth. For example, works based on CIMA dataset (Stasaski et al., 2020) consider toy concepts of colored shapes and prepositions. Possibly due to limited scope, CIMA only considers a fve tutor act classes (\\u201chint\\u201d, \\u201cquestion\\u201d, \\u201ccorrection\\u201d, \\u201cconfrmation\\u201d, and \\u201cother\\u201d). Similarly, the TSCC dataset (Caines et al., 2022) only considers abstract tutor act classes such as \\u201cscaffolding\\u201d, and does not consider a more granular set of teaching strategies (e.g., inferential clues, teaching synonyms or antonyms, etc.). Consequently, models trained on CIMA (Stasaski et al., 2020) and TSCC (Caines et al., 2022) are limited to employing simplistic instructional strategies (Macina et al., 2023b).\\nThe goal of our work is to develop CITS that can teach ESL by applying pedagogically meaningful teaching strategies adaptively to student\\u2019s needs. To do so, we designed a tutoring session that focuses on comprehending a real news article, covering vocabulary, grammar, and relevant cultural contexts. Based on this, we construct a BIlingual PEDagogically-informed Tutoring Dataset (BIPED). For BIPED, we collected a bilingual, oneon-one human-to-human tutoring dataset. Thereafter, we analyzed the dataset post-hoc from a pedagogical viewpoint and developed a categorization of dialogue acts, which comprises 34 tutor acts and 9 student acts. Finally, we annotated the data using the defned dialogue act categories.\\nAs for the development of CITS, we employ the framework (Macina et al., 2023b; Wang et al., 2023a) whereby the LLM frst chooses the suitable tutor act, then generates the corresponding utterance. We believe this approach enables the model to generate a more focused response that does not deviate from the chosen tutor intent. We consider two implementations of such CITS, one based on GPT-4 prompting, and another based on fne-tuning SOLAR-KO 10.7B (L. Junbum, 2024), which is a public model trained on a Korean corpus. For GPT-4, our dataset is used as examples for in-context learning. For fne-tuning, we explored a multi-task learning approach, where the model is instruction-tuned to carry out tutor act prediction and response generation, as well as other tasks for context grounding.\\n\\nIn our experiments, we show through various metrics that the implemented models are capable of mimicking human teacher\\u2019s utterance style, as well as their pedagogical strategies. Specifcally, we show that our models choose appropriate and diverse tutor acts, and generate human-like utterances, as measured by sentence similarity metrics.\\nThe contributions of our paper are as follows:   \\n\\u2022 We provide BIPED, a dataset curated from bilingual human-to-human tutoring dialogues that come annotated with specifc tutoring acts. Importantly, the lesson topic is complex enough to require sophisticated pedagogical methods.   \\n\\u2022 We implement two CITS based on BIPED. In particular, we explore both in-context learning and fne-tuning approaches. It is the pioneering work in utilizing instruction tuning techniques in the development of CITS.   \\n\\u2022 We provide experimental results demonstrating the implemented models\\u2019 ability to mimic human tutors.\"}\n{\"section_title\":\"6.4 Results\",\"section_content\":\"The fndings from our experiment, illustrated in the Table 3, are compared against various models ranging from base GPT to fne-tuned models. Ground-truth represents the reformulated data gathered from human tutoring present in the test set. Base GPT in Table 3 corresponds to the GPT-4 model bereft of any tutor act classifcation or our human tutoring examples, where its prompt is given in Appendix F. We have also drawn a comparison involving GPT-3.5(gpt-3.5-turbo-16) and GPT-4 in a zero-shot and one-shot confguration. While they all adhere to the identical prompt structure, (as seen in Appendix F), they diverge in aspects such as model compatibility and whether an example scenario is included. Lastly, we compared our two fne-tuned models. Fine-tuned refers to our instruction-tuned model, discussed in the method section 5, which was trained with instruction tasks 1 through 4. Conversely, \\u2019Fine-tuned (ablation)\\u2019 refers to the model trained with instruction tasks 1 and 2 only. We also included a comparison with a potential baseline, denoted as \\u2019Fine-tuned (baseline)\\u2019. This model was trained to sequentially generate the following tutor act and corresponding utterance, conditioned on the given dialogue context without any instructions. This approach is similar to MATHDIAL (Macina et al., 2023a), where the tutoring model was trained to generate utterances given the context and tutor act only.\\n\\nIn assessing the tutor act criteria, our fne-tuned model outperforms other models in both accuracy and invariability as shown in Table 3. Although the accuracy of 0.259 may initially appear low, it\\u2019s important to consider the complexity of choosing from amongst 34 distinct tutor acts. Moreover, a lower invariability score of 5.273 is indicative of our fne-tuned model\\u2019s ability to utilize a wider array of tutor acts, thereby demonstrating more diverse pedagogical approaches. While the invariability score provides one aspect of variability, Figure 3 presents a distribution of chosen tutor acts for the comparative models, which offers a more comprehensive view. Clearly, our fne-tuned model exhibits the greatest number of distinct tutor act classes.\\n\\nWith respect to utterance-related metrics, our fne-tuned model delivers outstanding performances. It records the highest sBLEU score at 15.874 and BERTScore at 0.716, demonstrating its commendable ability in generating utterances that closely mirror the target tutor utterances. While the embedding similarity score of our fne-tuned model is slightly lower than that of GPT-3.5 (1-shot), it still exhibits higher coherence between individual utterances and their corresponding dialogue context.\\nIn terms of the length of the generated utterances, our model closely mimics the length of tutor utterances, whereas the general GPT models often produce unnecessarily long responses. We interpret this as positive, based on the assumption that the appropriate length of a tutor\\u2019s utterance plays a vital role in maintaining student engagement.\\nLastly, the fne-tuned model, trained with tasks 1 through 4, has outperformed the ablation model, which was trained with only partial instruction tasks, and the baseline model, which used simple conditional generation, across all evaluated metrics. This outcome highlights the added value of integrating additional instruction tasks (i.e., tasks 3 and 4) for improved tutoring performance.\"}\n{\"section_title\":\"5.2 Instruction Fine-tuning\",\"section_content\":\"We consider instruction-tuning a pre-trained LLM on the dataset introduced in Section 3. Our goal is to demonstrate that, with properly curated datasets and appropriate fne-tuning methods, we may enable open-source models to rival GPT-4\\u2019s performance. We instruction-tuned open-sourced LLM on four sub-tasks, each of which we detail below.\"}\n{\"section_title\":\"C Development Process of the Tutor Act Taxonomy\",\"section_content\":\"The process that we followed to develop the tutor act taxonomy is outlined below:\\n\\u2022 (Step 1) We started by conducting a comprehensive literature review to provide a preliminary set of tutor acts. We included papers on task-oriented dialogue, open-domain dialogue, and intelligent tutoring systems (Samei et al., 2015; Stasaski et al., 2020; Caines et al., 2022; Tan et al., 2023; Macina et al., 2023a) in our review. We also considered papers and books relating to ESL\\/EFL teaching methods (Brown, 2014; Brown and Lee, 2015). This helped us to form an initial set of possible tutor acts.   \\n\\u2022 (Step 2) Subsequently, fve researchers and two experienced tutors were engaged to delineate fve primary categories which encapsulated all the candidates. The group also worked on clustering tutor acts that pertained to each category.   \\n\\u2022 (Step 3) To verify our initially-developed tutor acts, we organized pilot tutoring sessions with seven students and collected a sample tutoring dataset. We then jointly labeled this data based on the classifcations determined in Step 2.   \\n\\u2022 (Step 4) For utterances that were diffcult to label, we began a process to add new labels as necessary.   \\n\\u2022 (Step 5) At the same time, we tested the GPT4\\u2019s ability to generate appropriate utterances for each tutor acts. We combined broader acts where the language model was already performing well, such as under the \\\"General\\\" and \\\"Operational\\\" categories. On the other hand, in areas where the performance was under par, particularly in the \\\"Teaching\\\" category, we concentrated our efforts on refning the categorization of our tutor acts. Our goal was to better enable the LLM to use a broad array of teaching methods. This led us to defne 22 specifc tutor acts within the Teaching category.\"}\n{\"section_title\":\"Controllability\",\"section_content\":\"More importantly, the proposed framework allows for greater controllability of CITS. By conditioning the LLM to a specifc tutor act class, we ensure more focused response generation without deviation from the target act. We expect this to be essential when generating more sophisticated responses (e.g., teaching etymology, code-mixing), for these are sparsely distributed compared to more generic responses such as simple direct answer as shown in Figure 2.\\nMoreover, a crucial aspect for controllability is the model\\u2019s amenability to improvement via continual refnement. Our framework allows for a divide-and-conquer approach for model refnement; namely, given dialogue context and student response, instead of requiring the human expert to generate a full response, we may let them simply label the best teacher response class (for instruction tuning), or a ranked list of teacher response classes (for RLHF). As for improving response generation, we may consider sophisticated data augmentation schemes, where we synthesize responses for a given tutor act class based on retrieved samples of the same class.\"}\n{\"section_title\":\"7 Conclusion\",\"section_content\":\"In this study, we demonstrated the effectiveness of our proposed models in developing conversational intelligent tutoring systems for ESL learners. They excelled in replicating the utterance style of human tutors and implementing various and appropriate pedagogical strategies. Much of this improvement can be attributed to our newly constructed Bilingual and Pedagogically-Informed Tutoring Dataset (BIPED). Additionally, our two-step framework and the use of four instruction tuning tasks further contributed to the models\\u2019 improvement.\"}\n\n... # only display 10 rows in JSON format, more are truncated due to length constraint based on max_rows (10)"}
{"role": "assistant", "content": "[Thought]: The retrieved sections contain information about the evaluation metrics and the performance of the finetuned model compared to the GPT baseline. Specifically, the section \"6.4 Results\" provides detailed metrics and comparisons. I will extract the relevant information from this section to identify the evaluation metric that demonstrates the greatest improvement.\n[Action]:\nGenerateAnswer(answer='sBLEU')"}
{"role": "user", "content": "[Observation]: sBLEU"}
